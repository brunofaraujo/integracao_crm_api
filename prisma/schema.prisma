generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model AgendaCRM {
  Id                 Int       @id(map: "PK__AgendaCR__3214EC076DC40D9A") @default(autoincrement())
  InstanciaId        Int?
  EmpresaId          Int?
  DataInclusao       DateTime? @db.DateTime
  PessoaId           Int?
  DataAgendamento    DateTime? @db.Date
  HoraAgendamento    String?   @db.NVarChar(5)
  DataAgendamentoFim DateTime? @db.Date
  HoraAgendamentoFim String?   @db.NVarChar(5)
  Colaborador        String?   @db.NVarChar(100)
  StatusAgendamento  String?   @db.NVarChar(50)
  MotivoCancelamento String?   @db.NVarChar(3000)
  EstadoId           Int?
  CidadeId           Int?
  Produto            String?   @db.NVarChar(200)
  UnidadeNegocio     String?   @db.NVarChar(100)
  Motivo             String?   @db.VarChar(100)
  Tipo               String?   @db.VarChar(100)
  Area               String?   @db.VarChar(100)
}

model AgendaOrquestra {
  Id              Int              @id(map: "PK_AgendaOrquestra") @default(autoincrement())
  Instancia       Int?
  NegocioId       Int?
  CNPJ            String?          @db.NVarChar(20)
  UnidadeId       Int?
  EmpresaId       Int?
  ResponsavelId   Int?
  DataInicio      DateTime?        @db.DateTime
  DataTermino     DateTime?        @db.DateTime
  HoraInicio      String?          @db.VarChar(5)
  HoraTermino     String?          @db.VarChar(5)
  Status          String?          @db.VarChar(500)
  Link            String?          @db.VarChar(500)
  Atualizacao     DateTime?        @db.DateTime
  ServicoId       Int?
  EntidadeId      Int?
  unidadeMovel    Boolean?
  NaturezaProduto NaturezaProduto? @relation(fields: [NegocioId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_AgendaOrquestraNegocio")
}

model AgendaServico {  
  Id                       Int                     @id(map: "PK_AgendaServico") @default(autoincrement())
  InstanciaId              Int?
  PropostaId               Int?
  EmpresaId                Int?
  UnidadeOrganizacionalId  Int?
  CentroResponsabilidadeId Int?
  DataInclusao             DateTime?               @db.DateTime
  PessoaId                 Int?
  ProdutoId                Int?
  Quantidade               Int?
  DataAgendamento          DateTime?               @db.DateTime
  HoraAgendamento          String?                 @db.NVarChar(5)
  DataAgendamentoFim       DateTime?               @db.DateTime
  HoraAgendamentoFim       String?                 @db.NVarChar(5)
  Recorrente               Boolean?
  RecursoId                Int?
  StatusAgendamento        Int?
  LocalAtividade           String?                 @db.NVarChar(3000)
  MotivoCancelamento       String?                 @db.NVarChar(3000)
  DescricaoEtapa           String?                 @db.NVarChar(3000)
  AgendaAnteriorId         Int?
  TipoAgenda               Int?
  Descricao                String?                 @db.VarChar(1000)
  UnidadeNegocioId         Int?
  CentroResponsabilidade   CentroResponsabilidade? @relation(fields: [CentroResponsabilidadeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_AgendaServico_CentroResponsabilidade")
  Empresa                  Empresa?                @relation(fields: [EmpresaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_AgendaServico_Empresa")
  Pessoa                   Pessoa?                 @relation(fields: [PessoaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_AgendaServico_Pessoa")
  Produto                  Produto?                @relation(fields: [ProdutoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_AgendaServico_Produto")
  Recurso                  Recurso?                @relation(fields: [RecursoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_AgendaServico_Recurso")
  UnidadeNegocio           UnidadeNegocio?         @relation(fields: [UnidadeNegocioId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_AgendaServico_UnidadeNegocio")
  UnidadeOrganizacional    UnidadeOrganizacional?  @relation(fields: [UnidadeOrganizacionalId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_AgendaServico_UnidadeOrganizacional")
  PropostaItemExecucao     PropostaItemExecucao[]
}

model AgendaSSI {
  Id                       Int                     @id(map: "PK_AgendaSSI") @default(autoincrement())
  InstanciaId              Int?
  PropostaId               Int?
  EmpresaId                Int?
  UnidadeOrganizacionalId  Int?
  CentroResponsabilidadeId Int?
  DataInclusao             DateTime?               @db.DateTime
  PessoaId                 Int?
  ProdutoId                Int?
  Quantidade               Int?
  DataAgendamento          DateTime?               @db.DateTime
  HoraAgendamento          String?                 @db.NVarChar(5)
  DataAgendamentoFim       DateTime?               @db.DateTime
  HoraAgendamentoFim       String?                 @db.NVarChar(5)
  Recorrente               Boolean?
  RecursoId                Int?
  StatusAgendamento        Int?
  LocalAtividade           String?                 @db.NVarChar(500)
  MotivoCancelamento       String?                 @db.NVarChar(3000)
  DescricaoEtapa           String?                 @db.NVarChar(3000)
  AgendaAnteriorId         Int?
  TipoAgenda               Int?
  Descricao                String?                 @db.VarChar(1000)
  UnidadeNegocioId         Int?
  CentroResponsabilidade   CentroResponsabilidade? @relation(fields: [CentroResponsabilidadeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_AgendaSSI_CentroResponsabilidade")
  Empresa                  Empresa?                @relation(fields: [EmpresaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_AgendaSSI_Empresa")
  Pessoa                   Pessoa?                 @relation(fields: [PessoaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_AgendaSSI_Pessoa")
  Produto                  Produto?                @relation(fields: [ProdutoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_AgendaSSI_Produto")
  Recurso                  Recurso?                @relation(fields: [RecursoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_AgendaSSI_Recurso")
  UnidadeNegocio           UnidadeNegocio?         @relation(fields: [UnidadeNegocioId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_AgendaSSI_UnidadeNegocio")
  UnidadeOrganizacional    UnidadeOrganizacional?  @relation(fields: [UnidadeOrganizacionalId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_AgendaSSI_UnidadeOrganizacional")
  PropostaItemExecucao     PropostaItemExecucao[]
}

model AgendaSST {
  Id                 Int       @id(map: "PK__AgendaSS__3214EC0743EC8EE6") @default(autoincrement())
  InstanciaId        Int?
  EmpresaId          Int?
  DataInclusao       DateTime? @db.DateTime
  PessoaId           Int?
  DataAgendamento    DateTime? @db.Date
  HoraAgendamento    String?   @db.NVarChar(5)
  DataAgendamentoFim DateTime? @db.Date
  HoraAgendamentoFim String?   @db.NVarChar(5)
  Colaborador        String?   @db.NVarChar(100)
  StatusAgendamento  String?   @db.NVarChar(50)
  MotivoCancelamento String?   @db.NVarChar(3000)
  EstadoId           Int?
  CidadeId           Int?
  Produto            String?   @db.NVarChar(200)
  UnidadeNegocio     String?   @db.NVarChar(100)
}

model AgendaTransporte {
  ID             Int       @id(map: "PK_AgendaTransporte") @default(autoincrement())
  Processo       Int?
  DtStartDate    DateTime? @db.DateTime
  CodFlow        Int?
  Solicitante    String?   @db.VarChar(Max)
  TipoVeiculo    String?   @db.VarChar(Max)
  DataSaida      DateTime? @db.Date
  Ano            Int?
  Mes            Int?
  HoraSaida      String?   @db.VarChar(500)
  DataRetorno    DateTime? @db.Date
  HoraRetorno    String?   @db.VarChar(50)
  LocalSaida     String?   @db.VarChar(Max)
  Destino        String?   @db.VarChar(Max)
  QtdPassageiros Int?
  Entidade       String?   @db.VarChar(500)
  NomeEntidade   String?   @db.VarChar(Max)
  Unidade        String?   @db.VarChar(500)
  NomeUnidade    String?   @db.VarChar(Max)
  Centro         String?   @db.VarChar(500)
  NomeCentro     String?   @db.VarChar(Max)
  Motorista      String?   @db.VarChar(Max)
  Veiculo        String?   @db.VarChar(Max)
  DadosCarga     String?   @db.VarChar(Max)
  Descricao      String?   @db.VarChar(Max)
  Favorecido     String?   @db.VarChar(Max)
  Status         String?   @db.VarChar(Max)
}

model AgendaUnidadeMovelEquipamento {
  Id                 Int             @id(map: "PK_AgendaUnidadeMovelEquipamento") @default(autoincrement())
  InstanciaId        Int?
  PropostaId         Int?
  PessoaId           Int?
  UnidadeNegocioId   Int?
  RecursoId          Int?
  DataSaida          DateTime?       @db.DateTime
  DataRetorno        DateTime?       @db.DateTime
  Quantidade         Int?
  Placa              String?         @db.NVarChar(50)
  DataInclusao       DateTime?       @db.DateTime
  StatusAgendamento  Int?
  MotivoCancelamento String?         @db.NVarChar(3000)
  AgendaAnteriorId   Int?
  Pessoa             Pessoa?         @relation(fields: [PessoaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_AgendaUnidadeMovelEquipamento_Pessoa")
  Recurso            Recurso?        @relation(fields: [RecursoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_AgendaUnidadeMovelEquipamento_Recurso")
  UnidadeNegocio     UnidadeNegocio? @relation(fields: [UnidadeNegocioId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_AgendaUnidadeMovelEquipamento_UnidadeNegocio")
}

model AgrupadorCentro {
  Id                     Int                      @id(map: "PK_AgrupadorCentro") @default(autoincrement())
  IntegraKey             String?                  @db.NVarChar(100)
  Codigo                 String?                  @db.NVarChar(20)
  Nome                   String?                  @db.NVarChar(100)
  Descricao              String?                  @db.NVarChar(Max)
  Ativo                  Int?
  Superior               Int?
  Nivel                  Int?
  OptimisticLockField    Int?
  GCRecord               Int?
  VivelRelatorio         Boolean?
  VisivelRelatorio       Boolean?
  EmpresaId              Int?
  AgrupadorCentro        AgrupadorCentro?         @relation("AgrupadorCentroToAgrupadorCentro", fields: [Superior], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_AgrupadorCentro_Superior")
  other_AgrupadorCentro  AgrupadorCentro[]        @relation("AgrupadorCentroToAgrupadorCentro")
  CentroResponsabilidade CentroResponsabilidade[]
  OrcamentoRateado       OrcamentoRateado[]
  RateioCentro           RateioCentro[]
  UnidadeAvaliacao       UnidadeAvaliacao[]
  ValorIndicador         ValorIndicador[]
}

model AgrupadorConta {
  Id                   Int                 @id(map: "PK_AgrupadorConta") @default(autoincrement())
  IntegraKey           String?             @db.NVarChar(100)
  Codigo               String?             @db.NVarChar(20)
  Nome                 String?             @db.NVarChar(100)
  Descricao            String?             @db.NVarChar(Max)
  Ativo                Int?
  Superior             Int?
  Nivel                Int?
  Origemconta          Int?
  EmpresaId            Int?
  AgrupadorConta       AgrupadorConta?     @relation("AgrupadorContaToAgrupadorConta", fields: [Superior], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_AgrupadorConta_Superior")
  other_AgrupadorConta AgrupadorConta[]    @relation("AgrupadorContaToAgrupadorConta")
  ContaOrcamentaria    ContaOrcamentaria[]
  OrcamentoRateado     OrcamentoRateado[]
}

model AgrupadorUnidade {
  Id                     Int                     @id(map: "PK_AgrupadorUnidade") @default(autoincrement())
  IntegraKey             String?                 @db.NVarChar(100)
  Codigo                 String?                 @db.NVarChar(20)
  Nome                   String?                 @db.NVarChar(100)
  Descricao              String?                 @db.NVarChar(Max)
  Ativo                  Int?
  Nivel                  Int?
  Superior               Int?
  Sigla                  String?                 @db.NVarChar(100)
  EmpresaId              Int?
  AgrupadorUnidade       AgrupadorUnidade?       @relation("AgrupadorUnidadeToAgrupadorUnidade", fields: [Superior], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_AgrupadorUnidade_Superior")
  other_AgrupadorUnidade AgrupadorUnidade[]      @relation("AgrupadorUnidadeToAgrupadorUnidade")
  OrcamentoRateado       OrcamentoRateado[]
  RateioUnidade          RateioUnidade[]
  UnidadeAvaliacao       UnidadeAvaliacao[]
  UnidadeNegocio         UnidadeNegocio[]
  UnidadeOrganizacional  UnidadeOrganizacional[]
  ValorIndicador         ValorIndicador[]
}

model AjusteFinanceiro {
  Id              Int       @id(map: "PK_AjusteFinanceiro") @default(autoincrement())
  ProjetoId       Int?
  Descricao       String?   @db.NVarChar(500)
  NumeroDocumento String?   @db.NVarChar(100)
  Ano             Int?
  DataAtualizacao DateTime? @db.DateTime
  Valor           Float?    @db.Money
  DespesaId       Int?
  ReceitaId       Int?
  TipoValor       Int?
  Despesa         Despesa?  @relation(fields: [DespesaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_AjusteFinanceiroDespesa")
  Projeto         Projeto?  @relation(fields: [ProjetoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_AjusteFinanceiroProjeto")
}

model Aluno {
  Id                        Int     @id(map: "PK_Aluno") @default(autoincrement())
  UnidadeEducacao           String? @db.NVarChar(200)
  RegistroAcademico         String? @db.NVarChar(100)
  Nome                      String? @db.NVarChar(200)
  DataNascimento            String? @db.NVarChar(50)
  Naturalidade              String? @db.NVarChar(100)
  Nacionalidade             String? @db.NVarChar(100)
  Endereco                  String? @db.NVarChar(200)
  Cep                       String? @db.NVarChar(20)
  TipoEndereco              String? @db.NVarChar(20)
  Logradouro                String? @db.NVarChar(100)
  Numero                    String? @db.NVarChar(10)
  Complemento               String? @db.NVarChar(100)
  Bairro                    String? @db.NVarChar(100)
  Cidade                    String? @db.NVarChar(100)
  Estado                    String? @db.NVarChar(100)
  Pais                      String? @db.NVarChar(100)
  Telefone1                 String? @db.NVarChar(50)
  Telefone2                 String? @db.NVarChar(50)
  ResponsavelFinanceiro     String? @db.NVarChar(200)
  TipoRelacionamento        String? @db.NVarChar(50)
  ResponsavelAcademico      String? @db.NVarChar(200)
  EmailResponsavelAcademico String? @db.NVarChar(100)
}

model Area {
  Id                Int                 @id(map: "PK_Area") @default(autoincrement())
  Codigo            String?             @db.NVarChar(20)
  Nome              String?             @db.NVarChar(100)
  Descricao         String?             @db.NVarChar(3000)
  Ativo             Int?
  ProcessoAtividade ProcessoAtividade[]
}

model AreaContato {
  Id            Int             @id(map: "PK_AreaContato") @default(autoincrement())
  Codigo        String?         @db.VarChar(50)
  Nome          String?         @db.VarChar(500)
  Ativo         Int?
  PessoaContato PessoaContato[]
}

model AreaModalidadeCentro {
  Id                       Int                     @id(map: "PK_AreaModalidadeCentro") @default(autoincrement())
  AreaProdutoId            Int?
  ModalidadeId             Int?
  CentroResponsabilidadeId Int?
  CentroResponsabilidade   CentroResponsabilidade? @relation(fields: [CentroResponsabilidadeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_AreaModalidadeCentro_CentroResponsabilidade")
  AreaProduto              AreaProduto?            @relation(fields: [AreaProdutoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_AreaModalidadeCentroAreaProduto")
  Modalidade               Modalidade?             @relation(fields: [ModalidadeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_AreaModalidadeCentroModalidade")
}

model AreaProduto {
  Id                     Int                      @id(map: "PK_AreaProduto") @default(autoincrement())
  Codigo                 String?                  @db.NVarChar(20)
  Nome                   String?                  @db.NVarChar(100)
  Descricao              String?                  @db.NVarChar(Max)
  EmpresaId              Int?
  Ativo                  Int?
  AreaModalidadeCentro   AreaModalidadeCentro[]
  Empresa                Empresa?                 @relation(fields: [EmpresaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_AreaProduto_Empresa")
  CentroResponsabilidade CentroResponsabilidade[]
  Recurso                Recurso[]
}

model Areas {
  Id                            Int                             @id(map: "PK_Areas") @default(autoincrement())
  Codigo                        String?                         @db.NVarChar(20)
  Nome                          String?                         @db.NVarChar(100)
  Descricao                     String?                         @db.NVarChar(3000)
  Ativo                         Int?
  AreaSetorCargo                AreaSetorCargo[]
  AreaSetorResponsavel          AreaSetorResponsavel[]
  Projeto                       Projeto[]
  ReservaAgendamentoEquipamento ReservaAgendamentoEquipamento[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model Areas171 {
  Id       Int     @default(autoincrement())
  Area     String? @db.VarChar(255)
  Entidade String? @db.VarChar(255)
  Unidade  String? @db.VarChar(255)

  @@ignore
}

model AreaSetorCargo {
  Id                    Int                  @id(map: "PK_AreaSetorCargo") @default(autoincrement())
  Ordem                 Int?
  EmpresaId             Int?
  AreaId                Int?
  SetorId               Int?
  CargoId               Int?
  EntidadeOrganogramaId Int?
  Areas                 Areas?               @relation(fields: [AreaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_AreaSetorCargo_Area")
  Cargo                 Cargo?               @relation(fields: [CargoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_AreaSetorCargo_Cargo")
  Empresa               Empresa?             @relation(fields: [EmpresaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_AreaSetorCargo_Empresa")
  EntidadeOrganograma   EntidadeOrganograma? @relation(fields: [EntidadeOrganogramaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_AreaSetorCargo_EntidadeOrganograma")
  Setor                 Setor?               @relation(fields: [SetorId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_AreaSetorCargo_Setor")
}

model AreaSetorResponsavel {
  Id            Int      @id(map: "PK_AreaSetorResponsavel") @default(autoincrement())
  Ordem         Int?
  AreaId        Int?
  SetorId       Int?
  ResponsavelId Int?
  Areas         Areas?   @relation(fields: [AreaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_AreaSetorResponsavel_Area")
  Recurso       Recurso? @relation(fields: [ResponsavelId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_AreaSetorResponsavel_Responsavel")
  Setor         Setor?   @relation(fields: [SetorId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_AreaSetorResponsavel_Setor")
}

model AspNetRoleClaims {
  Id          Int         @id(map: "PK_AspNetRoleClaims") @default(autoincrement())
  ClaimType   String?     @db.NVarChar(Max)
  ClaimValue  String?     @db.NVarChar(Max)
  RoleId      Int
  AspNetRoles AspNetRoles @relation(fields: [RoleId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_AspNetRoleClaims_AspNetRoles_RoleId")
}

model AspNetRoles {
  Id               Int                @id(map: "PK_AspNetRoles") @default(autoincrement())
  ConcurrencyStamp String?            @db.NVarChar(Max)
  Name             String?            @db.NVarChar(256)
  NormalizedName   String?            @db.NVarChar(256)
  AspNetRoleClaims AspNetRoleClaims[]
  AspNetUserRoles  AspNetUserRoles[]
  ModuloPerfil     ModuloPerfil[]
}

model AspNetUserClaims {
  Id          Int         @id(map: "PK_AspNetUserClaims") @default(autoincrement())
  ClaimType   String?     @db.NVarChar(Max)
  ClaimValue  String?     @db.NVarChar(Max)
  UserId      Int
  AspNetUsers AspNetUsers @relation(fields: [UserId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_AspNetUserClaims_AspNetUsers_UserId")
}

model AspNetUserLogins {
  LoginProvider       String      @db.NVarChar(450)
  ProviderKey         String      @db.NVarChar(450)
  ProviderDisplayName String?     @db.NVarChar(Max)
  UserId              Int
  AspNetUsers         AspNetUsers @relation(fields: [UserId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_AspNetUserLogins_AspNetUsers_UserId")

  @@id([LoginProvider, ProviderKey], map: "PK_AspNetUserLogins")
}

model AspNetUserRoles {
  UserId      Int
  RoleId      Int
  AspNetRoles AspNetRoles @relation(fields: [RoleId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_AspNetUserRoles_AspNetRoles_RoleId")
  AspNetUsers AspNetUsers @relation(fields: [UserId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_AspNetUserRoles_AspNetUsers_UserId")

  @@id([UserId, RoleId], map: "PK_AspNetUserRoles")
}

model AspNetUsers {
  Id                                              Int                  @id(map: "PK_AspNetUsers") @default(autoincrement())
  AccessFailedCount                               Int
  Age                                             Int
  ConcurrencyStamp                                String?              @db.NVarChar(Max)
  Email                                           String?              @db.NVarChar(256)
  EmailConfirmed                                  Boolean
  FirstName                                       String?              @db.NVarChar(Max)
  LastName                                        String?              @db.NVarChar(Max)
  LockoutEnabled                                  Boolean
  LockoutEnd                                      DateTime?            @db.DateTimeOffset
  NormalizedEmail                                 String?              @db.NVarChar(256)
  NormalizedUserName                              String?              @db.NVarChar(256)
  PasswordHash                                    String?              @db.NVarChar(Max)
  PhoneNumber                                     String?              @db.NVarChar(Max)
  PhoneNumberConfirmed                            Boolean
  SecurityStamp                                   String?              @db.NVarChar(Max)
  TwoFactorEnabled                                Boolean
  UserName                                        String?              @db.NVarChar(256)
  Nome                                            String?              @db.VarChar(255)
  Empresa                                         Int?
  Ano                                             Int?
  RecursoId                                       Int?
  Cpf                                             String?              @db.VarChar(14)
  Layout                                          String?              @db.VarChar(3000)
  AspNetUserClaims                                AspNetUserClaims[]
  AspNetUserLogins                                AspNetUserLogins[]
  AspNetUserRoles                                 AspNetUserRoles[]
  AspNetUserTokens                                AspNetUserTokens[]
  Metodo_Metodo_UsuarioAtualizacaoIdToAspNetUsers Metodo[]             @relation("Metodo_UsuarioAtualizacaoIdToAspNetUsers")
  Metodo_Metodo_UsuarioCadastroIdToAspNetUsers    Metodo[]             @relation("Metodo_UsuarioCadastroIdToAspNetUsers")
  Modulo_Modulo_UsuarioAtualizacaoIdToAspNetUsers Modulo[]             @relation("Modulo_UsuarioAtualizacaoIdToAspNetUsers")
  Modulo_Modulo_UsuarioCadastroIdToAspNetUsers    Modulo[]             @relation("Modulo_UsuarioCadastroIdToAspNetUsers")
  PerfilMetodo                                    PerfilMetodo[]
  ResponsavelProjeto                              ResponsavelProjeto[]
}

model AspNetUserTokens {
  UserId        Int
  LoginProvider String      @db.NVarChar(450)
  Name          String      @db.NVarChar(450)
  Value         String?     @db.NVarChar(Max)
  AspNetUsers   AspNetUsers @relation(fields: [UserId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_AspNetUserTokens_AspNetUsers_UserId")

  @@id([UserId, LoginProvider, Name], map: "PK_AspNetUserTokens")
}

model AtividadeEconomica {
  Id              Int     @id(map: "PK_CNAE") @default(autoincrement())
  Codigo          String? @db.NVarChar(16)
  CodigoAuxiliar  String? @db.NVarChar(16)
  Nome            String? @db.NVarChar(500)
  Descricao       String? @db.NVarChar(2000)
  NivelHierarquia Int?
  Secao           String? @db.NVarChar(2)
  Divisao         String? @db.NVarChar(2)
  Grupo           String? @db.NVarChar(2)
  Classe          String? @db.NVarChar(2)
  SubClasse       String? @db.NVarChar(2)
  GrauRisco       Int?
}

model AtividadeFatorRisco {
  Id                  Int                @id(map: "PK_AtividadeFatorRisco") @default(autoincrement())
  ProcessoAtividadeId Int?
  RiscoFatorId        Int?
  Categoria           Int?
  ResultadoAvaliacao  String?            @db.VarChar(1000)
  Parecer             Int?
  ControleRiscoId     Int?
  Observacao          String?            @db.VarChar(Max)
  ProcessoAtividade   ProcessoAtividade? @relation(fields: [ProcessoAtividadeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProcessoAtividade_AtividadeFatorRisco")
  FatorRisco          FatorRisco?        @relation(fields: [RiscoFatorId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_RiscoFator_AtividadeFatorRisco")
  RiscoFatorRisco     RiscoFatorRisco[]
}

model Banco {
  Id                String @id(map: "PK_Bancos") @db.UniqueIdentifier
  CodigoCompensacao Int
  Nome              String @db.NVarChar(50)
}

model BatchProcess {
  Id                    Int     @id(map: "PK_BatchProcess") @default(autoincrement())
  dsusernamerequester   String? @db.NVarChar(500)
  dataInicialReferencia String? @db.NVarChar(100)
  empresaReferencia     String? @db.NVarChar(100)
  cnpjEmpresaReferencia String? @db.NVarChar(100)
  numeroDaProposta      String? @db.NVarChar(100)
  propostaId            String? @db.NVarChar(100)
  idRecurso             String? @db.NVarChar(100)
  classeServicoExecucao String? @db.NVarChar(100)
  loginRecurso          String? @db.NVarChar(100)
}

model Beneficiado {
  Id                         Int                  @id(map: "PK_Beneficiado") @default(autoincrement())
  CPF                        String?              @unique(map: "ICPF") @db.VarChar(20)
  Nome                       String?              @db.VarChar(255)
  NomePai                    String?              @db.VarChar(255)
  NomeMae                    String?              @db.VarChar(255)
  DataAtualizacao            DateTime?
  Responsavel                String?              @db.NVarChar(200)
  NumeroControle             String?              @db.NVarChar(20)
  Sexo                       Int?
  DataNascimento             DateTime?
  EnderecoRua                String?              @db.VarChar(200)
  EnderecoNumero             String?              @db.NVarChar(10)
  EnderecoComplemento        String?              @db.VarChar(200)
  EnderecoBairro             String?              @db.VarChar(200)
  EnderecoCep                String?              @db.NVarChar(10)
  EnderecoCidadeId           Int?
  EnderecoEstadoId           Int?
  ContatoCelular             String?              @db.NVarChar(15)
  ContatoEmail               String?              @db.NVarChar(100)
  ContatoTelefoneComercial   String?              @db.NVarChar(15)
  ContatoTelefoneResidencial String?              @db.NVarChar(15)
  ContatoObservacao          String?              @db.NVarChar(255)
  NumeroRG                   String?              @db.VarChar(50)
  NIT                        String?              @db.VarChar(50)
  EstadoCivil                Int?
  TipoCPF                    String?              @db.VarChar(1)
  PisPasep                   String?              @db.VarChar(50)
  TipoContratacao            Int?
  DataEmissaoCTPS            DateTime?
  SerieCTPS                  String?              @db.VarChar(50)
  NumeroCTPS                 String?              @db.VarChar(50)
  Naturalidade               String?              @db.VarChar(50)
  Cor                        String?              @db.VarChar(20)
  Deficiencia                String?              @db.VarChar(50)
  Gfip                       Int?
  EnderecoUnidade            String?              @db.VarChar(200)
  NumeroUnidade              String?              @db.VarChar(20)
  ComplementoUnidade         String?              @db.VarChar(200)
  BairroUnidade              String?              @db.VarChar(200)
  CidadeUnidadeId            Int?
  EstadoUnidadeId            Int?
  CepUnidade                 String?              @db.NVarChar(10)
  InscricaoUnidade           String?              @db.VarChar(50)
  TelefoneUnidade1           String?              @db.VarChar(20)
  TelefoneUnidade2           String?              @db.VarChar(20)
  TelefoneUnidade3           String?              @db.VarChar(20)
  TelefoneUnidade4           String?              @db.VarChar(20)
  NomeContatoUnidade         String?              @db.VarChar(100)
  AtividadeEconomicaId       Int?
  RazaoSocialUnidade         String?              @db.VarChar(50)
  CentroCusto                String?              @db.VarChar(50)
  DataUltimaMovimentacao     DateTime?            @db.DateTime
  CodigoUnidadeContratante   String?              @db.VarChar(20)
  RazaoSocial                String?              @db.VarChar(200)
  Cnpj                       String?              @db.VarChar(20)
  Turno                      String?              @db.VarChar(20)
  Cei                        String?              @db.VarChar(50)
  Funcao                     String?              @db.VarChar(100)
  RegimeRevezamento          String?              @db.VarChar(20)
  OrgaoExpedicaoRg           String?              @db.VarChar(200)
  GrauRisco                  String?              @db.VarChar(200)
  UfCtps                     String?              @db.VarChar(2)
  Escolaridade               Int?
  CodigoCategoriaESocialId   Int?
  MatriculaRh                String?              @db.VarChar(200)
  Genero                     Int?
  NomeSocial                 String?              @db.VarChar(200)
  TipoAdmissao               Int?
  TipoVinculo                Int?
  CnpjUnidade                String?              @db.VarChar(20)
  BeneficiadoEmpresa         BeneficiadoEmpresa[]
  Producao                   Producao[]
  ProducaoIndicador          ProducaoIndicador[]
}

model BeneficiadoEmpresa {
  Id             Int          @id(map: "PK_BeneficiadoEmpresa") @default(autoincrement())
  PessoaId       Int?
  BeneficiadoId  Int?
  Ativo          Int?
  DataEntrada    DateTime?
  DataSaida      DateTime?
  Unidade        String?      @db.VarChar(255)
  Situacao       Int?
  Matricula      String?      @db.VarChar(30)
  Setor          String?      @db.VarChar(80)
  DataAdmissao   DateTime?
  CBO            String?      @db.VarChar(50)
  Cargo          String?      @db.VarChar(80)
  DescricaoCargo String?      @db.VarChar(2000)
  Status         Int?
  Beneficiado    Beneficiado? @relation(fields: [BeneficiadoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_BeneficiadoEmpresaBeneficiado")
  Pessoa         Pessoa?      @relation(fields: [PessoaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_BeneficiadoEmpresaPessoa")

  @@unique([PessoaId, BeneficiadoId, Ativo], map: "IPessoaBeneficiado")
}

model Cargo {
  Id                       Int                        @id(map: "PK_Cargo") @default(autoincrement())
  Codigo                   String?                    @db.NVarChar(20)
  Nome                     String?                    @db.NVarChar(500)
  Descricao                String?                    @db.NVarChar(500)
  CodigoAuxiliar           String?                    @db.NVarChar(500)
  TipoVinculo              Int?
  Ativo                    Int?
  CBOId                    Int?
  EmpresaId                Int?
  ClasseCargoId            Int?
  TipoCargo                Int?
  GrupoCargoId             Int?
  AreaSetorCargo           AreaSetorCargo[]
  CBO                      CBO?                       @relation(fields: [CBOId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Cargo_CBO")
  ClasseCargo              ClasseCargo?               @relation(fields: [ClasseCargoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Cargo_ClasseCargo")
  Empresa                  Empresa?                   @relation(fields: [EmpresaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Cargo_Empresa")
  GrupoCargo               GrupoCargo?                @relation(fields: [GrupoCargoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Cargo_GrupoCargo")
  CargoNivelCargo          CargoNivelCargo[]
  PlanejamentoOrcamentario PlanejamentoOrcamentario[]
  ProcessoAtividade        ProcessoAtividade[]
  Recurso                  Recurso[]
}

model CargoContato {
  Id            Int             @id(map: "PK_CargoContato") @default(autoincrement())
  Codigo        String?         @db.VarChar(50)
  Nome          String?         @db.VarChar(500)
  Ativo         Int?
  PessoaContato PessoaContato[]
}

model CargoNivelCargo {
  Id                Int         @id(map: "PK_CargoNivelCargo") @default(autoincrement())
  CargoId           Int?
  NivelCargoId      Int?
  ValorPrevisto     Decimal?    @db.Decimal(14, 2)
  ValorRevisado     Decimal?    @db.Decimal(14, 2)
  ValorRetificado   Decimal?    @db.Decimal(14, 2)
  ValorSuplementado Decimal?    @db.Decimal(14, 2)
  ValorTransposto   Decimal?    @db.Decimal(14, 2)
  ValorRealizado    Decimal?    @db.Decimal(14, 2)
  Valor             Decimal?    @db.Decimal(14, 2)
  Versao            String?     @db.NVarChar(100)
  DataVersao        DateTime?   @db.DateTime
  Ativo             Int?
  GrupoCargoId      Int?
  Cargo             Cargo?      @relation(fields: [CargoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_CargoNivelCargo_Cargo")
  GrupoCargo        GrupoCargo? @relation(fields: [GrupoCargoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_CargoNivelCargo_GrupoCargo")
  NivelCargo        NivelCargo? @relation(fields: [NivelCargoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_CargoNivelCargo_NivelCargo")
}

model CargosFolha {
  Id         Int     @id(map: "PK_CargosFolha") @default(autoincrement())
  CACODCARGO String? @db.NVarChar(100)
  CADESCARGO String? @db.NVarChar(3000)
  CACBO      String?
  CATIPOSAL  String?
  CACODEMP   Int     @db.SmallInt
}

model CategoriaProjeto {
  Id        Int       @id(map: "PK_CategoriaProjeto") @default(autoincrement())
  Codigo    String?   @db.NVarChar(20)
  Nome      String?   @db.NVarChar(100)
  Descricao String?   @db.NVarChar(3000)
  Projeto   Projeto[]
}

model CategoriaUnidade {
  Id        Int       @id(map: "PK_CategoriaUnidade") @default(autoincrement())
  Descricao String?   @db.VarChar(100)
  Ativo     Int?
  Recurso   Recurso[]
}

model CBO {
  Id     Int      @id(map: "PK_CBO") @default(autoincrement())
  Codigo String?  @db.NVarChar(20)
  Nome   String?  @db.NVarChar(500)
  Ativo  Boolean?
  Cargo  Cargo[]
}

model CenarioAvaliacao {
  Id                                                                          Int                  @id(map: "PK_CenarioAvaliacao") @default(autoincrement())
  Codigo                                                                      String?              @db.NVarChar(20)
  Nome                                                                        String?              @db.NVarChar(500)
  Descricao                                                                   String?              @db.NVarChar(3000)
  Ano                                                                         Int?
  Mes                                                                         Int?
  DataAtualizacao                                                             DateTime?            @db.DateTime
  ScoreDesempenho                                                             Int?
  ScoreEvolucao                                                               Int?
  Tipo                                                                        Int?
  OrigemAvaliacao                                                             Int?
  SegmentoAvalicaoId                                                          Int?
  SegmentoValorizacaoId                                                       Int?
  SegmentoIndicador_CenarioAvaliacao_SegmentoAvalicaoIdToSegmentoIndicador    SegmentoIndicador?   @relation("CenarioAvaliacao_SegmentoAvalicaoIdToSegmentoIndicador", fields: [SegmentoAvalicaoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_CenarioAvaliacao_SegmentoIndicadorAvaliacao")
  SegmentoIndicador_CenarioAvaliacao_SegmentoValorizacaoIdToSegmentoIndicador SegmentoIndicador?   @relation("CenarioAvaliacao_SegmentoValorizacaoIdToSegmentoIndicador", fields: [SegmentoValorizacaoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_CenarioAvaliacao_SegmentoIndicadorValorizacao")
  IndicadorAvaliacao                                                          IndicadorAvaliacao[]
  UnidadeAvaliacao                                                            UnidadeAvaliacao[]
}

model CentroResponsabilidade {
  Id                           Int                        @id(map: "PK_CentroResponsabilidade") @default(autoincrement())
  IntegraKey                   String?                    @db.NVarChar(100)
  Codigo                       String?                    @db.NVarChar(20)
  Nome                         String?                    @db.NVarChar(100)
  Nivel                        Int?
  Analitico                    Int?
  Ano                          Int?
  Sigla                        String?                    @db.NVarChar(20)
  CodigoReduzido               String?                    @db.NVarChar(20)
  TipoCentroId                 Int?
  Origemcentro                 Int?
  Ativo                        Int?
  CentroNivel1                 String?                    @db.NVarChar(20)
  CentroNivel2                 String?                    @db.NVarChar(20)
  CentroNivel3                 String?                    @db.NVarChar(20)
  CentroNivel4                 String?                    @db.NVarChar(20)
  CentroNivel5                 String?                    @db.NVarChar(20)
  NomeNivel1                   String?                    @db.NVarChar(200)
  NomeNivel2                   String?                    @db.NVarChar(200)
  NomeNivel3                   String?                    @db.NVarChar(200)
  NomeNivel4                   String?                    @db.NVarChar(200)
  NomeNivel5                   String?                    @db.NVarChar(200)
  Superior                     Int?
  AgrupadorCentroId            Int?
  CodigoMascara                String?                    @db.NVarChar(50)
  ClassificadorPrimario        String?                    @db.NVarChar(200)
  ClassificadorSecundario      Int?
  CodigoSMD                    String?                    @db.VarChar(10)
  EmpresaId                    Int?
  AreaProdutoId                Int?
  ModalidadeId                 Int?
  AgendaServico                AgendaServico[]
  AgendaSSI                    AgendaSSI[]
  AreaModalidadeCentro         AreaModalidadeCentro[]
  AgrupadorCentro              AgrupadorCentro?           @relation(fields: [AgrupadorCentroId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_CentroResponsabilidade_AgrupadorCentro")
  AreaProduto                  AreaProduto?               @relation(fields: [AreaProdutoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_CentroResponsabilidade_AreaProdutoId")
  Modalidade                   Modalidade?                @relation(fields: [ModalidadeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_CentroResponsabilidade_ModalidadeId")
  CentroResponsabilidade       CentroResponsabilidade?    @relation("CentroResponsabilidadeToCentroResponsabilidade", fields: [Superior], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_CentroResponsabilidade_Superior")
  other_CentroResponsabilidade CentroResponsabilidade[]   @relation("CentroResponsabilidadeToCentroResponsabilidade")
  TipoCentro                   TipoCentro?                @relation(fields: [TipoCentroId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_CentroResponsabilidade_TipoCentro")
  LotacaoOrcamentaria          LotacaoOrcamentaria[]
  Orcamento                    Orcamento[]
  OrcamentoRateado             OrcamentoRateado[]
  PlanejamentoOrcamentario     PlanejamentoOrcamentario[]
  PlanejamentoProducao         PlanejamentoProducao[]
  Producao                     Producao[]
  ProducaoMeta                 ProducaoMeta[]
  ProdutoCentroAno             ProdutoCentroAno[]
  ProdutoUnidade               ProdutoUnidade[]
  ProjetoAtividade             ProjetoAtividade[]
  ProjetoCentro                ProjetoCentro[]
  Proposta                     Proposta[]
  PropostaItem                 PropostaItem[]
  RateioCentro                 RateioCentro[]
  RateioMaoDeObra              RateioMaoDeObra[]
  UnidadeCentro                UnidadeCentro[]
  UnidadeCentroR               UnidadeCentroR[]
  ValorSalario                 ValorSalario[]
}

model Cidade {
  Id                         Int                          @id(map: "PK_Cidade") @default(autoincrement())
  EstadoId                   Int
  Nome                       String                       @db.NVarChar(50)
  Codigo                     String?                      @db.NVarChar(50)
  CodIBGE                    Int?
  NomeIBGE                   String?                      @db.NVarChar(100)
  Estado                     Estado                       @relation(fields: [EstadoId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_Cidade_Estado")
  Empresa                    Empresa[]
  PlanejamentoProducaoRateio PlanejamentoProducaoRateio[]
  Recurso                    Recurso[]
  UnidadeNegocio             UnidadeNegocio[]
}

model ClasseCargo {
  Id             Int     @id(map: "PK_ClasseCargo") @default(autoincrement())
  Codigo         String? @db.NVarChar(20)
  Nome           String? @db.NVarChar(500)
  Descricao      String? @db.NVarChar(500)
  CodigoAuxiliar String? @db.NVarChar(50)
  Ativo          Int?
  Cargo          Cargo[]
}

model ClasseProduto {
  Id        Int       @id(map: "PK_ClasseProduto") @default(autoincrement())
  Codigo    String?   @db.NVarChar(100)
  Nome      String?   @db.NVarChar(3000)
  Descricao String?
  Produto   Produto[]
}

model ClientelaSMD {
  Id             Int     @id(map: "PK_ClientelaSMD") @default(autoincrement())
  Codigo         String? @db.VarChar(50)
  Nome           String? @db.VarChar(500)
  NumeroControle String? @db.VarChar(50)
  Status         String? @db.VarChar(50)
  AnoVigencia    Int?
}

model ConsumoProduto {
  Id                                         Int      @id(map: "PK_ConsumoProduto") @default(autoincrement())
  ProdutoId                                  Int?
  MaterialId                                 Int?
  HoraAula                                   Decimal? @db.Decimal(16, 2)
  Aluno                                      Decimal? @db.Decimal(16, 2)
  Turma                                      Decimal? @db.Decimal(16, 2)
  InicioRecurso                              Int?
  DurabilidadeCurso                          Int?
  EstoqueInicial                             Int?
  Direcionador                               Int?
  TipoCurso                                  Int?
  FormaEntrega                               String?  @db.VarChar(500)
  Modulo                                     String?  @db.VarChar(500)
  Disciplina                                 String?  @db.VarChar(500)
  CargaHoraria                               Int?
  Produto_ConsumoProduto_MaterialIdToProduto Produto? @relation("ConsumoProduto_MaterialIdToProduto", fields: [MaterialId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ConsumoProduto_Material")
  Produto_ConsumoProduto_ProdutoIdToProduto  Produto? @relation("ConsumoProduto_ProdutoIdToProduto", fields: [ProdutoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ConsumoProduto_Produto")
}

model ContaContabil {
  Id                    Int                @id(map: "PK_ContaContabil") @default(autoincrement())
  Ano                   Int?
  EmpresaId             Int?
  Codigo                String?            @db.VarChar(30)
  Nome                  String?            @db.NVarChar(200)
  DataAtualizacao       DateTime?          @db.DateTime
  NumeroNivelHierarquia Int?
  Ativo                 Int?
  Analitico             Int?
  CodigoReduzido        String?            @db.VarChar(30)
  DataInicioVigencia    DateTime?          @db.DateTime
  DataTerminoVigencia   DateTime?          @db.DateTime
  IntegraKey            String?            @db.NVarChar(100)
  CodigoNivel1          String?            @db.NVarChar(16)
  CodigoNivel2          String?            @db.NVarChar(16)
  CodigoNivel3          String?            @db.NVarChar(16)
  CodigoNivel4          String?            @db.NVarChar(16)
  NomeNivel1            String?            @db.NVarChar(16)
  NomeNivel2            String?            @db.NVarChar(16)
  NomeNivel3            String?            @db.NVarChar(16)
  NomeNivel4            String?            @db.NVarChar(16)
  CODIGOORC             String?            @db.VarChar(50)
  Codigo1               String?            @db.NVarChar(16)
  Codigo2               String?            @db.NVarChar(16)
  Codigo3               String?            @db.NVarChar(16)
  Codigo4               String?            @db.NVarChar(16)
  ContaOrcamentariaId   Int?
  ContaOrcamentaria     ContaOrcamentaria? @relation(fields: [ContaOrcamentariaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ContaContabil_ContaOrcamentaria")
  Empresa               Empresa?           @relation(fields: [EmpresaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ContaContabil_Empresa")
  Produto               Produto[]
}

model ContaOrcamentaria {
  Id                               Int                       @id(map: "PK_ContaOrcamentaria") @default(autoincrement())
  IntegraKey                       String?                   @db.NVarChar(100)
  Codigo                           String?                   @db.NVarChar(20)
  Nome                             String?                   @db.NVarChar(100)
  Nivel                            Int?
  Analitico                        Int?
  Ano                              Int?
  Sigla                            String?                   @db.NVarChar(20)
  Codigoreduzido                   String?                   @db.NVarChar(20)
  Ativo                            Int?
  NaturezaContaId                  Int?
  OrigemValorConta                 Int?
  TipoValorConta                   Int?
  OrigemConta                      String?                   @db.NVarChar(100)
  CodigoNivel1                     String?                   @db.NVarChar(20)
  CodigoNivel2                     String?                   @db.NVarChar(20)
  CodigoNivel3                     String?                   @db.NVarChar(20)
  CodigoNivel4                     String?                   @db.NVarChar(20)
  NomeNivel1                       String?                   @db.NVarChar(200)
  NomeNivel2                       String?                   @db.NVarChar(200)
  NomeNivel3                       String?                   @db.NVarChar(200)
  NomeNivel4                       String?                   @db.NVarChar(200)
  Superior                         Int?
  AgrupadorContaId                 Int?
  ClassificadorPrimario            Int?
  ClassificadorSecundario          Int?
  CodigoMascara                    String?                   @db.NVarChar(50)
  ClassificadorRelatorioPresidente String?                   @db.NVarChar(200)
  ClassificadorTipoConta           String?                   @db.NVarChar(200)
  EmpresaId                        Int?
  ContaContabil                    ContaContabil[]
  AgrupadorConta                   AgrupadorConta?           @relation(fields: [AgrupadorContaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ContaOrcamentaria_AgrupadorConta")
  NaturezaConta                    NaturezaConta?            @relation(fields: [NaturezaContaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ContaOrcamentaria_NaturezaConta")
  ContaOrcamentaria                ContaOrcamentaria?        @relation("ContaOrcamentariaToContaOrcamentaria", fields: [Superior], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ContaOrcamentaria_Superior")
  other_ContaOrcamentaria          ContaOrcamentaria[]       @relation("ContaOrcamentariaToContaOrcamentaria")
  EncargoOrcamento                 EncargoOrcamento[]
  Orcamento                        Orcamento[]
  OrcamentoRateado                 OrcamentoRateado[]
  ProdutoContaContabilAno          ProdutoContaContabilAno[]
  ProjetoRubricaConta              ProjetoRubricaConta[]
}

model ContratoFinanceiro {
  OID                          Int       @id(map: "PK_ContratoFinanceiro") @default(autoincrement())
  Numero                       Int?
  TipoContratoFinanceiro       Int?
  Descritivo                   String?   @db.VarChar(Max)
  UnidadeOrganizacional        Int?
  CodigoUnidadeOrganizacional  String?   @db.VarChar(10)
  CentroResponsabilidade       Int?
  CodigoCentroResponsabilidade String?   @db.VarChar(16)
  ContaOrcamentaria            Int?
  CodigoContaOrcamentaria      String?   @db.VarChar(16)
  AnoReferencia                Int?
  DataAtualizacao              DateTime? @db.DateTime
  linkIntegracao               String?   @db.VarChar(1000)
  Situacao                     String?   @db.VarChar(50)
  Pessoa                       Int?
  Cnpj                         String?   @db.VarChar(30)
  CodigoEntidade               String?   @db.VarChar(20)
  NomeVendedor                 String?   @db.VarChar(255)
  EmailVendedor                String?   @db.VarChar(255)
  TelefoneVendedor             String?   @db.VarChar(50)
  Banco                        String?   @db.VarChar(5)
  Agencia                      String?   @db.VarChar(50)
  TipoDocumento                String?   @db.VarChar(100)
  ContaFluxo                   String?   @db.VarChar(100)
  PrazoEntrega                 DateTime? @db.DateTime
  ContaCorrente                String?   @db.VarChar(50)
  FormaPagamento               String?   @db.VarChar(50)
  ContaMovimento               String?   @db.VarChar(50)
  NumeroProcesso               String?   @db.VarChar(50)
  NumeroOrdemPagamento         String?   @db.VarChar(16)
  NumeroPedido                 String?   @db.VarChar(50)
  NumeroRequisicao             String?   @db.VarChar(50)
  NumeroPrazoPagamento         String?   @db.VarChar(16)
  DescricaoPrazoPagamento      String?   @db.VarChar(100)
  CodigoLocalEntrega           String?   @db.VarChar(10)
  NomeLocalEntrega             String?   @db.VarChar(1000)
  HistoricoFinanceiro          String?   @db.VarChar(500)
  ValorPedido                  Decimal?  @db.Decimal(16, 4)
  ValorRecebido                Decimal?  @db.Decimal(16, 4)
  SaldoReceber                 Decimal?  @db.Decimal(16, 4)
  CodigoRequisitante           String?   @db.VarChar(5)
  NomeRequisitante             String?   @db.VarChar(100)
  CodigoComprador              String?   @db.VarChar(5)
  NomeComprador                String?   @db.VarChar(100)
  NomeEntidade                 String?   @db.VarChar(200)
  NomeInstituicao              String?   @db.VarChar(500)
  MovimentoContabil            String?   @db.VarChar(5)
  CondicaoPagamento            String?   @db.VarChar(200)
  ValorOriginalPedido          Decimal?  @db.Decimal(16, 4)
}

model ContratoFinanceiroItem {
  OID                     Int       @id(map: "PK_ContratoFinanceiroItem") @default(autoincrement())
  ContratoFinanceiro      Int?
  Material                Int?
  CodigoMaterial          String?   @db.VarChar(16)
  Situacao                String?   @db.VarChar(100)
  CodigoContaOrcamentaria String?   @db.VarChar(16)
  NomeContaOrcamentaria   String?   @db.VarChar(255)
  ContaOrcamentaria       Int?
  UnidadeMedida           Int?
  NomeUnidadeMedida       String?   @db.VarChar(16)
  Quantidade              Decimal?  @db.Decimal(16, 5)
  QuantidadeRecebida      Decimal?  @db.Decimal(16, 5)
  QuantidadeAtualizada    Decimal?  @db.Decimal(16, 5)
  DataAtualizacao         DateTime? @db.DateTime
  NumeroPedido            String?   @db.VarChar(10)
  NomeMaterial            String?   @db.VarChar(1000)
  ValorUnitario           Decimal?  @db.Decimal(16, 5)
  ValorTotalItem          Decimal?  @db.Decimal(16, 5)
  NumeroRequisicao        String?   @db.VarChar(50)
  Item                    Int?
}

model ControleRisco {
  Id         Int     @id(map: "PK_ControleRisco") @default(autoincrement())
  Nome       String  @db.VarChar(100)
  Descritivo String?
  Objetivo   String? @db.NVarChar(500)
  Ativo      Int?
}

model CotacaoOrquestra {
  Id       Int       @id(map: "PK_CotacaoOrquestra") @default(autoincrement())
  Ordem    Int?
  Empresa  Int?
  Entidade String?   @db.VarChar(1)
  Unidade  String?   @db.NVarChar(6)
  Centro   String?   @db.NVarChar(16)
  Conta    String?   @db.NVarChar(16)
  Valor    Decimal?  @db.Decimal(16, 4)
  Processo Int?
  Fluxo    Int?
  Data     DateTime? @db.DateTime
  Situacao String?   @db.NVarChar(100)
  Ano      Int?
}

model CriterioAceitacaoAparelho {
  Id              Int           @id(map: "PK__Criterio__3214EC0762807C16") @default(autoincrement())
  Valor           Decimal       @db.Decimal(10, 2)
  UnidadeMedidaId Int
  RecursoId       Int
  Recurso         Recurso       @relation(fields: [RecursoId], references: [Id], onUpdate: NoAction, map: "FK_Recurso_CriterioAceitacao")
  UnidadeMedida   UnidadeMedida @relation(fields: [UnidadeMedidaId], references: [Id], onUpdate: NoAction, map: "FK_UnidadeMedida_CriterioAceitacao")
}

model CriterioRateio {
  Id              Int             @id(map: "PK_CriterioRateio") @default(autoincrement())
  Codigo          String?         @db.NVarChar(20)
  Nome            String?         @db.NVarChar(500)
  Ano             Int?
  Mes             Int?
  DataAtualizacao DateTime?       @db.DateTime
  EmpresaId       Int?
  Empresa         Empresa?        @relation(fields: [EmpresaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_CriterioRateio_Empresa")
  RateioCentro    RateioCentro[]
  RateioUnidade   RateioUnidade[]
}

model CRM_Etapas_STI {
  ID                   Int      @id(map: "PK_Etapas_STI") @default(autoincrement())
  Nome                 String?  @db.VarChar(Max)
  Indicadores_Entregas String?  @db.Text
  CargaHoraria         Int?
  ProdutoId            Int?
  Produto              Produto? @relation(fields: [ProdutoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Etapas_STI")
}

model CRM_Etapas_STI_Ordem {
  ID    Int     @id(map: "PK_Etapas_STI_Ordem") @default(autoincrement())
  Ordem Int?
  Obs   String? @db.Text
}

model CRM_Etapas_STI_Proposta {
  ID                   Int     @id(map: "PK_Etapas_STI_Proposta") @default(autoincrement())
  EtapaId              Int
  CodAuxiliar          String? @db.NVarChar(50)
  Ordem                Int?
  Etapa                String? @db.VarChar(Max)
  Indicadores_Entregas String? @db.Text
  CargaHoraria         Int?
  ProdutoId            Int?
}

model CRM_OutrasInformacoes {
  Id                 Int     @id(map: "PK_CRM_OutrasInformacoes") @default(autoincrement())
  Entidade           Int?
  Negocio            String? @db.VarChar(15)
  RecursoContratante String? @db.Text
  RecursoCasa        String? @db.Text
  ObsGeral           String? @db.Text
}

model CRM_SAC {
  Id                  Int       @id(map: "PK_CRM_SAC") @default(autoincrement())
  Processo            Int?
  DataInicio          DateTime? @db.DateTime
  Requisitante        Int?
  Entidade            Int?
  UnidadeOperacional  Int?
  DataContato         DateTime? @db.DateTime
  DataRespostaCliente DateTime? @db.DateTime
  ResponsavelAnalise  String?   @db.VarChar(Max)
  TipoMensagem        String?   @db.VarChar(Max)
  ContatoIdentificado String?   @db.VarChar(1)
  DescricaoMensagem   String?   @db.Text
  ClienteNome         String?   @db.VarChar(Max)
  ClienteEmail        String?   @db.VarChar(Max)
  ClienteTelefone     String?   @db.VarChar(Max)
  TipoCliente         String?   @db.VarChar(Max)
  Cnpj                String?   @db.VarChar(Max)
  NivelCriticidade    String?   @db.VarChar(Max)
  AbrirOcorrencia     String?   @db.VarChar(1)
  OrigemMensagem      String?   @db.VarChar(100)
  Resposta            String?   @db.Text
  TipoRetorno         String?   @db.VarChar(100)
  ResponsavelDemanda  Int?
  TituloOcorrencia    String?   @db.VarChar(200)
  DescricaoOcorrencia String?   @db.Text
  ResponsavelResposta String?   @db.VarChar(200)
  VersaoBase          Int?
  Negocio             String?   @db.VarChar(300)
  CategoriaUsuario    String?   @db.VarChar(300)
  DescricaoDenuncia   String?   @db.Text
  OrientacoesOuvidor  String?   @db.Text
  DataProrrogacao     DateTime? @db.DateTime
}

model CSTRH {
  id                   Int       @id(map: "PK__CSTRH__3213E83F75EBC88B") @default(autoincrement())
  instance             Int?
  startedAt            DateTime? @db.DateTime
  reqName              String?   @db.VarChar(60)
  reqArea              String?   @db.VarChar(80)
  reqSystem            String?   @db.VarChar(60)
  reqType              String?   @db.VarChar(255)
  reqLinkAttachment    String?   @db.VarChar(Max)
  reqPriority          String?   @db.VarChar(10)
  reqStatus            String?   @db.VarChar(20)
  reqLinkAuthorization String?   @db.VarChar(Max)
  dueAt                DateTime? @db.Date
  finishedAt           DateTime? @db.DateTime
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model DescricaoCargo {
  Id             Int     @default(autoincrement())
  EmpresaId      Int?
  CodigoCargo    Int?
  DescricaoCargo String? @db.NVarChar(3000)

  @@ignore
}

model DescritivoValorIndicador {
  Id               Int             @id(map: "PK_DescritivoValorIndicador") @default(autoincrement())
  ValorIndicadorId Int?
  AnaliseGestor    String?         @db.VarChar(Max)
  AnaliseGeral     String?         @db.VarChar(Max)
  ValorIndicador   ValorIndicador? @relation(fields: [ValorIndicadorId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_DescritivoValorIndicador_ValorIndicador")
}

model Despesa {
  Id                   Int                @id(map: "PK_Despesa") @default(autoincrement())
  ProjetoId            Int?
  Ano                  Int?
  Previsto             Float?             @db.Money
  Revisto              Float?             @db.Money
  Realizado            Float?             @db.Money
  Reservado            Float?             @db.Money
  EmAberto             Float?             @db.Money
  Autorizado           Float?             @db.Money
  EmPagamento          Float?             @db.Money
  Quitado              Float?             @db.Money
  Contabilizado        Float?             @db.Money
  SaldoProjeto         Float?             @db.Money
  ValorAjustado        Float?             @db.Money
  ValorPrestacaoContas Float?             @db.Money
  SaldoInicial         Float?             @db.Money
  ValorTotal           Decimal?           @db.Decimal(16, 2)
  ValorSubvencao       Decimal?           @db.Decimal(16, 2)
  ValorHoraTecnica     Decimal?           @db.Decimal(16, 2)
  EmpresaId            Int?
  ValorDespesaDN       Decimal?           @db.Decimal(16, 2)
  ValorDespesaDR       Decimal?           @db.Decimal(16, 2)
  SaldoProjetoRA       Decimal?           @db.Decimal(16, 2)
  ValorTotalRA         Decimal?           @db.Decimal(16, 2)
  AjusteFinanceiro     AjusteFinanceiro[]
  Projeto              Projeto?           @relation(fields: [ProjetoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Despesa_Projeto")
}

model DespesaFinanceira {
  Id                           Int                           @id(map: "PK_DespesaFinanceira") @default(autoincrement())
  IntegraKey                   String?                       @db.NVarChar(100)
  EmpresaId                    Int?
  ProjetoId                    Int?
  Ano                          Int?
  TipoEntidade                 String?                       @db.NVarChar(100)
  Entidade                     String?                       @db.NVarChar(100)
  Historico                    String?                       @db.NVarChar(2000)
  Valor                        Float?                        @db.Money
  Situacao                     String?                       @db.NVarChar(100)
  TipoObrigacao                String?                       @db.NVarChar(20)
  NumeroObrigacao              String?                       @db.NVarChar(20)
  NumeroDocumentoOriginal      String?                       @db.NVarChar(20)
  DataReferencia               DateTime?                     @db.DateTime
  NomeEntidade                 String?                       @db.NVarChar(200)
  CnpjEntidade                 String?                       @db.NVarChar(20)
  PrestadoContas               Boolean?
  NumeroPrestacaoContas        String?                       @db.NVarChar(100)
  CaminhoPrestacaoContas       String?                       @db.NVarChar(255)
  ContaOrcamentaria            Int?
  NomeContaOrcamentaria        String?                       @db.VarChar(255)
  ContaContabil                String?                       @db.VarChar(16)
  NomeContaContabil            String?                       @db.VarChar(255)
  PrestacaoContasId            Int?
  Classificacao                Int?
  ValorASerUtilizado           Decimal?                      @db.Decimal(16, 2)
  ValorJaUtilizado             Decimal?                      @db.Decimal(16, 2)
  TipoDocumentoId              Int?
  OrigemRecursoFinanceiroId    Int?
  Quantidade                   Int?
  AnaliseGestor                String?                       @db.VarChar(1000)
  Status                       Int?
  ObservacaoStatus             String?                       @db.VarChar(1000)
  Empresa                      Empresa?                      @relation(fields: [EmpresaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_DespesaFinanceira_Empresa")
  OrigemRecursoFinanceiro      OrigemRecursoFinanceiro?      @relation(fields: [OrigemRecursoFinanceiroId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_DespesaFinanceira_OrigemRecursoFinanceiro")
  PrestacaoContas              PrestacaoContas?              @relation(fields: [PrestacaoContasId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_DespesaFinanceira_PrestacaoContas")
  Projeto                      Projeto?                      @relation(fields: [ProjetoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_DespesaFinanceira_Projeto")
  PrestacaoContasTipoDocumento PrestacaoContasTipoDocumento? @relation(fields: [TipoDocumentoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_DespesaFinanceira_TipoDocumento")
  PrestacaoContasAnexo         PrestacaoContasAnexo[]
}

model DespesaFinanceiraPlanoAquisicao {
  Id                  Int      @id(map: "PK_DespesaFinanceiraPlanoAquisicao") @default(autoincrement())
  PlanoAquisicaoId    Int?
  DespesaFinanceiraId Int?
  QuantidadePrevista  Int?
  QuantidadeRealizada Int?
  ValorPrevisto       Decimal? @db.Decimal(16, 2)
  ValorRealizado      Decimal? @db.Decimal(16, 2)
  FontePagadoraId     Int?
}

model DimensaoIndicador {
  Id             Int              @id(map: "PK_DimensaoIndicador") @default(autoincrement())
  Codigo         Int?
  Nome           String?          @db.VarChar(255)
  Descricao      String?          @db.VarChar(500)
  Ativo          Boolean?
  ValorIndicador ValorIndicador[]
}

model Diretriz {
  ID                Int              @id(map: "PK_Diretriz") @default(autoincrement())
  Nome              String?          @db.VarChar(Max)
  Descricao         String?          @db.VarChar(Max)
  PlanoAnual        Int?
  Tipo              Int?
  PerspectivaId     Int?
  PlanoPlurianualId Int?
  EmpresaId         Int?
  Empresa           Empresa?         @relation(fields: [EmpresaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Diretriz_Empresa")
  Perspectiva       Perspectiva?     @relation(fields: [PerspectivaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Diretriz_Perspectiva")
  PlanoPlurianual   PlanoPlurianual? @relation(fields: [PlanoPlurianualId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Diretriz_PlanoPlurianual")
  Objetivo          Objetivo[]
  PlanoAcao         PlanoAcao[]
}

model DOM_Diretrizes {
  ID            Int     @id(map: "PK_DOM_Diretrizes") @default(autoincrement())
  Codigo        Int?
  Nome          String? @db.VarChar(Max)
  PerspectivaId Int?
  Ano           Int?
}

model DOM_Diretrizes_CSC {
  ID            Int     @id(map: "PK_DOM_Diretrizes_CSC") @default(autoincrement())
  Nome          String? @db.VarChar(Max)
  PerspectivaId Int?
}

model DOM_IntencoesEstrategicas {
  ID            Int     @id(map: "PK_CRM_Proposta") @default(autoincrement())
  Nome          String? @db.VarChar(Max)
  PerspectivaId Int?
  Ano           Int?
}

model DOM_IntencoesEstrategicas_CSC {
  ID            Int     @id(map: "PK_DOM_IntencoesEstrategicas_CSC") @default(autoincrement())
  Nome          String? @db.VarChar(Max)
  PerspectivaId Int?
}

model DOM_ObjetivosEstrategicos {
  ID           Int     @id(map: "PK_DOM_ObjetivosEstrategicos") @default(autoincrement())
  Nome         String? @db.VarChar(Max)
  DiretrizesId Int?
  Ano          Int?
}

model DOM_ObjetivosEstrategicos_CSC {
  ID           Int     @id(map: "PK_DOM_ObjetivosEstrategicos_CSC") @default(autoincrement())
  Nome         String? @db.VarChar(Max)
  DiretrizesId Int?
}

model DOM_Perspectiva {
  ID     Int     @id(map: "PK_DOM_Perspectiva") @default(autoincrement())
  Codigo Int?
  Nome   String? @db.VarChar(Max)
  Ano    Int?
}

model DOM_Perspectiva_CSC {
  ID   Int     @id(map: "PK_DOM_Perspectiva_CSC") @default(autoincrement())
  Nome String? @db.VarChar(Max)
}

model Empresa {
  Id                         Int                        @id(map: "PK_Empresa") @default(autoincrement())
  Codigo                     String?                    @db.NVarChar(3)
  CNPJ                       String?                    @db.NVarChar(14)
  Descricao                  String?
  InscricaoEstadual          String?                    @db.NVarChar(12)
  Logo                       Bytes?
  NomeFantasia               String?                    @db.NVarChar(100)
  RazaoSocial                String?                    @db.NVarChar(100)
  ContatoCelular             String?                    @db.NVarChar(15)
  ContatoEmail               String?                    @db.NVarChar(100)
  ContatoObservacao          String?                    @db.NVarChar(250)
  ContatoTelefoneComercial   String?                    @db.NVarChar(15)
  ContatoTelefoneResidencial String?                    @db.NVarChar(15)
  EnderecoBairro             String?                    @default("N'", map: "DF__Empresa__Enderec__239E4DCF") @db.NVarChar(25)
  EnderecoCEP                String?                    @db.NVarChar(8)
  EnderecoComplemento        String?                    @db.NVarChar(250)
  EnderecoNumero             String?                    @default("0", map: "DF__Empresa__Enderec__24927208") @db.VarChar(20)
  EnderecoRua                String?                    @default("N'", map: "DF__Empresa__Enderec__25869641") @db.NVarChar(100)
  EnderecoCidadeId           Int?
  Ativo                      Boolean?
  AgendaServico              AgendaServico[]
  AgendaSSI                  AgendaSSI[]
  AreaProduto                AreaProduto[]
  AreaSetorCargo             AreaSetorCargo[]
  Cargo                      Cargo[]
  ContaContabil              ContaContabil[]
  CriterioRateio             CriterioRateio[]
  DespesaFinanceira          DespesaFinanceira[]
  Diretriz                   Diretriz[]
  Cidade                     Cidade?                    @relation(fields: [EnderecoCidadeId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_Empresa_Cidade")
  EncargoOrcamento           EncargoOrcamento[]
  FaturamentoMensal          FaturamentoMensal[]
  Funcao                     Funcao[]
  IndicadorResponsavel       IndicadorResponsavel[]
  LotacaoFisica              LotacaoFisica[]
  LotacaoOrcamentaria        LotacaoOrcamentaria[]
  Modalidade                 Modalidade[]
  Orcamento                  Orcamento[]
  OrcamentoRateado           OrcamentoRateado[]
  Perspectiva                Perspectiva[]
  PessoaContatoItem          PessoaContatoItem[]
  PessoaUnidade              PessoaUnidade[]
  PlanejamentoOrcamentario   PlanejamentoOrcamentario[]
  Producao                   Producao[]
  ProducaoMeta               ProducaoMeta[]
  Projeto                    Projeto[]
  ProjetoAbrangencia         ProjetoAbrangencia[]
  Proposta                   Proposta[]
  RateioCentro               RateioCentro[]
  RateioUnidade              RateioUnidade[]
  ReceitaFinanceira          ReceitaFinanceira[]
  Recurso                    Recurso[]
  Setor                      Setor[]
  TemaEstrategico            TemaEstrategico[]
  UnidadeCentro              UnidadeCentro[]
  UnidadeCentroR             UnidadeCentroR[]
  UnidadeNegocio             UnidadeNegocio[]
  UnidadeOrganizacional      UnidadeOrganizacional[]
  ValorIndicador             ValorIndicador[]
}

model EncargoOrcamento {
  ID                       Int                    @id(map: "PK_EncargoOrcamento") @default(autoincrement())
  EmpresaId                Int?
  Ano                      Int?
  ContaOrcamentariaId      Int?
  DataAtualizacao          DateTime?              @db.DateTime
  ValorPrevistoAprendiz    Decimal?               @db.Decimal(16, 4)
  ValorRevistoAprendiz     Decimal?               @db.Decimal(16, 4)
  ValorRealizadoAprendiz   Decimal?               @db.Decimal(16, 4)
  ValorPrevistoMensalista  Decimal?               @db.Decimal(16, 4)
  ValorRevistoMensalista   Decimal?               @db.Decimal(16, 4)
  ValorRealizadoMensalista Decimal?               @db.Decimal(16, 4)
  ValorPrevistoHorista     Decimal?               @db.Decimal(16, 4)
  ValorRevistoHorista      Decimal?               @db.Decimal(16, 4)
  ValorRealizadoHorista    Decimal?               @db.Decimal(16, 4)
  Descritivo               String?                @db.VarChar(500)
  TemDetalhamento          Int?
  Ativo                    Int?
  TipoEncargo              Int?
  ContaOrcamentaria        ContaOrcamentaria?     @relation(fields: [ContaOrcamentariaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_EncargoOrcamento_ContaOrcamentaria")
  Empresa                  Empresa?               @relation(fields: [EmpresaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_EncargoOrcamento_Empresa")
  EncargoOrcamentoItem     EncargoOrcamentoItem[]
}

model EncargoOrcamentoItem {
  ID                 Int               @id(map: "PK_EncargoOrcamentoItem") @default(autoincrement())
  EncargoOrcamentoId Int?
  RecursoId          Int?
  ValorPrevisto      Decimal?          @db.Decimal(16, 4)
  ValorRevisto       Decimal?          @db.Decimal(16, 4)
  ValorRealizado     Decimal?          @db.Decimal(16, 4)
  EncargoOrcamento   EncargoOrcamento? @relation(fields: [EncargoOrcamentoId], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_EncargoOrcamento_EncargoOrcamentoItem")
  Recurso            Recurso?          @relation(fields: [RecursoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_EncargoOrcamento_Recurso")
}

model EntidadeOrganograma {
  Id                Int                 @id(map: "PK_EntidadeOrganograma") @default(autoincrement())
  Codigo            String?             @db.NVarChar(3)
  Nome              String?             @db.NVarChar(200)
  Ativo             Int?
  AreaSetorCargo    AreaSetorCargo[]
  ProcessoAtividade ProcessoAtividade[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model Entidades171 {
  Id       Int     @default(autoincrement())
  Entidade String? @db.VarChar(255)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model EntidadesUnidadesArea {
  ENTIDADE String? @db.NVarChar(255)
  UNIDADES String? @db.NVarChar(255)
  AREA     String? @db.NVarChar(255)

  @@ignore
}

model Especialidade {
  Id        Int       @id(map: "PK_Especialidade") @default(autoincrement())
  Descricao String?   @db.VarChar(100)
  Ativo     Int?
  Recurso   Recurso[]
}

model Estado {
  Id                                             Int              @id(map: "PK_Estado") @default(autoincrement())
  Nome                                           String?          @db.NVarChar(25)
  Sigla                                          String?          @db.NVarChar(2)
  Regiao                                         String?          @db.VarChar(15)
  CodIBGE                                        Int?
  NomeIBGE                                       String?          @db.NVarChar(255)
  Cidade                                         Cidade[]
  Recurso_Recurso_ConselhoClasseEstadoIdToEstado Recurso[]        @relation("Recurso_ConselhoClasseEstadoIdToEstado")
  Recurso_Recurso_EstadoIdToEstado               Recurso[]        @relation("Recurso_EstadoIdToEstado")
  UnidadeNegocio                                 UnidadeNegocio[]
  VidasAtivas                                    VidasAtivas[]
}

model EstruturaUnidade {
  Id        Int       @id(map: "PK_EstruturaUnidade") @default(autoincrement())
  Descricao String?   @db.VarChar(100)
  Ativo     Int?
  Recurso   Recurso[]
}

model FatorRisco {
  Id                  Int                   @id(map: "PK_FatorRisco") @default(autoincrement())
  Codigo              String?               @db.NVarChar(50)
  Nome                String?               @db.NVarChar(500)
  Descricao           String?               @db.NVarChar(3000)
  Classificacao       Int?
  MacroCausa          Int?
  Ativo               Int?
  AtividadeFatorRisco AtividadeFatorRisco[]
}

model FATURAMENTO_Emails {
  Id       Int     @id(map: "PK__FATURAME__3214EC07576FB29A") @default(autoincrement())
  Cnpj     String? @db.VarChar(14)
  Emails   String? @db.VarChar(200)
  Processo Int?
}

model FaturamentoMensal {
  Id                Int       @id(map: "PK_FaturamentoMensal") @default(autoincrement())
  Integrakey        String?   @db.VarChar(100)
  Nome              String?   @db.NVarChar(500)
  Valor             Decimal?  @db.Decimal(16, 2)
  UnidadeAgrupada   String?   @db.VarChar(50)
  Cei               String?   @db.VarChar(20)
  Cnpj              String?   @db.VarChar(20)
  DataProcessamento DateTime? @db.DateTime
  DataInicio        DateTime? @db.DateTime
  DataFim           DateTime? @db.DateTime
  Ativo             Int?
  EmpresaId         Int?
  Processo          Int?
  Empresa           Empresa?  @relation(fields: [EmpresaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_FaturamentoMensal_Empresa")
}

model FonteDeDados {
  Id                         Int                          @id(map: "PK_FonteDeDados") @default(autoincrement())
  Nome                       String?                      @db.VarChar(150)
  Endpoint                   String?                      @db.VarChar(2000)
  Frequencia                 Int?
  DataInicio                 DateTime?                    @db.DateTime
  Mapeamento                 String?                      @db.VarChar(3000)
  Ativo                      Int?
  TipoFonteDeDados           Int?
  Cabecalho                  String?                      @db.VarChar(1000)
  Corpo                      String?                      @db.VarChar(3000)
  Metodo                     Int?
  ParametrosImportacao       String?                      @db.VarChar(500)
  NodoDeRepeticao            String?                      @db.VarChar(200)
  ExpressaoCron              String?                      @db.VarChar(50)
  IndicadorSegmentoIndicador IndicadorSegmentoIndicador[]
}

model FontePagadora {
  Id             Int              @id(map: "PK_FontePagadora") @default(autoincrement())
  Codigo         String?          @db.VarChar(50)
  Nome           String?          @db.VarChar(500)
  Ativo          Int?
  PlanoAquisicao PlanoAquisicao[]
  ProjetoEquipe  ProjetoEquipe[]
}

model FormularioSMD {
  Id             Int     @id(map: "PK_FormularioSMD") @default(autoincrement())
  Codigo         String? @db.VarChar(50)
  Nome           String? @db.VarChar(500)
  NumeroControle String? @db.VarChar(50)
  Status         String? @db.VarChar(50)
  AnoVigencia    Int?
}

model Funcao {
  Id             Int       @id(map: "PK_Funcao") @default(autoincrement())
  Codigo         String?   @db.NVarChar(20)
  Nome           String?   @db.NVarChar(500)
  Descricao      String?   @db.NVarChar(500)
  CodigoAuxiliar String?   @db.NVarChar(50)
  Ativo          Int?
  EmpresaId      Int?
  Empresa        Empresa?  @relation(fields: [EmpresaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Funcao_Empresa")
  Recurso        Recurso[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model FuncionariosFolha {
  CODENTIDADE      String? @db.VarChar(20)
  ENTIDADE         String  @db.VarChar(50)
  MATRICULA        String? @db.VarChar(20)
  ENTMATR          String? @db.NVarChar(255)
  NOME             String? @db.NVarChar(255)
  SEXO             String? @db.NVarChar(255)
  TIPOSALARIO      String? @db.VarChar(20)
  DESCRTIPOSALARIO String? @db.NVarChar(255)
  DATANASCIMENTO   String? @db.VarChar(20)
  DATAADMISSAO     String? @db.VarChar(20)
  PISPASEP         Float?
  CPF              String? @db.VarChar(20)
  EMAIL            String? @db.NVarChar(255)
  CODCARGO         String? @db.VarChar(20)
  DESCRCARGO       String? @db.NVarChar(255)
  DESCRDETALHCARGO String? @db.NVarChar(255)
  TELEFONE         String? @db.NVarChar(255)
  CELULAR          String? @db.NVarChar(255)
  CODSITUACAO      String? @db.VarChar(20)
  SITUACAO         String? @db.NVarChar(255)
  CODLOTORC        Float?
  LOTACAOORC       String? @db.NVarChar(255)
  CODCCUSTO        Float?
  CCUSTO           String? @db.NVarChar(255)
  CODHIERARQUIA    Float?
  HIERARQUIA       String? @db.NVarChar(255)
  ENTLOTARESET     String? @db.NVarChar(255)
  LOTFISICA        String? @db.NVarChar(255)
  AREA             String? @db.NVarChar(255)
  CODAREA          Float?
  SETOR            String? @db.NVarChar(255)
  CODSETOR         String? @db.VarChar(255)
  NOMEMAEFUNC      String? @db.NVarChar(255)
  CBO              String? @db.VarChar(20)
  RG               String? @db.VarChar(20)
  RGUF             String? @db.NVarChar(255)
  RGORGAO          String? @db.NVarChar(255)
  ESTCIVIL         String? @db.NVarChar(255)
  ENDERECO         String? @db.NVarChar(255)
  BAIRRO           String? @db.NVarChar(255)
  MUNICIPIO        String? @db.NVarChar(255)
  UF               String? @db.NVarChar(255)
  CEP              String? @db.NVarChar(255)
  SALARIO          String? @db.NVarChar(255)
  CODLOTFISICA     Float?
  CODORQUESTRA     String? @db.NVarChar(255)
  CODATIV          String? @db.NVarChar(255)
  GRATIFICACAO     String? @db.NVarChar(255)
  CARGAHORARIA     String? @db.NVarChar(255)
  ATIVIDADE        String? @db.NVarChar(255)
  GRAUDEINSTRUCAO  String? @db.NVarChar(255)
  CTPS             String? @db.NVarChar(255)
  CTPSSERIE        String? @db.NVarChar(255)
  CTPSDTEMIS       String? @db.NVarChar(255)
  CTPSUF           String? @db.NVarChar(255)
  RGDTEMIS         String? @db.NVarChar(255)
  CODECUSTO        String? @db.VarChar(20)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model FuncionariosFolhaT {
  CODENTIDADE      String? @db.VarChar(20)
  ENTIDADE         String? @db.NVarChar(255)
  MATRICULA        String? @db.VarChar(20)
  ENTMATR          String? @db.NVarChar(255)
  NOME             String? @db.NVarChar(255)
  SEXO             String? @db.NVarChar(255)
  TIPOSALARIO      String? @db.VarChar(20)
  DESCRTIPOSALARIO String? @db.NVarChar(255)
  DATANASCIMENTO   String? @db.VarChar(20)
  DATAADMISSAO     String? @db.VarChar(20)
  PISPASEP         Float?
  CPF              String? @db.VarChar(20)
  EMAIL            String? @db.NVarChar(255)
  CODCARGO         String? @db.VarChar(20)
  DESCRCARGO       String? @db.NVarChar(255)
  DESCRDETALHCARGO String? @db.NVarChar(255)
  TELEFONE         String? @db.NVarChar(255)
  CELULAR          String? @db.NVarChar(255)
  CODSITUACAO      String? @db.VarChar(20)
  SITUACAO         String? @db.NVarChar(255)
  CODLOTORC        Float?
  LOTACAOORC       String? @db.NVarChar(255)
  CODCCUSTO        Float?
  CCUSTO           String? @db.NVarChar(255)
  CODHIERARQUIA    Float?
  HIERARQUIA       String? @db.NVarChar(255)
  ENTLOTARESET     String? @db.NVarChar(255)
  LOTFISICA        String? @db.NVarChar(255)
  AREA             String? @db.NVarChar(255)
  CODAREA          Float?
  SETOR            String? @db.NVarChar(255)
  CODSETOR         Float?
  NOMEMAEFUNC      String? @db.NVarChar(255)
  CBO              String? @db.VarChar(20)
  RG               String? @db.VarChar(20)
  RGUF             String? @db.NVarChar(255)
  RGORGAO          String? @db.NVarChar(255)
  ESTCIVIL         String? @db.NVarChar(255)
  ENDERECO         String? @db.NVarChar(255)
  BAIRRO           String? @db.NVarChar(255)
  MUNICIPIO        String? @db.NVarChar(255)
  UF               String? @db.NVarChar(255)
  CEP              String? @db.NVarChar(255)
  SALARIO          String? @db.NVarChar(255)
  CODLOTFISICA     Float?
  CODORQUESTRA     String? @db.NVarChar(255)
  CODATIV          String? @db.NVarChar(255)
  GRATIFICACAO     String? @db.NVarChar(255)
  CARGAHORARIA     String? @db.NVarChar(255)
  ATIVIDADE        String? @db.NVarChar(255)

  @@ignore
}

model GestaoDeVacina_Faturamento {
  Id            Int     @id(map: "PK_GestaoDeVacina_ListaImunizados") @default(autoincrement())
  PessoaId      Int?
  PropostaId    Int?
  VacinaId      Int?
  ValorUnitario Float?
  Unidade       String? @db.VarChar(Max)
  Centro        String? @db.VarChar(Max)
}

model GestaoVacina {
  Id                       Int       @id(map: "PK_GestaoVacina") @default(autoincrement())
  Instancia                Int?
  PropostaId               Int?
  CNPJ                     String?   @db.NVarChar(20)
  ServicoId                Int?
  DataInicio               DateTime? @db.DateTime
  DataTermino              DateTime? @db.DateTime
  HoraInicio               String?   @db.VarChar(5)
  HoraTermino              String?   @db.VarChar(5)
  ResponsavelGesto         Int?
  Status                   String?   @db.VarChar(500)
  TrabalhadoresCadastrados Int?
  DosesSeparadas           Int?
  DosesAplicadas           Int?
  DosesRestantes           Int?
  DataRealizacao           DateTime? @db.DateTime
  TaxaDeslocamento         Float?
  DataAtualizacao          DateTime? @db.DateTime
  LocalAtendimento         String?   @db.VarChar(200)
  UnidadeOrquestraId       Int?
  ProfissionaisEnvolvidos  String?   @db.Text
  LocalReservado           String?   @db.VarChar(50)
}

model GestaoVacina_ContaAtivoPassivo {
  Id     Int     @id(map: "PK_GestaoVacina_ContaAtivoPassivo") @default(autoincrement())
  Conta  String? @db.VarChar(10)
  Codigo String? @db.VarChar(16)
}

model GestaoVacina_Metas {
  Id                 Int     @id(map: "PK_GestaoVacina_Metas") @default(autoincrement())
  UnidadeOrquestraId Int?
  ReceitaServico     Float?
  ReceitaFomento     Float?
  Fisica             Float?
  Ano                Int?
  obs                String? @db.Text
}

model GrupoCargo {
  Id              Int               @id(map: "PK_GrupoCargo") @default(autoincrement())
  NomeGrupo       String?           @db.NVarChar(500)
  Sigla           String?           @db.NVarChar(500)
  Ativo           Int?
  Cargo           Cargo[]
  CargoNivelCargo CargoNivelCargo[]
  NivelCargo      NivelCargo[]
}

model GrupoEmpresarial {
  Id     Int      @id(map: "PK_GrupoEmpresarial") @default(autoincrement())
  Codigo String?  @db.NVarChar(50)
  Nome   String?  @db.NVarChar(500)
  Pessoa Pessoa[]
}

model GrupoRelatorioBI {
  Id            Int           @id(map: "PK_GrupoRelatorioBI") @default(autoincrement())
  Nome          String?       @db.VarChar(100)
  Ordem         Int?
  Ativo         Int?
  CaminhoImagem String?       @db.NVarChar(Max)
  Descricao     String?       @db.VarChar(500)
  RelatorioBI   RelatorioBI[]
}

model Indicador {
  Id                             Int                              @id(map: "PK_Indicador") @default(autoincrement())
  Codigo                         String?                          @db.NVarChar(20)
  Nome                           String?                          @db.NVarChar(500)
  FormaAtualizacao               Int?
  Periodo                        Int?
  Atualizado                     DateTime?                        @db.DateTime
 // Objetivo                       Int?
  Origem                         Int?
  GrupoIndicadorId               Int?
  Orientacao                     Int?
  AreaId                         Int?
  Polaridade                     Int?
  ObjetivoId                     Int?
  PerspectivaId                  Int?
  Nivel                          Int?
  ResultadoOrganizacional        Int?
  Periodicidade                  Int?
  Mensuracao                     Int?
  Desdobravel                    Int?
  Nivelado                       Int?
  UnidadeAvaliacao               Int?
  ParteInteressada               Int?
  Ativo                          Int?
  Formula                        String?                          @db.VarChar(500)
  Superior                       Int?
  Descricao                      String?                          @db.VarChar(1000)
  Tipo                           Int?
  FormulaCalculo                 String?                          @db.VarChar(1000)
  PossuiVariavel                 Int?
  DimensaoId                     Int?
  ResponsavelAnaliseId           Int?
  ResponsavelColetaId            Int?
  UnidadeMedidaId                Int?
  ScriptAtualizacao              String?                          @db.VarChar(3000)
  TipoEmpresa                    Int?
  RequisitoParteInteressada      String?                          @db.VarChar(200)
  EmpresaBechmark                String?                          @db.VarChar(200)
  ValorBechmark                  Decimal?                         @db.Decimal(16, 2)
  UnidadeMedidaBechmark          Int?
  TipoIndicador                  Int?
  TipoScoreId                    Int?
  DiaColeta                      Int?
  TipoGrafico                    Int?
  PeriodicidadeAnalise           Int?
  TemPPR                         Int?
  Objetivo                       Objetivo?                        @relation(fields: [ObjetivoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Indicador_ObjetivoEstrategico")
  Perspectiva                    Perspectiva?                     @relation(fields: [PerspectivaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Indicador_Perspectiva")
  TipoScore                      TipoScore?                       @relation(fields: [TipoScoreId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Indicador_TipoScore")
  IndicadorBenchmark             IndicadorBenchmark[]
  IndicadorItemSegmentoIndicador IndicadorItemSegmentoIndicador[]
  IndicadorResponsavel           IndicadorResponsavel[]
  IndicadorSegmentoIndicador     IndicadorSegmentoIndicador[]
  MapaEstrategico                MapaEstrategico[]
  PlanoPlurianual                PlanoPlurianual[]
  ProdutoUnidadeControle         ProdutoUnidadeControle[]
  UnidadeControleProduto         UnidadeControleProduto[]
  ValorIndicador                 ValorIndicador[]
}

model IndicadorAvaliacao {
  Id                 Int               @id(map: "PK_IndicadorAvaliacao") @default(autoincrement())
  IndicadorId        Int?
  Peso               Decimal?          @db.Decimal(6, 2)
  CenarioAvaliacaoId Int?
  CenarioAvaliacao   CenarioAvaliacao? @relation(fields: [CenarioAvaliacaoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_IndicadorAvaliacao_CenarioAvaliacao")
}

model IndicadorBenchmark {
  Id          Int        @id(map: "PK_IndicadorBenchmark") @default(autoincrement())
  IndicadorId Int?
  Nome        String?
  Valor       Decimal?   @db.Decimal(16, 2)
  Ano         Int?
  Indicador   Indicador? @relation(fields: [IndicadorId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_IndicadorBenchmark_Indicador")
}

model IndicadorItemSegmentoIndicador {
  Id                      Int                   @id(map: "PK_IndicadorItemSegmentoIndicador") @default(autoincrement())
  IndicadorId             Int
  SegmentoIndicadorId     Int
  ItemSegmentoIndicadorId Int
  Descricao               String?               @db.NVarChar(2000)
  Ativo                   Int?
  Indicador               Indicador             @relation(fields: [IndicadorId], references: [Id], onUpdate: NoAction, map: "FK_IndicadorItemSegmentoIndicador_Indicador")
  ItemSegmentoIndicador   ItemSegmentoIndicador @relation(fields: [ItemSegmentoIndicadorId], references: [Id], onUpdate: NoAction, map: "FK_IndicadorItemSegmentoIndicador_ItemSegmentoIndicador")
  SegmentoIndicador       SegmentoIndicador     @relation(fields: [SegmentoIndicadorId], references: [Id], onUpdate: NoAction, map: "FK_IndicadorItemSegmentoIndicador_SegmentoIndicador")
}

model IndicadorResponsavel {
  Id                                                         Int        @id(map: "PK_IndicadorResponsavel") @default(autoincrement())
  IndicadorId                                                Int?
  EmpresaId                                                  Int?
  ResponsavelColetaId                                        Int?
  ResponsavelAnaliseId                                       Int?
  Empresa                                                    Empresa?   @relation(fields: [EmpresaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_IndicadorResponsavel_Empresa")
  Indicador                                                  Indicador? @relation(fields: [IndicadorId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_IndicadorResponsavel_Indicador")
  Recurso_IndicadorResponsavel_ResponsavelAnaliseIdToRecurso Recurso?   @relation("IndicadorResponsavel_ResponsavelAnaliseIdToRecurso", fields: [ResponsavelAnaliseId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_IndicadorResponsavel_ResponsavelAnalise")
  Recurso_IndicadorResponsavel_ResponsavelColetaIdToRecurso  Recurso?   @relation("IndicadorResponsavel_ResponsavelColetaIdToRecurso", fields: [ResponsavelColetaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_IndicadorResponsavel_ResponsavelColeta")
}

model IndicadorSegmentoIndicador {
  Id                  Int               @id(map: "PK_IndicadorSegmentoIndicador") @default(autoincrement())
  IndicadorId         Int
  SegmentoIndicadorId Int
  FonteDadosId        Int?
  Descricao           String?           @db.NVarChar(2000)
  Ativo               Int?
  FonteDeDados        FonteDeDados?     @relation(fields: [FonteDadosId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_IndicadorSegmentoIndicador_FonteDados")
  Indicador           Indicador         @relation(fields: [IndicadorId], references: [Id], onUpdate: NoAction, map: "FK_IndicadorSegmentoIndicador_Indicador")
  SegmentoIndicador   SegmentoIndicador @relation(fields: [SegmentoIndicadorId], references: [Id], onUpdate: NoAction, map: "FK_IndicadorSegmentoIndicador_SegmentoIndicador")
}

model IndicadorVariavel {
  Id               Int      @id(map: "PK_IndicadorVariavel") @default(autoincrement())
  IndicadorId      Int?
  VariavelId       Int?
  Ordem            Int?
  Simbolo          String?  @db.VarChar(100)
  Ativo            Boolean?
  OrigemInformacao Int?
  Periodo          Int?
}

model Iniciativa {
  Id          Int        @id(map: "PK_Iniciativa") @default(autoincrement())
  Codigo      String?    @db.NVarChar(50)
  Nome        String?    @db.NVarChar(500)
  DataInicio  DateTime?  @db.DateTime
  DataFim     DateTime?  @db.DateTime
  ProcessoId  Int?
  ProjetoId   Int?
  PlanoAcaoId Int?
  Ativo       Int?
  ObjetivoId  Int?
  Objetivo    Objetivo?  @relation(fields: [ObjetivoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Iniciativa_Objetivo")
  PlanoAcao   PlanoAcao? @relation(fields: [PlanoAcaoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Iniciativa_PlanoAcao")
  Processo    Processo?  @relation(fields: [ProcessoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Iniciativa_Processo")
  Projeto     Projeto?   @relation(fields: [ProjetoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Iniciativa_Projeto")
}

model InstrucaoProcesso {
  Id                  Int       @id(map: "PK__Instruca__3214EC0700713E97") @default(autoincrement())
  CodigoProcesso      String?   @db.VarChar(50)
  NomeProcesso        String?   @db.VarChar(255)
  QtdIndicadores      Int?
  QtdRevisoes         Int?
  StatusProcesso      String?   @db.VarChar(50)
  DataUltimaRevisao   DateTime? @db.Date
  DataProximaRevisao  DateTime? @db.Date
  Instancia           Int?
  Entidade            String?   @db.VarChar(50)
  Unidade             String?   @db.VarChar(80)
  ResponsavelProcesso String?   @db.VarChar(100)
  EmailResponsavel    String?   @db.VarChar(50)
  SetorResponsavel    String?   @db.VarChar(100)
  SupervisorProcesso  String?   @db.VarChar(100)
}

model IntencaoEstrategica {
  ID                Int          @id(map: "PK_IntencaoEstrategica") @default(autoincrement())
  Nome              String?      @db.VarChar(Max)
  PlanoPlurianualId Int?
  Tipo              Int?
  PerspectivaId     Int?
  Perspectiva       Perspectiva? @relation(fields: [PerspectivaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_IntencaoEstrategica_Perspectiva")
  PlanoAcao         PlanoAcao[]
}

model ItemSegmentoIndicador {
  Id                             Int                              @id(map: "PK_ItemSegmentoIndicador") @default(autoincrement())
  Codigo                         String?                          @db.NVarChar(10)
  Nome                           String?                          @db.NVarChar(500)
  SegmentoId                     Int?
  Identificador                  Int?
  TipoItemSegmento               Int?
  Ativo                          Int?
  ItemSegmentoSuperiorId         Int?
  IndicadorItemSegmentoIndicador IndicadorItemSegmentoIndicador[]
  ItemSegmentoIndicador          ItemSegmentoIndicador?           @relation("ItemSegmentoIndicadorToItemSegmentoIndicador", fields: [ItemSegmentoSuperiorId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ItemSegmentoIndicador_ItemSegmentoSuperior")
  other_ItemSegmentoIndicador    ItemSegmentoIndicador[]          @relation("ItemSegmentoIndicadorToItemSegmentoIndicador")
  SegmentoIndicador              SegmentoIndicador?               @relation(fields: [SegmentoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ItemSegmentoIndicador_SegmentoIndicador")
  UnidadeAvaliacao               UnidadeAvaliacao[]
  ValorIndicador                 ValorIndicador[]
}

model kanbanItem {
  Id               Int       @id(map: "PK__kanbanIt__3214EC0746BBDF1C") @default(autoincrement())
  Title            String?   @db.VarChar(255)
  Solicitante      String?   @db.VarChar(255)
  Responsavel      String?   @db.VarChar(255)
  DataCriacao      DateTime? @db.DateTime
  DataPrazo        DateTime? @db.DateTime
  Valor            String?   @db.VarChar(100)
  ItemOrder        Int?
  StageId          Int?
  EmailSolicitante String?   @db.VarChar(100)
  Prioridade       String?   @db.VarChar(20)
  Descricao        String?   @db.VarChar(8000)
  Instancia        Int?
  DataEncerramento DateTime? @db.DateTime
}

model kanbanQuadro {
  Id   Int    @id(map: "PK__kanbanQu__3214EC073F99449F") @default(autoincrement())
  Nome String @db.VarChar(255)
}

model kanbanStage {
  Id         Int      @id(map: "PK__kanbanSt__3214EC07453BF101") @default(autoincrement())
  Title      String?  @db.VarChar(255)
  StageOrder Int?
  QuadroId   Int?
  StageView  Boolean?
}

model kanbanTask {
  Id        Int    @id(map: "PK__kanbanTa__3214EC07D9B3A8CC") @default(autoincrement())
  Title     String @db.VarChar(8000)
  TaskOrder Int?
  TaskView  Int?
  StageId   Int?
}

model LinhaFomento {
  Id        Int       @id(map: "PK_LinhaFomento") @default(autoincrement())
  Codigo    String?   @db.NVarChar(20)
  Nome      String?   @db.NVarChar(100)
  Descricao String?   @db.NVarChar(3000)
  Projeto   Projeto[]
}

model Log {
  Id          Int      @id(map: "PK_Log") @default(autoincrement())
  ChaveId     Int?
  Dados       String?  @db.NVarChar(Max)
  Acao        String?  @db.VarChar(100)
  Controller  String?  @db.VarChar(100)
  Tipo        String?  @db.VarChar(100)
  DataCriacao DateTime @db.DateTime
  Usuario     String?  @db.NVarChar(3000)
}

model LotacaoFisica {
  Id                   Int                 @id(map: "PK_LotacaoFisica") @default(autoincrement())
  EmpresaId            Int?
  UnidadeOperacionalId Int?
  SetorId              Int?
  Percentual           Decimal?            @db.Decimal(5, 2)
  Ativo                Int?
  DataValidade         DateTime?           @db.DateTime
  RecursoId            Int?
  Empresa              Empresa?            @relation(fields: [EmpresaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_LotacaoFisicaEmpresa")
  Recurso              Recurso?            @relation(fields: [RecursoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_LotacaoFisicaRecurso")
  Setor                Setor?              @relation(fields: [SetorId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_LotacaoFisicaSetor")
  UnidadeOperacional   UnidadeOperacional? @relation(fields: [UnidadeOperacionalId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_LotacaoFisicaUnidadeOperacional")
}

model LotacaoOrcamentaria {
  Id                       Int                     @id(map: "PK_LotacaoOrcamentaria") @default(autoincrement())
  EmpresaId                Int?
  UnidadeOrganizacionalId  Int?
  CentroResponsabilidadeId Int?
  Percentual               Decimal?                @db.Decimal(5, 2)
  Ativo                    Int?
  DataValidade             DateTime?               @db.DateTime
  RecursoId                Int?
  Ano                      Int?
  Mes                      Int?
  CentroResponsabilidade   CentroResponsabilidade? @relation(fields: [CentroResponsabilidadeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_LotacaoOrcamentariaCentroResponsabilidade")
  Empresa                  Empresa?                @relation(fields: [EmpresaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_LotacaoOrcamentariaEmpresa")
  Recurso                  Recurso?                @relation(fields: [RecursoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_LotacaoOrcamentariaRecurso")
  UnidadeOrganizacional    UnidadeOrganizacional?  @relation(fields: [UnidadeOrganizacionalId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_LotacaoOrcamentariaUnidadeOrganizacional")
}

model MapaEstrategico {
  Id                    Int                    @id(map: "PK_MapaEstrategico") @default(autoincrement())
  PlanoEstrategicoId    Int?
  PerspectivaId         Int?
  TemaEstrategicoId     Int?
  ObjetivoId            Int?
  IndicadorId           Int?
  NivelHierarquia       Int?
  Peso                  Decimal?               @db.Decimal(16, 2)
  Resultado             Decimal?               @db.Decimal(16, 2)
  ResultadoAcumulado    Decimal?               @db.Decimal(16, 2)
  Nome                  String?                @db.NVarChar(500)
  Descricao             String?                @db.NVarChar(Max)
  Ativo                 Int?
  SuperiorId            Int?
  Indicador             Indicador?             @relation(fields: [IndicadorId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_MapaEstrategico_Indicador")
  Objetivo              Objetivo?              @relation(fields: [ObjetivoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_MapaEstrategico_ObjetivoEstrategico")
  Perspectiva           Perspectiva?           @relation(fields: [PerspectivaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_MapaEstrategico_Perspectiva")
  PlanoEstrategico      PlanoEstrategico?      @relation(fields: [PlanoEstrategicoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_MapaEstrategico_PlanoEstrategico")
  MapaEstrategico       MapaEstrategico?       @relation("MapaEstrategicoToMapaEstrategico", fields: [SuperiorId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_MapaEstrategico_Superior")
  other_MapaEstrategico MapaEstrategico[]      @relation("MapaEstrategicoToMapaEstrategico")
  TemaEstrategico       TemaEstrategico?       @relation(fields: [TemaEstrategicoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_MapaEstrategico_TemaEstrategico")
  ValorMapaEstrategico  ValorMapaEstrategico[]
}

model Marco {
  Id          Int           @id(map: "PK_Marco") @default(autoincrement())
  Nome        String?       @db.NVarChar(2000)
  Descricao   String?       @db.NVarChar(Max)
  Data        DateTime?     @db.DateTime
  ProjetoId   Int?
  Projeto     Projeto?      @relation(fields: [ProjetoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Marco_Projeto")
  ProdutoMeta ProdutoMeta[]
}

model MatrizImpacto {
  Id                 Int                  @id(map: "PK_MatrizImpacto") @default(autoincrement())
  Nome               String?              @db.NVarChar(100)
  Descricao          String?              @db.NVarChar(3000)
  Ativo              Int?
  MatrizImpactoRisco MatrizImpactoRisco[]
}

model MatrizImpactoItens {
  Id                   Int                 @id(map: "PK_MatrizImpactoItens") @default(autoincrement())
  MatrizImpactoRiscoId Int?
  RiscoId              Int?
  Score                Int?
  MatrizImpactoRisco   MatrizImpactoRisco? @relation(fields: [MatrizImpactoRiscoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_MatrizImpactoRisco_MatrizImpactoItens")
}

model MatrizImpactoRisco {
  Id                 Int                  @id(map: "PK_MatrizImpactoRisco") @default(autoincrement())
  MatrizImpactoId    Int?
  RiscoId            Int?
  Dependencia        Int?
  Motricidade        Int?
  MatrizImpactoItens MatrizImpactoItens[]
  MatrizImpacto      MatrizImpacto?       @relation(fields: [MatrizImpactoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_MatrizImpacto_MatrizImpactoRisco")
  Risco              Risco?               @relation(fields: [RiscoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Risco_MatrizImpactoRisco")
}

model MergeLog {
  Id            Int       @id(map: "PK__MergeLog__3214EC07341839D8") @default(autoincrement())
  ProcedureName String?   @db.NVarChar(100)
  ExecutionTime DateTime? @default(now(), map: "DF__MergeLog__Execut__5EB4F1FC") @db.DateTime
  RowsAffected  Int?
  Operation     String?   @db.NVarChar(50)
}

model Mes {
  OID         Int     @id(map: "PK_Mes") @default(autoincrement())
  Codigo      Int?
  Nome        String? @db.NVarChar(100)
  NomeReuzido String? @db.NVarChar(10)
}

model Metodo {
  Id                                                   Int            @id(map: "PK_Metodo") @default(autoincrement())
  SuperiorId                                           Int?
  ModuloId                                             Int?
  NomeApresentacao                                     String?        @db.VarChar(200)
  OperacaoID                                           Int?
  Action                                               String?        @db.VarChar(200)
  Controller                                           String?        @db.VarChar(200)
  UrlAcesso                                            String?        @db.VarChar(402)
  Situacao                                             Int?
  Visivel                                              Boolean?
  UsuarioCadastroId                                    Int?
  DataCadastro                                         DateTime?      @db.DateTime
  UsuarioAtualizacaoId                                 Int?
  DataAtualizacao                                      DateTime?      @db.DateTime
  MetodoPaiID                                          Int?
  ModuloMetodoID                                       Int
  SituacaoID                                           Int
  Metodo                                               Metodo?        @relation("MetodoToMetodo", fields: [SuperiorId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Metodo_MetodoPai")
  other_Metodo                                         Metodo[]       @relation("MetodoToMetodo")
  AspNetUsers_Metodo_UsuarioAtualizacaoIdToAspNetUsers AspNetUsers?   @relation("Metodo_UsuarioAtualizacaoIdToAspNetUsers", fields: [UsuarioAtualizacaoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Metodo_UsuarioAtualizacao")
  AspNetUsers_Metodo_UsuarioCadastroIdToAspNetUsers    AspNetUsers?   @relation("Metodo_UsuarioCadastroIdToAspNetUsers", fields: [UsuarioCadastroId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Metodo_UsuarioCadastro")
  PerfilMetodo                                         PerfilMetodo[]
}

model MetodoCalibracao {
  Id        Int       @id(map: "PK__MetodoCa__3214EC077063F9B8") @default(autoincrement())
  Descricao String?   @db.VarChar(250)
  ATIVO     Boolean?  @default(true, map: "DF__MetodoCal__ATIVO__550B8C31")
  Recurso   Recurso[]
}

model Modalidade {
  Id                     Int                      @id(map: "PK_Modalidade") @default(autoincrement())
  Codigo                 String?                  @db.NVarChar(20)
  Nome                   String?                  @db.NVarChar(100)
  Descricao              String?                  @db.NVarChar(Max)
  EmpresaId              Int?
  Ativo                  Int?
  AreaModalidadeCentro   AreaModalidadeCentro[]
  CentroResponsabilidade CentroResponsabilidade[]
  Empresa                Empresa?                 @relation(fields: [EmpresaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Modalidade_Empresa")
}

model Modulo {
  Id                                                   Int            @id(map: "PK_Modulo") @default(autoincrement())
  Nome                                                 String?        @db.VarChar(150)
  UsuarioCadastroId                                    Int?
  DataCadastro                                         DateTime?      @db.DateTime
  UsuarioAtualizacaoId                                 Int?
  DataAtualizacao                                      DateTime?      @db.DateTime
  IconeMenu                                            String?        @db.VarChar(50)
  Nivel                                                Int?
  Analitico                                            Int?
  Controle                                             String?        @db.VarChar(255)
  UrlAcesso                                            String?
  AreaModulo                                           String?        @db.VarChar(255)
  Visivel                                              Int?
  Acao                                                 String?        @db.VarChar(255)
  Codigo                                               Int?
  Superior                                             Int?
  IdGrupoRelatorioBi                                   String?        @db.NVarChar(255)
  IdRelatorioBi                                        String?        @db.NVarChar(255)
  GeraChamadaBi                                        Int?
  FilterPaneEnabled                                    Int?
  NavContentPaneEnabled                                Int?
  NotaExplicativa                                      String?
  AmbienteVue                                          Int?
  AmbienteMVC                                          Int?
  AspNetUsers_Modulo_UsuarioAtualizacaoIdToAspNetUsers AspNetUsers?   @relation("Modulo_UsuarioAtualizacaoIdToAspNetUsers", fields: [UsuarioAtualizacaoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Modulo_UsuarioAtualizacao")
  AspNetUsers_Modulo_UsuarioCadastroIdToAspNetUsers    AspNetUsers?   @relation("Modulo_UsuarioCadastroIdToAspNetUsers", fields: [UsuarioCadastroId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Modulo_UsuarioCadastro")
  ModuloPerfil                                         ModuloPerfil[]
}

model ModuloPerfil {
  Id          Int          @id(map: "PK_ModuloPerfil") @default(autoincrement())
  ModuloId    Int?
  PerfilId    Int?
  Editar      Boolean?
  Excluir     Boolean?
  Inserir     Boolean?
  Visivel     Boolean?
  Modulo      Modulo?      @relation(fields: [ModuloId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ModuloPerfilModulo")
  AspNetRoles AspNetRoles? @relation(fields: [PerfilId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ModuloPerfilPerfil")
}

model MTRL_Clientes {
  RazaoSocial       String? @db.NVarChar(255)
  Endereco          String? @db.NVarChar(255)
  Bairro            String? @db.NVarChar(255)
  Cidade            String? @db.NVarChar(255)
  UF                String? @db.NVarChar(255)
  CNPJCPF           String? @db.NVarChar(255)
  CEP               String? @db.NVarChar(255)
  Fone              String? @db.NVarChar(255)
  InscricaoEstadual String? @db.NVarChar(255)
  Contato           String? @db.NVarChar(255)
  CNAE              String? @db.NVarChar(255)
  IE                String? @db.NVarChar(255)
  NRFuncionarios    String? @db.NVarChar(255)
  Email             String? @db.NVarChar(255)
  Codigo            Int     @id(map: "PK_MTRL_Clientes") @default(autoincrement())
  Senha             String? @db.VarChar(100)
  MD5               String? @db.VarChar(100)
  Cargo             String? @db.NVarChar(255)
}

model MTRL_Documentos {
  Codigo             Int       @id(map: "PK__MTRL_Doc__06370DADB4E695AB") @default(autoincrement())
  Documento          String    @db.VarChar(255)
  Arquivo            String    @db.VarChar(255)
  Data_Cadastramento DateTime? @db.SmallDateTime
  IdCliente          String    @db.VarChar(255)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model MTRL_Servicos {
  Servico String? @db.NVarChar(255)
  Valor   Float?
  Codigo  Int     @default(autoincrement())

  @@ignore
}

model MTRL_Solicitacoes {
  Codigo             Int       @id(map: "PK__MTRL_Sol__06370DADF72EEB6E") @default(autoincrement())
  Documento          String    @db.VarChar(255)
  Arquivo            String    @db.VarChar(255)
  Data_Cadastramento DateTime? @db.SmallDateTime
  IdCliente          String    @db.VarChar(255)
  Situacao           String?   @db.VarChar(20)
}

model Municipio {
  Id     Int    @id(map: "PK__Municipi__3214EC07973F2C23") @default(autoincrement())
  Codigo Int
  Nome   String @db.VarChar(255)
  Uf     String @db.Char(2)
}

model naoConformidadeLGPD {
  Id           Int     @id(map: "PK__naoConfo__3214EC078D700717") @default(autoincrement())
  Codigo       String  @db.VarChar(20)
  Nome         String  @db.VarChar(255)
  Descricao    String  @db.VarChar(5000)
  Detalhamento String  @db.VarChar(5000)
  BaseLegal    String? @db.VarChar(5000)
}

model NaturezaConta {
  Id                   Int                 @id(map: "PK_NaturezaConta") @default(autoincrement())
  IntegraKey           String?             @db.NVarChar(100)
  Codigo               String?             @db.NVarChar(20)
  Nome                 String?             @db.NVarChar(100)
  Descricao            String?             @db.NVarChar(Max)
  Ativo                Int?
  OrigemConta          Int?
  DescricaoOrigemConta String?             @db.NVarChar(10)
  ContaOrcamentaria    ContaOrcamentaria[]
  Orcamento            Orcamento[]
  OrcamentoRateado     OrcamentoRateado[]
}

model NaturezaProduto {
  Id                   Int                    @id(map: "PK_NaturezaProduto") @default(autoincrement())
  Codigo               String?                @db.NVarChar(100)
  Nome                 String?                @db.NVarChar(3000)
  Descricao            String?
  isSMD                Int?
  EmpresaId            Int?
  Sigla                String?                @db.VarChar(100)
  NaturezaConsumo      Int?
  PadraoConsumo        Int?
  Ativo                Int?
  HabilitaImportacao   Int?
  isMeta               Int?
  AgendaOrquestra      AgendaOrquestra[]
  PlanejamentoProducao PlanejamentoProducao[]
  Produto              Produto[]
}

model NivelCargo {
  Id                       Int                        @id(map: "PK_NivelCargo") @default(autoincrement())
  Codigo                   String?                    @db.NVarChar(20)
  Nome                     String?                    @db.NVarChar(500)
  Descricao                String?                    @db.NVarChar(500)
  Ativo                    Int?
  GrupoCargoId             Int?
  CargoNivelCargo          CargoNivelCargo[]
  GrupoCargo               GrupoCargo?                @relation(fields: [GrupoCargoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_NivelCargo_GrupoCargo")
  PlanejamentoOrcamentario PlanejamentoOrcamentario[]
  Recurso                  Recurso[]
}

model Objetivo {
  Id                                                          Int               @id(map: "PK_Objetivo") @default(autoincrement())
  Codigo                                                      String?           @db.NVarChar(20)
  Nome                                                        String?           @db.NVarChar(100)
  Descricao                                                   String?           @db.NVarChar(3000)
  PerspectivaId                                               Int?
  DiretrizId                                                  Int?
  PlanoAnual                                                  Int?
  Tipo                                                        Int?
  Ativo                                                       Int?
  PlanoPlurianualId                                           Int?
  TemaEstrategicoId                                           Int?
  Indicador                                                   Indicador[]
  Iniciativa                                                  Iniciativa[]
  MapaEstrategico                                             MapaEstrategico[]
  Diretriz                                                    Diretriz?         @relation(fields: [DiretrizId], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Objetivo_Diretriz")
  Perspectiva                                                 Perspectiva?      @relation(fields: [PerspectivaId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_Objetivo_Perspectiva")
  PlanoPlurianual_Objetivo_PlanoPlurianualIdToPlanoPlurianual PlanoPlurianual?  @relation("Objetivo_PlanoPlurianualIdToPlanoPlurianual", fields: [PlanoPlurianualId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Objetivo_PlanoPlurianual")
  TemaEstrategico                                             TemaEstrategico?  @relation(fields: [TemaEstrategicoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Objetivo_TemaEstrategico")
  PlanoAcao                                                   PlanoAcao[]
  PlanoPlurianual_PlanoPlurianual_ObjetivoIdToObjetivo        PlanoPlurianual[] @relation("PlanoPlurianual_ObjetivoIdToObjetivo")
  Processo                                                    Processo[]
  Projeto                                                     Projeto[]
}

model Orcamento {
  Id                       Int                     @id(map: "PK_Orcamento") @default(autoincrement())
  IntegraKey               String?                 @db.NVarChar(100)
  Ano                      Int?
  Mes                      Int?
  DataReferencia           DateTime?               @db.DateTime
  EmpresaId                Int?
  NaturezaContaId          Int?
  UnidadeOrganizacionalId  Int?
  CentroResponsabilidadeId Int?
  ContaOrcamentariaId      Int?
  VersaoOrcamento          Int?
  Recebido                 Float?                  @db.Money
  Valor                    Float?                  @db.Money
  ValorAcumulado           Float?                  @db.Money
  ValorReal                Float?                  @db.Money
  ValorRealAcumulado       Float?                  @db.Money
  ValorRevisado            Float?                  @db.Money
  ValorRevisadoAcumulado   Float?                  @db.Money
  ValorSaldoAcumulado      Float?                  @db.Money
  AgrupadorContaId         Int?
  AgrupadorUnidadeId       Int?
  AgrupadorCentroId        Int?
  UnidadeNegocioId         Int?
  ValorRetificado          Float?                  @db.Money
  ValorSuplementado        Float?                  @db.Money
  ValorTransposto          Float?                  @db.Money
  CentroResponsabilidade   CentroResponsabilidade? @relation(fields: [CentroResponsabilidadeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Orcamento_CentroResponsabilidade")
  ContaOrcamentaria        ContaOrcamentaria?      @relation(fields: [ContaOrcamentariaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Orcamento_ContaOrcamentaria")
  Empresa                  Empresa?                @relation(fields: [EmpresaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Orcamento_Empresa")
  NaturezaConta            NaturezaConta?          @relation(fields: [NaturezaContaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Orcamento_NaturezaConta")
  UnidadeOrganizacional    UnidadeOrganizacional?  @relation(fields: [UnidadeOrganizacionalId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Orcamento_UnidadeOrganizacional")

  @@index([IntegraKey, Ano, EmpresaId], map: "IDX_INTEGRAKEY_ORCAMENTO_ano")
  @@index([Ano, EmpresaId, UnidadeOrganizacionalId, CentroResponsabilidadeId, ContaOrcamentariaId, VersaoOrcamento, Mes], map: "OrcamentoRateado>")
}

model OrcamentoRateado {
  ID                       Int                     @id(map: "PK_OrcamentoRateado") @default(autoincrement())
  Ano                      Int?
  Mes                      Int?
  EmpresaId                Int?
  AgrupadorCentroId        Int?
  CentroResponsabilidadeId Int?
  AgrupadorUnidadeId       Int?
  UnidadeOrganizacionalId  Int?
  UnidadeNegocioId         Int?
  NaturezaContaId          Int?
  AgrupadorContaId         Int?
  ContaOrcamentariaId      Int?
  VersaoOrcamento          Int?
  OrigemBase               String?                 @db.NVarChar(100)
  Valor                    Float?                  @db.Money
  ValorAcumulado           Float?                  @db.Money
  ValorReal                Float?                  @db.Money
  ValorRealAcumulado       Float?                  @db.Money
  ValorRevisado            Float?                  @db.Money
  ValorRevisadoAcumulado   Float?                  @db.Money
  ValorSaldoAcumulado      Float?                  @db.Money
  AgrupadorCentro          AgrupadorCentro?        @relation(fields: [AgrupadorCentroId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_OrcamentoRateado_AgrupadorCentro")
  AgrupadorConta           AgrupadorConta?         @relation(fields: [AgrupadorContaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_OrcamentoRateado_AgrupadorConta")
  AgrupadorUnidade         AgrupadorUnidade?       @relation(fields: [AgrupadorUnidadeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_OrcamentoRateado_AgrupadorUnidade")
  CentroResponsabilidade   CentroResponsabilidade? @relation(fields: [CentroResponsabilidadeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_OrcamentoRateado_CentroResponsabilidade")
  ContaOrcamentaria        ContaOrcamentaria?      @relation(fields: [ContaOrcamentariaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_OrcamentoRateado_ContaOrcamentaria")
  Empresa                  Empresa?                @relation(fields: [EmpresaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_OrcamentoRateado_Empresa")
  NaturezaConta            NaturezaConta?          @relation(fields: [NaturezaContaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_OrcamentoRateado_NaturezaConta")
  UnidadeNegocio           UnidadeNegocio?         @relation(fields: [UnidadeNegocioId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_OrcamentoRateado_UnidadeNegocio")
  UnidadeOrganizacional    UnidadeOrganizacional?  @relation(fields: [UnidadeOrganizacionalId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_OrcamentoRateado_UnidadeOrganizacional")
}

model OrdemVenda {
  Id                Int       @id(map: "PK__OrdemVen__3214EC07D3B42F41") @default(autoincrement())
  Instancia         Int?
  Entidade          Int?
  Cliente           String?   @db.NVarChar(255)
  Usuario           Int?
  DataOrdem         DateTime? @db.DateTime
  CondicaoPagamento String?   @db.NVarChar(50)
  TipoPagamento     String?   @db.NVarChar(50)
  TipoOperacao      String?   @db.NVarChar(100)
  NomeOrdem         String?   @db.VarChar(20)
}

model OrdemVendaLinha {
  Id               Int       @id(map: "PK__OrdemVen__3214EC07ED40A770") @default(autoincrement())
  Instancia        Int?
  Produto          Int?
  NomeServico      String?   @db.NVarChar(100)
  DataOrdem        DateTime? @db.DateTime
  Valor            Decimal?  @db.Decimal(16, 2)
  ValorDesconto    Decimal?  @db.Decimal(16, 2)
  ValorSemDesconto Decimal?  @db.Decimal(16, 2)
  TipoOperacao     String?   @db.NVarChar(100)
  NomeOrdem        String?   @db.VarChar(20)
}

model Ordens_Tesouraria {
  Id          Int       @id(map: "PK_Ordens_Tesouraria") @default(autoincrement())
  ProcessoId  Int?
  TarefaId    Int?
  EntidadeId  Int?
  Ordem       String?   @db.VarChar(Max)
  Fornecedor  String?   @db.VarChar(Max)
  Valor       Float?
  Vencimento  DateTime? @db.DateTime
  Status      String?   @db.VarChar(Max)
  Atualizacao DateTime? @db.DateTime
}

model OrigemRecursoFinanceiro {
  Id                Int                 @id(map: "PK_OrigemRecursoFinanceiro") @default(autoincrement())
  Codigo            String?             @db.VarChar(50)
  Nome              String?             @db.VarChar(500)
  Ativo             Int?
  DespesaFinanceira DespesaFinanceira[]
  ProjetoEquipe     ProjetoEquipe[]
}

model OrigemSalario {
  Id                  Int            @id(map: "PK_OrigemSalario") @default(autoincrement())
  Codigo              String?        @db.NVarChar(20)
  Nome                String?        @db.NVarChar(500)
  ContaOrcamentariaId String?        @db.NVarChar(20)
  Superior            Int?
  AcumuladorConta     String?        @db.NVarChar(20)
  ValorSalario        ValorSalario[]
}

model Parametro {
  Id    Int     @id(map: "PK_Parametro") @default(autoincrement())
  Nome  String? @db.NVarChar(500)
  Valor String?
}

model PerfilMetodo {
  Id          Int          @id(map: "PK_PerfilMetodo") @default(autoincrement())
  MetodoId    Int?
  PerfilId    Int?
  Metodo      Metodo?      @relation(fields: [MetodoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PerfilMetodo_Metodo")
  AspNetUsers AspNetUsers? @relation(fields: [PerfilId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PerfilMetodo_Perfil")
}

model PeriodicidadeExecucaoServico {
  Id        Int       @id(map: "PK__Periodic__3214EC07D92D816D") @default(autoincrement())
  Descricao String?   @db.VarChar(50)
  QtdDias   Int?
  Recurso   Recurso[]
}

model Periodo {
  Id            Int     @id(map: "PK_Periodo") @default(autoincrement())
  Periodicidade Int?
  Numero        Int?
  Nome          String? @db.VarChar(100)
  NomeResumido  String? @db.VarChar(100)
}

model Perspectiva {
  Id                                                             Int                   @id(map: "PK_Perspectiva") @default(autoincrement())
  Codigo                                                         String?               @db.NVarChar(20)
  Nome                                                           String?               @db.NVarChar(100)
  Descricao                                                      String?               @db.NVarChar(3000)
  PlanoAnual                                                     Int?
  Tipo                                                           Int?
  Ativo                                                          Int?
  PlanoPlurianualId                                              Int?
  EmpresaId                                                      Int?
  Diretriz                                                       Diretriz[]
  Indicador                                                      Indicador[]
  IntencaoEstrategica                                            IntencaoEstrategica[]
  MapaEstrategico                                                MapaEstrategico[]
  Objetivo                                                       Objetivo[]
  Empresa                                                        Empresa?              @relation(fields: [EmpresaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Perspectiva_Empresa")
  PlanoPlurianual_Perspectiva_PlanoPlurianualIdToPlanoPlurianual PlanoPlurianual?      @relation("Perspectiva_PlanoPlurianualIdToPlanoPlurianual", fields: [PlanoPlurianualId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Perspectiva_PlanoPlurianual")
  PlanoAcao                                                      PlanoAcao[]
  PlanoPlurianual_PlanoPlurianual_PerspectivaIdToPerspectiva     PlanoPlurianual[]     @relation("PlanoPlurianual_PerspectivaIdToPerspectiva")
}

model PesquisaSatisfacaoComunicacao {
  Id               Int       @id(map: "PK__Pesquisa__3214EC07D99D34A1") @default(autoincrement())
  Instancia        Int?
  Solicitacao      String?   @db.VarChar(255)
  Atendida         String?   @db.VarChar(15)
  ParteNaoAtendida String?   @db.VarChar(255)
  Satisfacao       String?   @db.VarChar(15)
  Facilidade       String?   @db.VarChar(15)
  Performance      String?   @db.VarChar(15)
  Tempo            String?   @db.VarChar(15)
  Resultados       String?   @db.VarChar(15)
  Expectativa      String?   @db.VarChar(15)
  Qualidade        String?   @db.VarChar(15)
  DataCriacao      DateTime? @db.DateTime
  Comentario       String?   @db.VarChar(5000)
}

model Pessoa {
  Id                                                              Int                             @id(map: "PK_Pessoa") @default(autoincrement())
  TipoPessoa                                                      Int?
  CNPJ                                                            String?                         @db.NVarChar(20)
  CPF                                                             String?                         @db.NVarChar(20)
  CEI                                                             String?                         @db.NVarChar(20)
  AgenteMercado                                                   String?                         @db.NVarChar(100)
  AtividadeEconomicaId                                            Int?
  PorteEstabelecimento                                            Int?
  EnderecoBairro                                                  String?                         @db.NVarChar(500)
  EnderecoCEP                                                     String?                         @db.NVarChar(10)
  EnderecoComplemento                                             String?                         @db.NVarChar(250)
  EnderecoNumero                                                  String?                         @db.NVarChar(100)
  EnderecoRua                                                     String?                         @db.NVarChar(500)
  EnderecoCidadeId                                                Int?
  EstadoId                                                        Int?
  SimplesNacional                                                 Boolean?
  Contribuinte                                                    Int?
  QuantidadeEmpregados                                            Int?
  QuantidadeTerceirizados                                         Int?
  DataAtualizacao                                                 DateTime?                       @db.DateTime
  RazaoSocial                                                     String?                         @db.VarChar(500)
  Industria                                                       Boolean?
  BaseNacional                                                    Boolean?
  Site                                                            String?                         @db.VarChar(200)
  Ativo                                                           Int?
  SESMT                                                           Boolean?
  PlanSaude                                                       Int?
  Serasa                                                          String?                         @db.VarChar(100)
  NomeEstrategico                                                 String?                         @db.VarChar(100)
  PosicaoEstrategico                                              String?                         @db.VarChar(100)
  FoneEstrategico                                                 String?                         @db.VarChar(16)
  ResumoExecutivo                                                 Int?
  CriadoEm                                                        DateTime?                       @db.DateTime
  AtualizadoEm                                                    DateTime?                       @db.DateTime
  AtualizadoPor                                                   String?                         @db.VarChar(128)
  AtualizadoPorId                                                 String?                         @db.VarChar(128)
  Situacao                                                        String?                         @db.VarChar(20)
  GrauRisco                                                       Int?
  Toxica                                                          Boolean?
  PoloIndustrial                                                  String?                         @db.VarChar(255)
  PontoReferencia                                                 String?                         @db.NVarChar(100)
  ContatoCelular                                                  String?                         @db.NVarChar(16)
  ContatoEmail                                                    String?                         @db.NVarChar(100)
  ContatoTelefoneComercial                                        String?                         @db.NVarChar(15)
  ContatoTelefoneResidencial                                      String?                         @db.NVarChar(15)
  ContatoObservacao                                               String?                         @db.NVarChar(Max)
  SindicatoId                                                     Int?
  Nome                                                            String?                         @db.VarChar(500)
  InscricaoMunicipal                                              String?                         @db.VarChar(15)
  InscricaoEstadual                                               String?                         @db.VarChar(16)
  CodigoERP                                                       String?                         @db.VarChar(50)
  OID                                                             Int?
  CarteiraUnidadeSESIId                                           Int?
  CarteiraUnidadeSENAIId                                          Int?
  MatrizFilial                                                    Int?
  CpfVinculado                                                    String?                         @db.VarChar(20)
  CnpjVinculado                                                   String?                         @db.VarChar(20)
  TipoConta                                                       Int?
  TipoEmpresa                                                     Int?
  PorteReceita                                                    Int?
  Facebook                                                        String?                         @db.VarChar(100)
  Instagram                                                       String?                         @db.VarChar(100)
  GrupoEmpresarialId                                              Int?
  Rg                                                              String?                         @db.VarChar(20)
  Parentesco                                                      String?                         @db.VarChar(100)
  Nascimento                                                      DateTime?                       @db.DateTime
  Sexo                                                            Int?
  EstadoCivil                                                     Int?
  Profissao                                                       String?                         @db.VarChar(100)
  CodigoSMais                                                     String?                         @db.VarChar(50)
  EntidadeSistemaS                                                Int?
  LinkedIn                                                        String?                         @db.VarChar(100)
  AgendaServico                                                   AgendaServico[]
  AgendaSSI                                                       AgendaSSI[]
  AgendaUnidadeMovelEquipamento                                   AgendaUnidadeMovelEquipamento[]
  BeneficiadoEmpresa                                              BeneficiadoEmpresa[]
  GrupoEmpresarial                                                GrupoEmpresarial?               @relation(fields: [GrupoEmpresarialId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Pessoa_GrupoEmpresarial")
  UnidadeNegocio_Pessoa_CarteiraUnidadeSENAIIdToUnidadeNegocio    UnidadeNegocio?                 @relation("Pessoa_CarteiraUnidadeSENAIIdToUnidadeNegocio", fields: [CarteiraUnidadeSENAIId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Pessoa_UnidadeNegocioSENAI")
  UnidadeNegocio_Pessoa_CarteiraUnidadeSESIIdToUnidadeNegocio     UnidadeNegocio?                 @relation("Pessoa_CarteiraUnidadeSESIIdToUnidadeNegocio", fields: [CarteiraUnidadeSESIId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Pessoa_UnidadeNegocioSESI")
  PessoaContato                                                   PessoaContato[]
  PessoaResponsavel_PessoaResponsavel_PessoaIdToPessoa            PessoaResponsavel[]             @relation("PessoaResponsavel_PessoaIdToPessoa")
  PessoaResponsavel_PessoaResponsavel_PessoaResponsavelIdToPessoa PessoaResponsavel[]             @relation("PessoaResponsavel_PessoaResponsavelIdToPessoa")
  PessoaSocio                                                     PessoaSocio[]
  PessoaUnidade                                                   PessoaUnidade[]
  Projeto_Projeto_GerenteProjetoIdToPessoa                        Projeto[]                       @relation("Projeto_GerenteProjetoIdToPessoa")
  Projeto_Projeto_GerenteProjetoEmpresaIdToPessoa                 Projeto[]                       @relation("Projeto_GerenteProjetoEmpresaIdToPessoa")
  ProjetoAbrangencia                                              ProjetoAbrangencia[]
  Proposta                                                        Proposta[]
  Recurso                                                         Recurso[]
  RecursoHumanoPessoa                                             RecursoHumanoPessoa[]
}

model PessoaContato {
  Id                         Int                 @id(map: "PK_PessoaContato") @default(autoincrement())
  PessoaId                   Int?
  Nome                       String?             @db.NVarChar(255)
  Sequencial                 Int?
  TipoContatoId              Int?
  ContatoCelular             String?             @db.NVarChar(15)
  ContatoEmail               String?             @db.NVarChar(100)
  ContatoTelefoneComercial   String?             @db.NVarChar(15)
  ContatoTelefoneResidencial String?             @db.NVarChar(15)
  ContatoObservacao          String?             @db.NVarChar(200)
  Cargo                      String?             @db.NVarChar(255)
  DataAtualizacao            DateTime?           @db.DateTime
  Aniversario                DateTime?           @db.DateTime
  //TipoContato                Int?
  Status                     Int?
  CargoContatoId             Int?
  Area                       String?             @db.NVarChar(255)
  AreaContatoId              Int?
  AreaContato                AreaContato?        @relation(fields: [AreaContatoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PessoaContatoAreaContato")
  CargoContato               CargoContato?       @relation(fields: [CargoContatoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PessoaContatoCargoContato")
  Pessoa                     Pessoa?             @relation(fields: [PessoaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PessoaContatoPessoa")
  TipoContato                TipoContato?        @relation(fields: [TipoContatoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PessoaContatoTipoContato")
  PessoaContatoItem          PessoaContatoItem[]
}

model PessoaContatoItem {
  Id                       Int            @id(map: "PK_PessoaContatoItem") @default(autoincrement())
  PessoaContatoId          Int?
  DataContato              DateTime?
  MeioContato              String?        @db.VarChar(100)
  EmpresaId                Int?
  TipoAssunto              String?        @db.VarChar(100)
  Categoria                String?        @db.NVarChar(100)
  Informacoes              String?        @db.NVarChar(255)
  DataProximoContato       DateTime?
  MelhorHorario            String?        @db.NVarChar(100)
  NecessitaProposta        Int?
  GeraOportunidade         Int?
  Tipo                     String?        @db.NVarChar(100)
  Status                   String?        @db.NVarChar(100)
  NomeConsultor            String?        @db.NVarChar(100)
  CodigoOrquestraConsultor Int?
  EmailConsultor           String?        @db.NVarChar(100)
  Instancia                Int?
  Empresa                  Empresa?       @relation(fields: [EmpresaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PessoaContatoItem_Empresa")
  PessoaContato            PessoaContato? @relation(fields: [PessoaContatoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PessoaContatoItem_PessoaContato")
}

model PessoaResponsavel {
  Id                                                   Int     @id(map: "PK_PessoaResponsavel") @default(autoincrement())
  PessoaId                                             Int?
  PessoaResponsavelId                                  Int?
  TipoResponsavel                                      String? @db.NVarChar(100)
  Observacao                                           String? @db.NVarChar(800)
  Pessoa_PessoaResponsavel_PessoaIdToPessoa            Pessoa? @relation("PessoaResponsavel_PessoaIdToPessoa", fields: [PessoaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Pessoa_PessoaResponsavel")
  Pessoa_PessoaResponsavel_PessoaResponsavelIdToPessoa Pessoa? @relation("PessoaResponsavel_PessoaResponsavelIdToPessoa", fields: [PessoaResponsavelId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Responsavel_PessoaResponsavel")
}

model PessoaSocio {
  Id           Int     @id(map: "PK_PessoaSocio") @default(autoincrement())
  PessoaId     Int?
  CPF          String? @db.VarChar(20)
  Nome         String? @db.VarChar(100)
  Qualificacao String? @db.VarChar(500)
  Pessoa       Pessoa? @relation(fields: [PessoaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PessoaSocio_Pessoa")
}

model PessoaUnidade {
  Id                Int             @id(map: "PK_PessoaUnidade") @default(autoincrement())
  PessoaId          Int?
  EmpresaId         Int?
  CarteiraUnidadeId Int?
  Empresa           Empresa?        @relation(fields: [EmpresaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PessoaUnidade_Empresa")
  Pessoa            Pessoa?         @relation(fields: [PessoaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PessoaUnidade_Pessoa")
  UnidadeNegocio    UnidadeNegocio? @relation(fields: [CarteiraUnidadeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PessoaUnidade_UnidadeNegocio")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model Plan1_ {
  Entidade                Float?
  Unidade                 Float?
  Centro                  Float?
  AlcadaAdministrador     Float?
  ResponsavelInicial      Float?
  Valor1                  String? @db.NVarChar(255)
  NomeInicial             String? @db.NVarChar(255)
  ResponsavelSecundario   Float?
  Valor2                  String? @db.NVarChar(255)
  NomeSecundario          String? @db.NVarChar(255)
  ResponsavelFinal        Float?
  Valor3                  String? @db.NVarChar(255)
  NomeFinal               String? @db.NVarChar(255)
  DsEmail                 String? @db.NVarChar(255)
  NomeAlcadaAdministrador String? @db.NVarChar(255)
  NomeAlcadaTi            String? @db.NVarChar(255)
  ResponsavelAlcadaTi     Float?
  CUnidade                String? @db.VarChar(20)
  CCentro                 String? @db.VarChar(20)
  Ano                     String? @db.VarChar(10)

  @@map("Plan1$")
  @@ignore
}

model PlanejamentoContasAdicionais {
  Id        Int       @id(map: "PK_PlanejamentoContasAdicionais") @default(autoincrement())
  RecursoId Int?
  Ano       Int?
  Mes       Int?
  Dia       Int?
  Data      DateTime? @db.DateTime
  TipoConta Int?
  Horas     Decimal?  @db.Decimal(16, 2)
  Recurso   Recurso?  @relation(fields: [RecursoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PlanejamentoContasAdicionais_Recurso")
}

model PlanejamentoOrcamentario {
  Id                       Int                     @id(map: "PK_PlanejamentoOrcamentario") @default(autoincrement())
  EmpresaId                Int?
  UnidadeOrganizacionalId  Int?
  CentroResponsabilidadeId Int?
  RecursoId                Int?
  CargoId                  Int?
  NivelCargoId             Int?
  Preco                    Float?                  @db.Money
  DataAtualizacao          DateTime?
  Quantidade1              Int?
  Quantidade2              Int?
  Quantidade3              Int?
  Quantidade4              Int?
  Quantidade5              Int?
  Quantidade6              Int?
  Quantidade7              Int?
  Quantidade8              Int?
  Quantidade9              Int?
  Quantidade10             Int?
  Quantidade11             Int?
  Quantidade12             Int?
  ValorPrevisto1           Float?                  @db.Money
  ValorPrevisto2           Float?                  @db.Money
  ValorPrevisto3           Float?                  @db.Money
  ValorPrevisto4           Float?                  @db.Money
  ValorPrevisto5           Float?                  @db.Money
  ValorPrevisto6           Float?                  @db.Money
  ValorPrevisto7           Float?                  @db.Money
  ValorPrevisto8           Float?                  @db.Money
  ValorPrevisto9           Float?                  @db.Money
  ValorPrevisto10          Float?                  @db.Money
  ValorPrevisto11          Float?                  @db.Money
  ValorPrevisto12          Float?                  @db.Money
  VersaoPlanejamento       Int?
  Descritivo               String?
  UnidadeOperacionalId     Int?
  Percentual               Decimal?                @db.Decimal(16, 2)
  SetorId                  Int?
  Ano                      Int?
  Cargo                    Cargo?                  @relation(fields: [CargoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PlanejamentoOrcamentario_Cargo")
  CentroResponsabilidade   CentroResponsabilidade? @relation(fields: [CentroResponsabilidadeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PlanejamentoOrcamentario_CentroResponsabilidade")
  Empresa                  Empresa?                @relation(fields: [EmpresaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PlanejamentoOrcamentario_Empresa")
  NivelCargo               NivelCargo?             @relation(fields: [NivelCargoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PlanejamentoOrcamentario_NivelCargo")
  Recurso                  Recurso?                @relation(fields: [RecursoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PlanejamentoOrcamentario_Recurso")
  UnidadeOrganizacional    UnidadeOrganizacional?  @relation(fields: [UnidadeOrganizacionalId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PlanejamentoOrcamentario_UnidadeOrganizacional")
  UnidadeOperacional       UnidadeOperacional?     @relation(fields: [UnidadeOperacionalId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PlanejamentoOrcamentarioUnidadeOperacional")
  RateioMaoDeObra          RateioMaoDeObra[]
}

model PlanejamentoProducao {
  Id                         Int                          @id(map: "PK_PlanejamentoProducao") @default(autoincrement())
  ProdutoId                  Int?
  TempoExecucao              Decimal?                     @db.Decimal(10, 2)
  TempoTotal                 Decimal?                     @db.Decimal(10, 2)
  ValorPrevisto              Decimal?                     @db.Decimal(10, 2)
  ValorRevisto               Decimal?                     @db.Decimal(10, 2)
  ValorReal                  Decimal?                     @db.Decimal(10, 2)
  Ano                        Decimal?                     @db.Decimal(10, 2)
  NaturezaProdutoId          Int?
  UnidadeOrganizacionalId    Int?
  CentroResponsabilidadeId   Int?
  QuantidadePrevista1        Decimal?                     @db.Decimal(10, 2)
  QuantidadePrevista2        Decimal?                     @db.Decimal(10, 2)
  QuantidadePrevista3        Decimal?                     @db.Decimal(10, 2)
  QuantidadePrevista4        Decimal?                     @db.Decimal(10, 2)
  QuantidadePrevista5        Decimal?                     @db.Decimal(10, 2)
  QuantidadePrevista6        Decimal?                     @db.Decimal(10, 2)
  QuantidadePrevista7        Decimal?                     @db.Decimal(10, 2)
  QuantidadePrevista8        Decimal?                     @db.Decimal(10, 2)
  QuantidadePrevista9        Decimal?                     @db.Decimal(10, 2)
  QuantidadePrevista10       Decimal?                     @db.Decimal(10, 2)
  QuantidadePrevista11       Decimal?                     @db.Decimal(10, 2)
  QuantidadePrevista12       Decimal?                     @db.Decimal(10, 2)
  QuantidadeRealizada1       Decimal?                     @db.Decimal(10, 2)
  QuantidadeRealizada2       Decimal?                     @db.Decimal(10, 2)
  QuantidadeRealizada3       Decimal?                     @db.Decimal(10, 2)
  QuantidadeRealizada4       Decimal?                     @db.Decimal(10, 2)
  QuantidadeRealizada5       Decimal?                     @db.Decimal(10, 2)
  QuantidadeRealizada6       Decimal?                     @db.Decimal(10, 2)
  QuantidadeRealizada7       Decimal?                     @db.Decimal(10, 2)
  QuantidadeRealizada8       Decimal?                     @db.Decimal(10, 2)
  QuantidadeRealizada9       Decimal?                     @db.Decimal(10, 2)
  QuantidadeRealizada10      Decimal?                     @db.Decimal(10, 2)
  QuantidadeRealizada11      Decimal?                     @db.Decimal(10, 2)
  QuantidadeRealizada12      Decimal?                     @db.Decimal(10, 2)
  QuantidadeRevista1         Decimal?                     @db.Decimal(10, 2)
  QuantidadeRevista2         Decimal?                     @db.Decimal(10, 2)
  QuantidadeRevista3         Decimal?                     @db.Decimal(10, 2)
  QuantidadeRevista4         Decimal?                     @db.Decimal(10, 2)
  QuantidadeRevista5         Decimal?                     @db.Decimal(10, 2)
  QuantidadeRevista6         Decimal?                     @db.Decimal(10, 2)
  QuantidadeRevista7         Decimal?                     @db.Decimal(10, 2)
  QuantidadeRevista8         Decimal?                     @db.Decimal(10, 2)
  QuantidadeRevista9         Decimal?                     @db.Decimal(10, 2)
  QuantidadeRevista10        Decimal?                     @db.Decimal(10, 2)
  QuantidadeRevista11        Decimal?                     @db.Decimal(10, 2)
  QuantidadeRevista12        Decimal?                     @db.Decimal(10, 2)
  CentroResponsabilidade     CentroResponsabilidade?      @relation(fields: [CentroResponsabilidadeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PlanejamentoProducao_CentroResponsabilidade")
  NaturezaProduto            NaturezaProduto?             @relation(fields: [NaturezaProdutoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PlanejamentoProducao_NaturezaProduto")
  Produto                    Produto?                     @relation(fields: [ProdutoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PlanejamentoProducao_Produto")
  UnidadeOrganizacional      UnidadeOrganizacional?       @relation(fields: [UnidadeOrganizacionalId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PlanejamentoProducao_UnidadeOrganizacional")
  PlanejamentoProducaoRateio PlanejamentoProducaoRateio[]
}

model PlanejamentoProducaoRateio {
  Id                     Int                   @id(map: "PK_PlanejamentoProducaoRateio") @default(autoincrement())
  PlanejamentoProducaoId Int?
  RecursoId              Int?
  HorasDisponiveis       Decimal?              @db.Decimal(10, 2)
  TotalHoras             Decimal?              @db.Decimal(10, 2)
  QuantidadePrevisto     Decimal?              @db.Decimal(10, 2)
  QuantidadeValorRevista Decimal?              @db.Decimal(10, 2)
  QuantidadeReal         Decimal?              @db.Decimal(10, 2)
  Curso                  String?               @db.VarChar(1000)
  TipoAcao               Int?
  Situacao               Int?
  DataInicio             DateTime?             @db.DateTime
  DataTermino            DateTime?             @db.DateTime
  TipoMatricula          Int?
  CidadeId               Int?
  OrigemLancamento       Int?
  Ano                    Decimal?              @db.Decimal(10, 2)
  Mes                    Decimal?              @db.Decimal(10, 2)
  Cidade                 Cidade?               @relation(fields: [CidadeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Cidade_PlanejamentoProducaoRateio")
  PlanejamentoProducao   PlanejamentoProducao? @relation(fields: [PlanejamentoProducaoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PlanejamentoProducao_PlanejamentoProducaoRateio")
  Recurso                Recurso?              @relation(fields: [RecursoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PlanejamentoProducaoRateio_Recurso")
}

model PlanoAcao {
  Id                    Int                 @id(map: "PK_PlanoAcao") @default(autoincrement())
  EmpresaId             Int
  Titulo                String              @db.NVarChar(500)
  Descritivo            String              @db.NVarChar(3000)
  Tipo                  Int
  RecursoId             Int?
  ObjetivoId            Int
  PerspectivaId         Int
  DiretrizId            Int
  IntencaoEstrategicaId Int
  DataPrevista          DateTime?           @db.DateTime
  DataConclusao         DateTime?           @db.DateTime
  Status                Int?
  PercentualConclusao   Decimal?            @db.Decimal(5, 2)
  Processo              Int?
  Ativo                 Int?
  ProcessoId            Int?
  PlanoPlurianualId     Int?
  Iniciativa            Iniciativa[]
  Diretriz              Diretriz            @relation(fields: [DiretrizId], references: [ID], onUpdate: NoAction, map: "FK_PlanoAcao_Diretriz")
  IntencaoEstrategica   IntencaoEstrategica @relation(fields: [IntencaoEstrategicaId], references: [ID], onUpdate: NoAction, map: "FK_PlanoAcao_IntencaoEstrategica")
  Objetivo              Objetivo            @relation(fields: [ObjetivoId], references: [Id], onUpdate: NoAction, map: "FK_PlanoAcao_Objetivo")
  Perspectiva           Perspectiva         @relation(fields: [PerspectivaId], references: [Id], onUpdate: NoAction, map: "FK_PlanoAcao_Perspectiva")
  PlanoPlurianual       PlanoPlurianual?    @relation(fields: [PlanoPlurianualId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PlanoAcao_PlanoPlurianual")
  Recurso               Recurso?            @relation(fields: [RecursoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PlanoAcao_Recurso")
  PlanoAcaoAnexo        PlanoAcaoAnexo[]
  PlanoAcaoEquipe       PlanoAcaoEquipe[]
  PlanoAcaoItem         PlanoAcaoItem[]
  PlanoAcaoStatus       PlanoAcaoStatus[]
}

model PlanoAcaoAnexo {
  Id              Int            @id(map: "PK_PlanoAcaoAnexo") @default(autoincrement())
  PlanoAcaoId     Int?
  PlanoAcaoItemId Int?
  Nome            String?        @db.VarChar(100)
  Descricao       String?        @db.VarChar(1000)
  Anexo           String?        @db.VarChar(1000)
  PlanoAcao       PlanoAcao?     @relation(fields: [PlanoAcaoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PlanoAcaoAnexo_PlanoAcao")
  PlanoAcaoItem   PlanoAcaoItem? @relation(fields: [PlanoAcaoItemId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PlanoAcaoAnexo_PlanoAcaoItem")
}

model PlanoAcaoEquipe {
  Id          Int        @id(map: "PK_PlanoAcaoEquipe") @default(autoincrement())
  PlanoAcaoId Int?
  ProcessoId  Int?
  ProjetoId   Int?
  Nome        String?    @db.VarChar(3000)
  Ativo       Int?
  PlanoAcao   PlanoAcao? @relation(fields: [PlanoAcaoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PlanoAcaoEquipe_PlanoAcao")
  Processo    Processo?  @relation(fields: [ProcessoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PlanoAcaoEquipe_Processo")
  Projeto     Projeto?   @relation(fields: [ProjetoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PlanoAcaoEquipe_Projeto")
}

model PlanoAcaoItem {
  Id                                        Int                 @id(map: "PK_PlanoAcaoItem") @default(autoincrement())
  PlanoAcaoId                               Int?
  RecursoId                                 Int?
  DescritivoAcao                            String              @db.NVarChar(3000)
  DataPrevista                              DateTime?           @db.DateTime
  DataConclusao                             DateTime?           @db.DateTime
  Status                                    Int?
  ValorPrevisto                             Decimal?            @db.Decimal(16, 2)
  ValorRevisto                              Decimal?            @db.Decimal(16, 2)
  ValorReal                                 Decimal?            @db.Decimal(16, 2)
  PercentualConclusao                       Decimal?            @db.Decimal(5, 2)
  Processo                                  Int?
  Ativo                                     Int?
  Titulo                                    String?             @db.VarChar(60)
  RiscoId                                   Int?
  DataCadastro                              DateTime?           @db.DateTime
  DataInicio                                DateTime?           @db.DateTime
  ProjetoId                                 Int?
  ProcessoId                                Int?
  PlanoAcaoAnexo                            PlanoAcaoAnexo[]
  PlanoAcao                                 PlanoAcao?          @relation(fields: [PlanoAcaoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PlanoAcaoItem_PlanoAcao")
  Processo_PlanoAcaoItem_ProcessoToProcesso Processo?           @relation("PlanoAcaoItem_ProcessoToProcesso", fields: [Processo], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PlanoAcaoItem_Processo")
  Projeto                                   Projeto?            @relation(fields: [ProjetoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PlanoAcaoItem_Projeto")
  Recurso                                   Recurso?            @relation(fields: [RecursoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PlanoAcaoItem_Recurso")
  Risco                                     Risco?              @relation(fields: [RiscoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PlanoAcaoItem_Risco")
  PlanoAcaoListagem                         PlanoAcaoListagem[]
}

model PlanoAcaoListagem {
  Id              Int            @id(map: "PK_PlanoAcaoListagem") @default(autoincrement())
  PlanoAcaoItemId Int?
  Nome            String?        @db.VarChar(3000)
  Finalizado      Boolean?
  PlanoAcaoItem   PlanoAcaoItem? @relation(fields: [PlanoAcaoItemId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PlanoAcaoListagem_PlanoAcaoItem")
}

model PlanoAcaoStatus {
  Id          Int        @id(map: "PK_PlanoAcaoStatus") @default(autoincrement())
  PlanoAcaoId Int?
  ProjetoId   Int?
  ProcessoId  Int?
  Nome        String?    @db.VarChar(100)
  Descricao   String?    @db.VarChar(1000)
  Cor         String?    @db.VarChar(10)
  Ordem       Int?
  PlanoAcao   PlanoAcao? @relation(fields: [PlanoAcaoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PlanoAcaoStatus_PlanoAcao")
  Processo    Processo?  @relation(fields: [ProcessoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PlanoAcaoStatus_Processo")
  Projeto     Projeto?   @relation(fields: [ProjetoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PlanoAcaoStatus_Projeto")
}

model PlanoAquisicao {
  Id              Int            @id(map: "PK_PlanoAquisicao") @default(autoincrement())
  ProjetoId       Int?
  Ano             Int?
  Mes             Int?
  Descritivo      String?        @db.NVarChar(500)
  Detalhamento    String?        @db.NVarChar(3000)
  ValorPrevisto   Decimal?       @db.Decimal(16, 2)
  ValorRevisto    Decimal?       @db.Decimal(16, 2)
  ValorReal       Decimal?       @db.Decimal(16, 2)
  RubricaId       Int?
  FontePagadoraId Int?
  Contrapartida   Int?
  FontePagadora   FontePagadora? @relation(fields: [FontePagadoraId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PlanoAquisicao_FontePagadora")
  Projeto         Projeto?       @relation(fields: [ProjetoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PlanoAquisicao_Projeto")
  Rubrica         Rubrica?       @relation(fields: [RubricaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PlanoAquisicao_Rubrica")
}

model PlanoEstrategico {
  Id                                                                        Int                        @id(map: "PK_PlanoEstrategico") @default(autoincrement())
  Codigo                                                                    String?                    @db.NVarChar(20)
  Nome                                                                      String?                    @db.NVarChar(500)
  Descricao                                                                 String?                    @db.NVarChar(Max)
  DataInicio                                                                DateTime                   @db.DateTime
  DataTermino                                                               Int?
  Ativo                                                                     Int?
  TipoScoreId                                                               Int?
  PlanoPlurianualId                                                         Int?
  ItemSegmentoIndicadorId                                                   Int?
  SegmentoIndicadorId                                                       Int?
  UtilizaMapaConsolidado                                                    Int?
  MapaEstrategico                                                           MapaEstrategico[]
  PlanoPlurianual_PlanoEstrategico_ItemSegmentoIndicadorIdToPlanoPlurianual PlanoPlurianual?           @relation("PlanoEstrategico_ItemSegmentoIndicadorIdToPlanoPlurianual", fields: [ItemSegmentoIndicadorId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PlanoEstrategico_ItemSegmentoIndicador")
  PlanoPlurianual_PlanoEstrategico_PlanoPlurianualIdToPlanoPlurianual       PlanoPlurianual?           @relation("PlanoEstrategico_PlanoPlurianualIdToPlanoPlurianual", fields: [PlanoPlurianualId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PlanoEstrategico_PlanoPlurianual")
  PlanoPlurianual_PlanoEstrategico_SegmentoIndicadorIdToPlanoPlurianual     PlanoPlurianual?           @relation("PlanoEstrategico_SegmentoIndicadorIdToPlanoPlurianual", fields: [SegmentoIndicadorId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PlanoEstrategico_SegmentoIndicador")
  TipoScore                                                                 TipoScore?                 @relation(fields: [TipoScoreId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PlanoEstrategico_TipoScore")
  PlanoEstrategicoSegmento                                                  PlanoEstrategicoSegmento[]
}

model PlanoEstrategicoSegmento {
  Id                  Int                @id(map: "PK_PlanoEstrategicoSegmento") @default(autoincrement())
  PlanoEstrategicoId  Int?
  SegmentoIndicadorId Int?
  Ativo               Int?
  PlanoEstrategico    PlanoEstrategico?  @relation(fields: [PlanoEstrategicoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PlanoEstrategicoSegmento_PlanoEstrategico")
  SegmentoIndicador   SegmentoIndicador? @relation(fields: [SegmentoIndicadorId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PlanoEstrategicoSegmento_Segmento")
}

model PlanoPlurianual {
  Id                                                                         Int                @id(map: "PK_PlanoPlurianual") @default(autoincrement())
  EmpresaId                                                                  Int?
  Codigo                                                                     String?            @db.NVarChar(20)
  Nome                                                                       String?            @db.NVarChar(500)
  Descricao                                                                  String?            @db.NVarChar(Max)
  AnoInicial                                                                 Int?
  AnoFinal                                                                   Int?
  Ativo                                                                      Int?
  Peso                                                                       Decimal?           @db.Decimal(16, 2)
  SuperiorId                                                                 Int?
  Origem                                                                     Int?
  ObjetivoId                                                                 Int?
  PerspectivaId                                                              Int?
  IndicadorId                                                                Int?
  Diretriz                                                                   Diretriz[]
  Objetivo_Objetivo_PlanoPlurianualIdToPlanoPlurianual                       Objetivo[]         @relation("Objetivo_PlanoPlurianualIdToPlanoPlurianual")
  Perspectiva_Perspectiva_PlanoPlurianualIdToPlanoPlurianual                 Perspectiva[]      @relation("Perspectiva_PlanoPlurianualIdToPlanoPlurianual")
  PlanoAcao                                                                  PlanoAcao[]
  PlanoEstrategico_PlanoEstrategico_ItemSegmentoIndicadorIdToPlanoPlurianual PlanoEstrategico[] @relation("PlanoEstrategico_ItemSegmentoIndicadorIdToPlanoPlurianual")
  PlanoEstrategico_PlanoEstrategico_PlanoPlurianualIdToPlanoPlurianual       PlanoEstrategico[] @relation("PlanoEstrategico_PlanoPlurianualIdToPlanoPlurianual")
  PlanoEstrategico_PlanoEstrategico_SegmentoIndicadorIdToPlanoPlurianual     PlanoEstrategico[] @relation("PlanoEstrategico_SegmentoIndicadorIdToPlanoPlurianual")
  Indicador                                                                  Indicador?         @relation(fields: [IndicadorId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PlanoPlurianual_Indicador")
  Objetivo_PlanoPlurianual_ObjetivoIdToObjetivo                              Objetivo?          @relation("PlanoPlurianual_ObjetivoIdToObjetivo", fields: [ObjetivoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PlanoPlurianual_Objetivo")
  Perspectiva_PlanoPlurianual_PerspectivaIdToPerspectiva                     Perspectiva?       @relation("PlanoPlurianual_PerspectivaIdToPerspectiva", fields: [PerspectivaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PlanoPlurianual_Perspectiva")
  TemaEstrategico                                                            TemaEstrategico[]
}

model PlanoValorVivaMais {
  Id              Int            @id(map: "PK_PlanoValorVivaMais") @default(autoincrement())
  PlanoVivaMaisId Int?
  Valor           Decimal?       @db.Decimal(16, 2)
  Ano             Int?
  PlanoVivaMais   PlanoVivaMais? @relation(fields: [PlanoVivaMaisId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PlanoValorVivaMais_PlanoVivaMais")
}

model PlanoVivaMais {
  Id                 Int                  @id(map: "PK_PlanoVivaMais") @default(autoincrement())
  Nome               String?              @db.VarChar(100)
  Ativo              Int?
  PlanoValorVivaMais PlanoValorVivaMais[]
  Producao           Producao[]
}

model Portfolio {
  Id        Int       @id(map: "PK_Portfolio") @default(autoincrement())
  Codigo    String?   @db.NVarChar(20)
  Nome      String?   @db.NVarChar(100)
  Descricao String?   @db.NVarChar(3000)
  Projeto   Projeto[]
}

model PrestacaoContas {
  Id                     Int                 @id(map: "PK_PrestacaoContas") @default(autoincrement())
  ProjetoId              Int?
  NumeroPrestacao        Int?
  ValorPrevisto          Decimal?            @db.Decimal(16, 2)
  ValorPrevistoParceira  Decimal?            @db.Decimal(16, 2)
  ValorPrevistoDR        Decimal?            @db.Decimal(16, 2)
  ValorRealizado         Decimal?            @db.Decimal(16, 2)
  ValorRealizadoParceira Decimal?            @db.Decimal(16, 2)
  ValorRealizadoDR       Decimal?            @db.Decimal(16, 2)
  Data                   DateTime?           @db.DateTime
  ValorTotal             Decimal?            @db.Decimal(16, 2)
  Status                 Int?
  Situacao               Int?
  ValorTotalRealizado    Decimal?            @db.Decimal(16, 2)
  SaldoTotal             Decimal?            @db.Decimal(16, 2)
  DespesaFinanceira      DespesaFinanceira[]
  Projeto                Projeto?            @relation(fields: [ProjetoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Repasse_Projeto")
}

model PrestacaoContasAnexo {
  Id                           Int                           @id(map: "PK_PrestacaoContasAnexo") @default(autoincrement())
  DespesaFinanceiraId          Int?
  TipoDocumentoId              Int?
  Nome                         String?                       @db.VarChar(100)
  Descricao                    String?                       @db.VarChar(1000)
  Anexo                        String?                       @db.VarChar(1000)
  DespesaFinanceira            DespesaFinanceira?            @relation(fields: [DespesaFinanceiraId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PrestacaoContasAnexo_DespesaFinanceira")
  PrestacaoContasTipoDocumento PrestacaoContasTipoDocumento? @relation(fields: [TipoDocumentoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PrestacaoContasAnexo_TipoDocumento")
}

model PrestacaoContasRepasse {
  Id            Int       @id(map: "PK_PrestacaoContasRepasse") @default(autoincrement())
  ProjetoId     Int?
  NumeroRepasse Int?
  Tipo          Int?
  DataPrevista  DateTime? @db.DateTime
  ValorPrevisto Decimal?  @db.Decimal(16, 2)
  Status        Int?
  Projeto       Projeto?  @relation(fields: [ProjetoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PrestacaoContasRepasse_Projeto")
}

model PrestacaoContasTipoDocumento {
  Id                   Int                    @id(map: "PK_PrestacaoContasTipoDocumento") @default(autoincrement())
  Nome                 String?                @db.VarChar(100)
  Descricao            String?                @db.VarChar(1000)
  Ativo                Int?
  DespesaFinanceira    DespesaFinanceira[]
  PrestacaoContasAnexo PrestacaoContasAnexo[]
}

model Processo {
  Id                                             Int                 @id(map: "PK_Processo") @default(autoincrement())
  Codigo                                         String?             @db.NVarChar(20)
  Nome                                           String?             @db.NVarChar(500)
  //Objetivo                                       String?             @db.NVarChar(500)
  Ativo                                          Int?
  Automatizado                                   Int?
  OrquestraId                                    Int?
  Classificacao                                  Int?
  Tipo                                           Int?
  Superior                                       Int?
  ObjetivoId                                     Int?
  Iniciativa                                     Iniciativa[]
  PlanoAcaoEquipe                                PlanoAcaoEquipe[]
  PlanoAcaoItem_PlanoAcaoItem_ProcessoToProcesso PlanoAcaoItem[]     @relation("PlanoAcaoItem_ProcessoToProcesso")
  PlanoAcaoStatus                                PlanoAcaoStatus[]
  Objetivo                                       Objetivo?           @relation(fields: [ObjetivoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Processo_Objetivo")
  ProcessoAtividade                              ProcessoAtividade[]
}

model ProcessoAtividade {
  Id                    Int                   @id(map: "PK_ProcessoAtividade") @default(autoincrement())
  Codigo                String?               @db.NVarChar(20)
  Nome                  String?               @db.NVarChar(500)
  Controles             String?               @db.NVarChar(500)
  Tipo                  Int?
  DescritivoControle    String?               @db.NVarChar(500)
  ObjetivoControle      String?               @db.NVarChar(500)
  Periodicidade         String?               @db.NVarChar(500)
  Resultado             String?               @db.NVarChar(500)
  Parecer               Int?
  AreaId                Int?
  SetorId               Int?
  ProcessoId            Int?
  Descricao             String?               @db.VarChar(500)
  Tempo                 Int?
  SistemaId             Int?
  CargoId               Int?
  EntidadeOrganogramaId Int?
  AtividadeFatorRisco   AtividadeFatorRisco[]
  Area                  Area?                 @relation(fields: [AreaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Area_ProcessoAtividade")
  Processo              Processo?             @relation(fields: [ProcessoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Processo_ProcessoAtividade")
  Cargo                 Cargo?                @relation(fields: [CargoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProcessoAtividade_Cargo")
  EntidadeOrganograma   EntidadeOrganograma?  @relation(fields: [EntidadeOrganogramaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProcessoAtividade_EntidadeOrganograma")
  Setor                 Setor?                @relation(fields: [SetorId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Setor_ProcessoAtividade")
  SistemasAtividade     SistemasAtividade[]
}

model Producao {
  Id                            Int                     @id(map: "PK_Producao") @default(autoincrement())
  ProdutoId                     Int?
  EmpresaId                     Int?
  UnidadeNegocioId              Int?
  UnidadeOrganizacionalId       Int?
  CentroResponsabilidadeId      Int?
  BeneficiadoId                 Int?
  QuantidadePrevista            Int?
  QuantidadeRevista             Int?
  QuantidadeRealizada           Int?
  TipoProducao                  Int?
  ConsideraFomento              Boolean?
  DataAtualizacao               DateTime?               @db.DateTime
  Responsavel                   String?                 @db.NVarChar(200)
  NumeroControle                String?                 @db.NVarChar(20)
  PessoaId                      Int?
  Ano                           Int?
  Mes                           Int?
  DataProcessamento             DateTime?               @db.DateTime
  DataProducao                  DateTime?               @db.DateTime
  Clientela                     String?                 @db.VarChar(10)
  ClientelaId                   Int?
  TipoAtendimento               String?                 @db.VarChar(200)
  CentroIntegracaoId            Int?
  Normativo                     Int?
  Modalidade                    Int?
  Portfolio                     Int?
  Origem                        Int?
  CpfDependente                 String?                 @db.Char(14)
  NomeDependente                String?                 @db.VarChar(255)
  NomeResponsavel               String?                 @db.VarChar(255)
  DataNascimentoDependente      DateTime?               @db.DateTime
  TipoRegistro                  String?                 @db.VarChar(1)
  CentroIntegracao              Int?
  EstadoId                      Int?
  UoGestora                     String?                 @db.VarChar(100)
  CodContratoSMais              Int?
  NumContratoSMais              String?                 @db.VarChar(100)
  NumAditivo                    Int?
  BaseContrato                  Int?
  Status                        String?                 @db.VarChar(15)
  EstadoExecutorId              Int?
  QuantidadeTrabalhadoresAtivos Int?
  LinhaPlanilha                 Int?
  TrabalhadoresAtivos           Int?
  InativosEstabelecimento       Int?
  TotalEstabelecimento          Int?
  Tipo                          String?                 @db.VarChar(20)
  Valor                         Decimal?                @db.Decimal(16, 2)
  PlanoVivaMaisId               Int?
  PlanoVivaMais                 PlanoVivaMais?          @relation(fields: [PlanoVivaMaisId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Producao_PlanoVivaMais")
  Beneficiado                   Beneficiado?            @relation(fields: [BeneficiadoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProducaoBeneficiado")
  CentroResponsabilidade        CentroResponsabilidade? @relation(fields: [CentroResponsabilidadeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProducaoCentroResponsabilidade")
  Empresa                       Empresa?                @relation(fields: [EmpresaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProducaoEmpresa")
  Produto                       Produto?                @relation(fields: [ProdutoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProducaoProduto")
  UnidadeNegocio                UnidadeNegocio?         @relation(fields: [UnidadeNegocioId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProducaoUnidadeNegocio")
  UnidadeOrganizacional         UnidadeOrganizacional?  @relation(fields: [UnidadeOrganizacionalId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProducaoUnidadeOrganizacional")
}

model Producao_Critica {
  Id                   Int                  @id(map: "PK_Producao_Critica") @default(autoincrement())
  Mensagem             String               @db.VarChar(100)
  Descricao            String               @db.VarChar(255)
  TipoCriticaId        Int
  Producao_TipoCritica Producao_TipoCritica @relation(fields: [TipoCriticaId], references: [Id], onUpdate: NoAction, map: "FK_Producao_Critica_Producao_TipoCritica")
}

model Producao_TipoCritica {
  Id               Int                @id(map: "PK_Producao_TipoCritica") @default(autoincrement())
  TipoCritica      String             @db.VarChar(50)
  Producao_Critica Producao_Critica[]
}

model ProducaoIndicador {
  Id                           Int          @id(map: "PK_ProducaoIndicador") @default(autoincrement())
  ProdutId                     Int?
  EmpresaId                    Int?
  UnidadeNegociId              Int?
  UnidadeOrganizacionalId      Int?
  CentroResponsabilidadeId     Int?
  BeneficiadId                 Int?
  QuantidadePrevista           Int?
  QuantidadeRevista            Int?
  QuantidadeRealizada          Int?
  TipoProducao                 Int?
  ConsideraFomento             Boolean?
  DataAtualizacao              DateTime?    @db.DateTime
  Responsavel                  String?      @db.NVarChar(200)
  NumeroControle               String?      @db.NVarChar(20)
  Ano                          Int?
  Mes                          String?      @db.VarChar(2)
  DataProcessamento            DateTime?    @db.DateTime
  DataProducao                 DateTime?    @db.DateTime
  Clientela                    String?      @db.VarChar(10)
  ClientelaId                  Int?
  UnidadesControleId           Int?
  Producao                     Int?
  TipoAtendimento              String?      @db.VarChar(200)
  PessoaId                     Int?
  CentroIntegracaId            Int?
  QuantidadePrevistaAcumulada  Int?
  QuantidadeRevistaAcumulada   Int?
  QuantidadeRealizadaAcumulada Int?
  Beneficiado                  Beneficiado? @relation(fields: [BeneficiadId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProducaoIndicadorBeneficiado")
}

model ProducaoMeta {
  Id                       Int                     @id(map: "PK_ProducaoMeta") @default(autoincrement())
  ProdutoId                Int?
  EmpresaId                Int?
  UnidadeOrganizacionalId  Int?
  CentroResponsabilidadeId Int?
  ValorPrevisto            Decimal?                @db.Decimal(16, 2)
  ValorRetificado          Decimal?                @db.Decimal(16, 2)
  ValorSuplementado        Decimal?                @db.Decimal(16, 2)
  ValorRevisto             Decimal?                @db.Decimal(16, 2)
  ValorReal                Decimal?                @db.Decimal(16, 2)
  Ano                      Int?
  Mes                      Int?
  CentroResponsabilidade   CentroResponsabilidade? @relation(fields: [CentroResponsabilidadeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProducaoMetaCentroResponsabilidade")
  Empresa                  Empresa?                @relation(fields: [EmpresaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProducaoMetaEmpresa")
  Produto                  Produto?                @relation(fields: [ProdutoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProducaoMetaProduto")
  UnidadeOrganizacional    UnidadeOrganizacional?  @relation(fields: [UnidadeOrganizacionalId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProducaoMetaUnidadeOrganizacional")
}

model Produto {
  Id                                                        Int                         @id(map: "PK_Produto") @default(autoincrement())
  Codigo                                                    String?                     @db.NVarChar(100)
  Nome                                                      String?                     @db.VarChar(500)
  ClasseProdutoId                                           Int?
  TipoProdutoId                                             Int?
  ProdutoEstrategicoId                                      Int?
  Superior                                                  Int?
  NivelHierarquia                                           Int?
  UnidadeMedidaId                                           Int?
  NumeroNivelHierarquia                                     Int?
  DescritivoProduto                                         String?                     @db.VarChar(3000)
  CargaHoraria                                              Int?
  Quantidade                                                Int?
  Analitico                                                 Int?
  Ativo                                                     Int?
  NaturezaProdutoId                                         Int?
  CodigoSMD                                                 String?                     @db.VarChar(10)
  CodigoMascara                                             String?                     @db.VarChar(20)
  CodigoFormulario                                          String?                     @db.VarChar(10)
  Normativo                                                 Int?
  Portfolio                                                 Int?
  Origem                                                    Int?
  Homologado                                                Int?
  MinimoVagas                                               Int?
  MaximoVagas                                               Int?
  Objetivo                                                  String?                     @db.VarChar(Max)
  ConteudoProgramatico                                      String?                     @db.VarChar(3000)
  PublicoAlvo                                               String?                     @db.VarChar(500)
  ResponsabilidadesContratante                              String?                     @db.VarChar(1000)
  Versao                                                    String?                     @db.VarChar(255)
  Conteudo                                                  String?                     @db.NVarChar(Max)
  Conhecimentos                                             String?                     @db.VarChar(3000)
  Responsabilidade                                          String?                     @db.VarChar(Max)
  CodigoAuxiliar                                            String?                     @db.VarChar(20)
  CodigoERP                                                 String?                     @db.VarChar(50)
  AreaProdutoId                                             Int?
  ModalidadeId                                              Int?
  ResultadosEsperados                                       String?                     @db.VarChar(3000)
  Justificativa                                             String?                     @db.VarChar(3000)
  Beneficios                                                String?                     @db.VarChar(3000)
  PreRequisitos                                             String?                     @db.VarChar(3000)
  IdCurso                                                   String?                     @db.VarChar(20)
  TipoDocumento                                             String?                     @db.VarChar(300)
  Ano                                                       Int?
  IdPlano                                                   Int?
  Composicao                                                Int?
  ContaContabilId                                           Int?
  CodigoPrefeitura                                          String?                     @db.NVarChar(10)
  AtividadeEconomicaId                                      Int?
  CodigoNivel1                                              String?                     @db.VarChar(20)
  CodigoNivel2                                              String?                     @db.VarChar(20)
  CodigoNivel3                                              String?                     @db.VarChar(20)
  CodigoNivel4                                              String?                     @db.VarChar(20)
  NomeNivel1                                                String?                     @db.VarChar(700)
  NomeNivel2                                                String?                     @db.VarChar(700)
  NomeNivel3                                                String?                     @db.VarChar(700)
  NomeNivel4                                                String?                     @db.VarChar(255)
  Valor                                                     Decimal?                    @db.Decimal(16, 2)
  DataCriacao                                               DateTime?                   @db.Date
  DataAtualizacao                                           DateTime?                   @db.Date
  AgendaServico                                             AgendaServico[]
  AgendaSSI                                                 AgendaSSI[]
  ConsumoProduto_ConsumoProduto_MaterialIdToProduto         ConsumoProduto[]            @relation("ConsumoProduto_MaterialIdToProduto")
  ConsumoProduto_ConsumoProduto_ProdutoIdToProduto          ConsumoProduto[]            @relation("ConsumoProduto_ProdutoIdToProduto")
  CRM_Etapas_STI                                            CRM_Etapas_STI[]
  PlanejamentoProducao                                      PlanejamentoProducao[]
  Producao                                                  Producao[]
  ProducaoMeta                                              ProducaoMeta[]
  ClasseProduto                                             ClasseProduto?              @relation(fields: [ClasseProdutoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Produto_ClasseProduto")
  ContaContabil                                             ContaContabil?              @relation(fields: [ContaContabilId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Produto_ContaContabil")
  NaturezaProduto                                           NaturezaProduto?            @relation(fields: [NaturezaProdutoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Produto_NaturezaProduto")
  ProdutoEstrategico                                        ProdutoEstrategico?         @relation(fields: [ProdutoEstrategicoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Produto_ProdutoEstrategico")
  Produto                                                   Produto?                    @relation("ProdutoToProduto", fields: [Superior], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Produto_Superior")
  other_Produto                                             Produto[]                   @relation("ProdutoToProduto")
  TipoProduto                                               TipoProduto?                @relation(fields: [TipoProdutoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Produto_TipoProduto")
  UnidadeMedida                                             UnidadeMedida?              @relation(fields: [UnidadeMedidaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Produto_UnidadeMedida")
  ProdutoCentroAno_ProdutoCentroAno_ProdutoIdToProduto      ProdutoCentroAno[]          @relation("ProdutoCentroAno_ProdutoIdToProduto")
  ProdutoCentroAno_ProdutoCentroAno_ProdutoSmdIdToProduto   ProdutoCentroAno[]          @relation("ProdutoCentroAno_ProdutoSmdIdToProduto")
  ProdutoComposicao_ProdutoComposicao_ComposicaoIdToProduto ProdutoComposicao[]         @relation("ProdutoComposicao_ComposicaoIdToProduto")
  ProdutoComposicao_ProdutoComposicao_ProdutoIdToProduto    ProdutoComposicao[]         @relation("ProdutoComposicao_ProdutoIdToProduto")
  ProdutoContaContabilAno                                   ProdutoContaContabilAno[]
  ProdutoEtapa                                              ProdutoEtapa[]
  ProdutoUnidade                                            ProdutoUnidade[]
  ProdutoUnidadeControle                                    ProdutoUnidadeControle[]
  PropostaItem                                              PropostaItem[]
  PropostaItemExecucao                                      PropostaItemExecucao[]
  RecursoProduto                                            RecursoProduto[]
  STI_CronogramaConsultoria                                 STI_CronogramaConsultoria[]
  UnidadeControle                                           UnidadeControle[]
  UnidadeControleProduto                                    UnidadeControleProduto[]
}

model ProdutoCentroAno {
  Id                                             Int                     @id(map: "PK_ProdutoCentroAno") @default(autoincrement())
  Ano                                            Int?
  ProdutoId                                      Int?
  CentroResponsabilidadeId                       Int?
  ProdutoSmdId                                   Int?
  CentroResponsabilidade                         CentroResponsabilidade? @relation(fields: [CentroResponsabilidadeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProdutoCentroAno_CentroResponsabilidade")
  Produto_ProdutoCentroAno_ProdutoIdToProduto    Produto?                @relation("ProdutoCentroAno_ProdutoIdToProduto", fields: [ProdutoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProdutoCentroAno_Produto")
  Produto_ProdutoCentroAno_ProdutoSmdIdToProduto Produto?                @relation("ProdutoCentroAno_ProdutoSmdIdToProduto", fields: [ProdutoSmdId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProdutoCentroAno_ProdutoSmd")
}

model ProdutoComposicao {
  Id                                              Int      @id(map: "PK_ProdutoComposicao") @default(autoincrement())
  ProdutoId                                       Int?
  ComposicaoId                                    Int?
  Quantidade                                      Int?
  ValorUnitario                                   Decimal? @db.Decimal(16, 2)
  ValorTotal                                      Decimal? @db.Decimal(16, 2)
  Produto_ProdutoComposicao_ComposicaoIdToProduto Produto? @relation("ProdutoComposicao_ComposicaoIdToProduto", fields: [ComposicaoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProdutoComposicao_Composicao")
  Produto_ProdutoComposicao_ProdutoIdToProduto    Produto? @relation("ProdutoComposicao_ProdutoIdToProduto", fields: [ProdutoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProdutoComposicao_Produto")
}

model ProdutoContaContabilAno {
  Id                Int                @id(map: "PK_ProdutoContaContabilAno") @default(autoincrement())
  ProdutoId         Int?
  ContaContabilId   Int?
  Ano               Int?
  ContaOrcamentaria ContaOrcamentaria? @relation(fields: [ContaContabilId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProdutoContaContabil")
  Produto           Produto?           @relation(fields: [ProdutoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProdutoContaContabilProduto")
}

model ProdutoEstrategico {
  Id        Int       @id(map: "PK_ProdutoEstrategico") @default(autoincrement())
  Codigo    String?   @db.NVarChar(100)
  Nome      String?   @db.NVarChar(3000)
  Descricao String?
  Produto   Produto[]
}

model ProdutoEtapa {
  Id                  Int      @id(map: "PK_ProdutoEtapa") @default(autoincrement())
  ProdutoId           Int?
  Ordem               Int?
  CargaHoraria        Int?
  NomeEtapa           String?  @db.VarChar(100)
  IndicadoresEntregas String?  @db.VarChar(500)
  Produto             Produto? @relation(fields: [ProdutoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProdutoEtapa_Produto")
}

model ProdutoMeta {
  Id          Int       @id(map: "PK_ProdutoMeta") @default(autoincrement())
  Meta        String?   @db.NVarChar(2000)
  MarcoId     Int?
  Responsavel String?   @db.NVarChar(250)
  ProjetoId   Int?
  Prazo       DateTime? @db.DateTime
  Ativo       Boolean?
  Indicador   String?   @db.NVarChar(2000)
  ValorMeta   Decimal?  @db.Decimal(14, 2)
  ValorReal   Decimal?  @db.Decimal(14, 2)
  Marco       Marco?    @relation(fields: [MarcoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProdutoMeta_Marco")
  Projeto     Projeto?  @relation(fields: [ProjetoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProdutoMeta_Projeto")
}

model ProdutoUnidade {
  Id                       Int                     @id(map: "PK_ProdutoUnidade") @default(autoincrement())
  ProdutoId                Int?
  UnidadeOrganizacionalId  Int?
  CentroResponsabilidadeId Int?
  Ano                      Int?
  CentroResponsabilidade   CentroResponsabilidade? @relation(fields: [CentroResponsabilidadeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProdutoUnidadeCentroResponsabilidade")
  Produto                  Produto?                @relation(fields: [ProdutoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProdutoUnidadeProduto")
  UnidadeOrganizacional    UnidadeOrganizacional?  @relation(fields: [UnidadeOrganizacionalId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProdutoUnidadeUnidadeOrganizacional")
}

model ProdutoUnidadeControle {
  Id                     Int              @id(map: "PK_ProdutoUnidadeControle") @default(autoincrement())
  Nome                   String?          @db.NVarChar(3000)
  ProdutoId              Int?
  UnidadeControleId      Int?
  UnidadeMedidaId        Int?
  Atendimento            String?          @db.NVarChar(500)
  IndicadorId            Int?
  Modalidade             String?          @db.NVarChar(500)
  InstrucaoPreenchimento String?
  Atibutos               String?          @db.NVarChar(500)
  Ativo                  Boolean?
  ProdutoSMDId           Int?
  Indicador              Indicador?       @relation(fields: [IndicadorId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProdutoUnidadeControle_Indicador")
  Produto                Produto?         @relation(fields: [ProdutoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProdutoUnidadeControle_Produto")
  UnidadeControle        UnidadeControle? @relation(fields: [UnidadeControleId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProdutoUnidadeControle_UnidadeControle")
  UnidadeMedida          UnidadeMedida?   @relation(fields: [UnidadeMedidaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProdutoUnidadeControle_UnidadeMedida")
}

model Projeto {
  Id                                             Int                      @id(map: "PK_Projeto") @default(autoincrement())
  Codigo                                         String?                  @db.NVarChar(100)
  Nome                                           String?                  @db.NVarChar(200)
  EmpresaId                                      Int?
  PortfolioId                                    Int?
  AreaId                                         Int?
  ObjetivoId                                     Int?
  LinhaFomentoId                                 Int?
  CategoriaProjetoId                             Int?
  DataInicial                                    DateTime?                @db.DateTime
  DataFinal                                      DateTime?                @db.DateTime
  Descricao                                      String?                  @db.VarChar(3000)
  ResponsavelId                                  Int?
  PercentualProjeto                              Float?                   @db.Money
  PercentualOrcamento                            Float?                   @db.Money
  PercentualCronograma                           Float?                   @db.Money
  Prioridade                                     Int?
  DataInicialRealizada                           DateTime?                @db.DateTime
  DataFinalRealizada                             DateTime?                @db.DateTime
  Processo                                       Int?
  CodigoExterno                                  String?                  @db.NVarChar(10)
  Situacao                                       Int?
  Status                                         Int?
  ValorDN                                        Float?                   @db.Money
  ValorDR                                        Float?                   @db.Money
  ValorParceiro                                  Float?                   @db.Money
  SaldoCaixa                                     Float?                   @db.Money
  SaldoFinanceiro                                Float?                   @db.Money
  ValorDespesaDN                                 Float?                   @db.Money
  ValorDespesaDR                                 Float?                   @db.Money
  ValorReceitaDN                                 Float?                   @db.Money
  ValorReceitaDR                                 Float?                   @db.Money
  ValorPrestacaoContas                           Float?                   @db.Money
  ValorDespesaContabilizada                      Float?                   @db.Money
  ValorDespesaTotal                              Float?                   @db.Money
  ValorReceitaTotal                              Float?                   @db.Money
  ValorSubvencao                                 Float?                   @db.Money
  ValorHoraTecnica                               Float?                   @db.Money
  ValorAjustado                                  Float?                   @db.Money
  ValorTotal                                     Float?                   @db.Money
  SaldoProjeto                                   Decimal?                 @db.Decimal(16, 2)
  ValorTotalRA                                   Decimal?                 @db.Decimal(16, 2)
  IdeiaId                                        Int?
  EmpresaReferenciaId                            Int?
  EmpresaParceiraId                              Int?
  GerenteProjetoEmpresaId                        Int?
  GerenteProjetoId                               Int?
  Justificativa                                  String?                  @db.VarChar(5000)
  ObjetivoGeral                                  String?                  @db.VarChar(5000)
  Escopo                                         String?                  @db.VarChar(5000)
  NaoEscopo                                      String?                  @db.VarChar(5000)
  AjusteFinanceiro                               AjusteFinanceiro[]
  Despesa                                        Despesa[]
  DespesaFinanceira                              DespesaFinanceira[]
  Iniciativa                                     Iniciativa[]
  Marco                                          Marco[]
  PlanoAcaoEquipe                                PlanoAcaoEquipe[]
  PlanoAcaoItem                                  PlanoAcaoItem[]
  PlanoAcaoStatus                                PlanoAcaoStatus[]
  PlanoAquisicao                                 PlanoAquisicao[]
  PrestacaoContas                                PrestacaoContas[]
  PrestacaoContasRepasse                         PrestacaoContasRepasse[]
  ProdutoMeta                                    ProdutoMeta[]
  Areas                                          Areas?                   @relation(fields: [AreaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Projeto_Area")
  CategoriaProjeto                               CategoriaProjeto?        @relation(fields: [CategoriaProjetoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Projeto_CategoriaProjeto")
  Empresa                                        Empresa?                 @relation(fields: [EmpresaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Projeto_Empresa")
  Recurso_Projeto_EmpresaParceiraIdToRecurso     Recurso?                 @relation("Projeto_EmpresaParceiraIdToRecurso", fields: [EmpresaParceiraId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Projeto_EmpresaParceira")
  Recurso_Projeto_EmpresaReferenciaIdToRecurso   Recurso?                 @relation("Projeto_EmpresaReferenciaIdToRecurso", fields: [EmpresaReferenciaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Projeto_EmpresaReferencia")
  Pessoa_Projeto_GerenteProjetoIdToPessoa        Pessoa?                  @relation("Projeto_GerenteProjetoIdToPessoa", fields: [GerenteProjetoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Projeto_GerenteProjeto")
  Pessoa_Projeto_GerenteProjetoEmpresaIdToPessoa Pessoa?                  @relation("Projeto_GerenteProjetoEmpresaIdToPessoa", fields: [GerenteProjetoEmpresaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Projeto_GerenteProjetoEmpresa")
  LinhaFomento                                   LinhaFomento?            @relation(fields: [LinhaFomentoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Projeto_LinhaFomento")
  Objetivo                                       Objetivo?                @relation(fields: [ObjetivoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Projeto_Objetivo")
  Portfolio                                      Portfolio?               @relation(fields: [PortfolioId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Projeto_Portfolio")
  Recurso_1                                      Recurso_1?               @relation(fields: [ResponsavelId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Projeto_Responsavel")
  ProjetoAbrangencia                             ProjetoAbrangencia[]
  ProjetoAtividade                               ProjetoAtividade[]
  ProjetoCentro                                  ProjetoCentro[]
  ProjetoEquipe                                  ProjetoEquipe[]
  ProjetoIndicador                               ProjetoIndicador[]
  ProjetoProduto                                 ProjetoProduto[]
  ProjetoRubrica                                 ProjetoRubrica[]
  ProjetoRubricaConta                            ProjetoRubricaConta[]
  Receita                                        Receita[]
  ReceitaFinanceira                              ReceitaFinanceira[]
  ResponsavelProjeto                             ResponsavelProjeto[]
  UnidadeAvaliacao                               UnidadeAvaliacao[]
  ValorIndicador                                 ValorIndicador[]
}

model ProjetoAbrangencia {
  Id               Int      @id(map: "PK_ProjetoAbrangencia") @default(autoincrement())
  ProjetoId        Int?
  EmpresaId        Int?
  PessoaId         Int?
  UnidadeExecutora Int?
  Principal        Int?
  Ativo            Int?
  Empresa          Empresa? @relation(fields: [EmpresaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProjetoAbrangencia_Empresa")
  Pessoa           Pessoa?  @relation(fields: [PessoaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProjetoAbrangencia_Pessoa")
  Projeto          Projeto? @relation(fields: [ProjetoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProjetoAbrangencia_Projeto")
}

model ProjetoAtividade {
  Id                          Int                     @id(map: "PK_ProjetoAtividade") @default(autoincrement())
  ProjetoId                   Int?
  SuperiorId                  Int?
  Codigo                      String?                 @db.VarChar(50)
  Nome                        String?                 @db.VarChar(1000)
  Descritivo                  String?                 @db.VarChar(5000)
  DataPrevistaInicio          DateTime?
  DataPrevistaTermino         DateTime?
  DataRealInicio              DateTime?
  DataRealTermino             DateTime?
  UnidadeOrganizacionalId     Int?
  CentroResponsabilidadeId    Int?
  ResponsavelId               Int?
  QuantidadeHoras             Decimal?                @db.Decimal(16, 2)
  QuantidadePrevistaDias      Int?
  QuantidadeRealDias          Int?
  PercentualConclusaoPrevisto Decimal?                @db.Decimal(16, 2)
  PercentualConclusaoReal     Decimal?                @db.Decimal(16, 2)
  Origem                      Int?
  Situacao                    Int?
  Ativo                       Int?
  CentroResponsabilidade      CentroResponsabilidade? @relation(fields: [CentroResponsabilidadeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProjetoAtividade_CentroResponsabilidade")
  Projeto                     Projeto?                @relation(fields: [ProjetoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProjetoAtividade_Projeto")
  Recurso                     Recurso?                @relation(fields: [ResponsavelId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProjetoAtividade_Responsavel")
  ProjetoAtividade            ProjetoAtividade?       @relation("ProjetoAtividadeToProjetoAtividade", fields: [SuperiorId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProjetoAtividade_Superior")
  other_ProjetoAtividade      ProjetoAtividade[]      @relation("ProjetoAtividadeToProjetoAtividade")
  UnidadeOrganizacional       UnidadeOrganizacional?  @relation(fields: [UnidadeOrganizacionalId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProjetoAtividade_UnidadeOrganizacional")
}

model ProjetoCentro {
  Id                       Int                     @id(map: "PK_ProjetoCentro") @default(autoincrement())
  Ano                      Int?
  ProjetoId                Int?
  UnidadeOrganizacionalId  Int?
  CentroResponsabilidadeId Int?
  CentroResponsabilidade   CentroResponsabilidade? @relation(fields: [CentroResponsabilidadeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProjetoCentro_CentroResponsabilidade")
  Projeto                  Projeto?                @relation(fields: [ProjetoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProjetoCentro_Projeto")
  UnidadeOrganizacional    UnidadeOrganizacional?  @relation(fields: [UnidadeOrganizacionalId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProjetoCentro_UnidadeOrganizacional")
}

model ProjetoEquipe {
  Id                        Int                      @id(map: "PK_ProjetoEquipe") @default(autoincrement())
  ProjetoId                 Int?
  ValorHora                 Decimal?                 @db.Decimal(16, 2)
  Origem                    Int?
  OrigemRecursoFinanceiroId Int?
  FontePagadoraId           Int?
  Percentual                Decimal?                 @db.Decimal(16, 2)
  Ativo                     Int?
  RecursoId                 Int?
  Area                      String?                  @db.VarChar(100)
  FuncaoCargo               String?                  @db.VarChar(100)
  Instituicao               String?                  @db.VarChar(100)
  FontePagadora             FontePagadora?           @relation(fields: [FontePagadoraId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProjetoEquipe_FontePagadora")
  OrigemRecursoFinanceiro   OrigemRecursoFinanceiro? @relation(fields: [OrigemRecursoFinanceiroId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProjetoEquipe_OrigemRecursoFinanceiro")
  Projeto                   Projeto?                 @relation(fields: [ProjetoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProjetoEquipe_Projeto")
  Recurso                   Recurso?                 @relation(fields: [RecursoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProjetoEquipe_Recurso")
}

model ProjetoIndicador {
  Id        Int      @id(map: "PK_ProjetoIndicador") @default(autoincrement())
  ProjetoId Int?
  Objetivo  String?  @db.VarChar(3000)
  Indicador String?  @db.NVarChar(500)
  Meta      String?  @db.NVarChar(500)
  Ativo     Int?
  Projeto   Projeto? @relation(fields: [ProjetoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProjetoIndicador_Projeto")
}

model ProjetoProduto {
  Id         Int      @id(map: "PK_ProjetoProduto") @default(autoincrement())
  ProjetoId  Int?
  Descritivo String?  @db.VarChar(1000)
  Ativo      Int?
  Projeto    Projeto? @relation(fields: [ProjetoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProjetoProduto_Projeto")
}

model ProjetoRubrica {
  Id            Int      @id(map: "PK_ProjetoRubrica") @default(autoincrement())
  ProjetoId     Int?
  RubricaId     Int?
  ValorReal     Decimal? @db.Decimal(16, 2)
  ValorPrevisto Decimal? @db.Decimal(16, 2)
  Percentual    Decimal? @db.Decimal(16, 2)
  Projeto       Projeto? @relation(fields: [ProjetoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProjetoRubrica_Projeto")
  Rubrica       Rubrica? @relation(fields: [RubricaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProjetoRubrica_Rubrica")
}

model ProjetoRubricaConta {
  Id                  Int                @id(map: "PK_ProjetoRubricaConta") @default(autoincrement())
  ProjetoId           Int?
  RubricaId           Int?
  ContaOrcamentariaId Int?
  Ano                 Int?
  Valor               Decimal?           @db.Decimal(16, 2)
  ContaOrcamentaria   ContaOrcamentaria? @relation(fields: [ContaOrcamentariaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProjetoRubricaConta_ContaOrcamentaria")
  Projeto             Projeto?           @relation(fields: [ProjetoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProjetoRubricaConta_Projeto")
  Rubrica             Rubrica?           @relation(fields: [RubricaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProjetoRubricaConta_Rubrica")
}

model Proposta {
  Id                          Int                     @id(map: "PK_Proposta") @default(autoincrement())
  NumeroProposta              String?                 @db.VarChar(50)
  VersaoProposta              String?                 @db.VarChar(50)
  NomeProposta                String?                 @db.VarChar(500)
  StatusProposta              String?                 @db.VarChar(500)
  Instancia                   Int?
  Fluxo                       Int?
  DespesasOperacionais        Decimal?                @db.Decimal(16, 2)
  valorTotalSemDesconto       Decimal?                @db.Decimal(16, 2)
  valorTotalComDesconto       Decimal?                @db.Decimal(16, 2)
  ValorTotalProposta          Decimal?                @db.Decimal(16, 2)
  CodigoUnidadeOrganizacional String?                 @db.VarChar(10)
  UnidadeOrganizacionalId     Int?
  Requisitante                String?                 @db.VarChar(200)
  Data                        DateTime?               @db.Date
  PessoaId                    Int?
  ValidadeProposta            DateTime?               @db.DateTime
  CondicoesPagamento          String?                 @db.VarChar(500)
  MotivoCancelamentoProposta  String?                 @db.VarChar(500)
  DataEmissao                 DateTime?               @db.DateTime
  VisitaReconhecimento        String?                 @db.VarChar(3)
  BaseNacional                String?                 @db.VarChar(10)
  LinkProposta                String?                 @db.VarChar(1000)
  EmpresaId                   Int?
  DataCriacao                 DateTime?               @db.DateTime
  ContratoBaseNacional        String?                 @db.VarChar(3)
  PapelRegional               String?                 @db.VarChar(100)
  RegionalCoordenadorTecnico  String?                 @db.VarChar(500)
  DetalhesPagamento           String?                 @db.VarChar(1000)
  FormaPagamento              String?                 @db.VarChar(100)
  Parcelamento                String?                 @db.VarChar(50)
  CnpjPagadorServico          String?                 @db.VarChar(14)
  DataVencimento              DateTime?               @db.DateTime
  Observacao                  String?                 @db.VarChar(5000)
  IdPropostaCrm               String?                 @db.VarChar(50)
  IdOportunidade              String?                 @db.VarChar(50)
  IdPessoaCrm                 String?                 @db.VarChar(50)
  ValorParcela                Decimal?                @db.Decimal(16, 2)
  CentroResponsabilidadeId    Int?
  Tipo                        String?                 @db.VarChar(100)
  DiaVencimento               Int?
  ContatoId                   Int?
  UnidadeExecutora            String?                 @db.VarChar(500)
  RequisitanteEmail           String?                 @db.VarChar(100)
  RequisitanteTelefone        String?                 @db.VarChar(50)
  CentroResponsabilidade      CentroResponsabilidade? @relation(fields: [CentroResponsabilidadeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Proposta_CentroResponsabilidade")
  Empresa                     Empresa?                @relation(fields: [EmpresaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Proposta_Empresa")
  Pessoa                      Pessoa?                 @relation(fields: [PessoaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Proposta_Pessoa")
  UnidadeOrganizacional       UnidadeOrganizacional?  @relation(fields: [UnidadeOrganizacionalId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Proposta_UnidadeOrganizacional")
  PropostaItem                PropostaItem[]
}

model PropostaItem {
  Id                             Int                     @id(map: "PK_PropostaItem") @default(autoincrement())
  NumeroProposta                 String?                 @db.VarChar(50)
  Instancia                      Int?
  Fluxo                          Int?
  Servico                        String?                 @db.VarChar(500)
  ProdutoId                      Int?
  GrupoProduto                   String?                 @db.VarChar(500)
  Quantidade                     Decimal?                @db.Decimal(10, 2)
  valorUnitario                  Decimal?                @db.Decimal(16, 2)
  valorDesconto                  Decimal?                @db.Decimal(16, 2)
  ValorServico                   Decimal?                @db.Decimal(16, 2)
  CodigoUnidadeOrganizacional    String?                 @db.VarChar(50)
  UnidadeOrganizacionalId        Int?
  CodigoCentroResponsabilidade   String?                 @db.VarChar(50)
  CodigoCentroResponsabilidadeId Int?
  ServicoCustomizado             String?                 @db.VarChar(3)
  NomeServicoCustomizado         String?                 @db.VarChar(1000)
  DescricaoServico               String?                 @db.VarChar(5000)
  CargaHoraria                   String?                 @db.VarChar(50)
  NumeroParticipantes            String?                 @db.VarChar(4)
  HorarioExecucaoServico         String?                 @db.VarChar(50)
  Periodicidade                  String?                 @db.VarChar(100)
  CnpjUnidadeExecutora           String?                 @db.VarChar(20)
  CnpjServicoExecutado           String?                 @db.VarChar(20)
  EnderecoExecucaoServico        String?                 @db.VarChar(500)
  EnderecoUnidadeExecutora       String?                 @db.VarChar(500)
  CnpjUnidadeOperacional         String?                 @db.VarChar(20)
  CodigoUnidadeOperacional       String?                 @db.VarChar(500)
  CodigoServico                  String?                 @db.VarChar(50)
  DadosLocalServicoExecutado     String?                 @db.VarChar(500)
  CentroResponsabilidadeId       Int?
  PropostaId                     Int?
  UnidadeNegocioId               Int?
  PessoaId                       Int?
  UnidadeExecutora               String?                 @db.VarChar(500)
  CentroResponsabilidade         CentroResponsabilidade? @relation(fields: [CentroResponsabilidadeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PropostaItem_CentroResponsabilidade")
  Produto                        Produto?                @relation(fields: [ProdutoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PropostaItem_Produto")
  Proposta                       Proposta?               @relation(fields: [PropostaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PropostaItem_Proposta")
  UnidadeOrganizacional          UnidadeOrganizacional?  @relation(fields: [UnidadeOrganizacionalId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PropostaItem_UnidadeOrganizacional")
  PropostaItemExecucao           PropostaItemExecucao[]
}

model PropostaItemExecucao {
  Id              Int            @id(map: "PK_PropostaItemExecucao") @default(autoincrement())
  PropostaItemId  Int?
  ProdutoId       Int?
  Quantidade      Int?
  RecursoId       Int?
  DataInicio      DateTime?      @db.DateTime
  DataFim         DateTime?      @db.DateTime
  AgendaServicoId Int?
  StatusExecucao  String?        @db.VarChar(100)
  Instancia       Int?
  AgendaSSIId     Int?
  AgendaSSI       AgendaSSI?     @relation(fields: [AgendaSSIId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_AgendaSSI_PropostaItemExecucao")
  AgendaServico   AgendaServico? @relation(fields: [AgendaServicoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PropostaItemExecucao_AgendaServico")
  Produto         Produto?       @relation(fields: [ProdutoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PropostaItemExecucao_Produto")
  PropostaItem    PropostaItem?  @relation(fields: [PropostaItemId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PropostaItemExecucao_PropostaItem")
  Recurso         Recurso?       @relation(fields: [RecursoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PropostaItemExecucao_Recurso")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model PROV_RECEITASSI {
  ID                  Int       @default(autoincrement())
  ENTIDADE            String?   @db.VarChar(255)
  UNIDADE             String?   @db.VarChar(255)
  CENTRO              String?   @db.VarChar(255)
  CONTA               String?   @db.VarChar(255)
  DEBITOCREDITO       String?   @db.VarChar(255)
  VALOR               Decimal?  @db.Decimal(16, 2)
  DATA                DateTime? @db.DateTime
  FIXO                String?   @db.VarChar(255)
  MOVIMENTOIMPORTACAO String?   @db.VarChar(255)
  NUMERODOCUMENTO     String?   @db.VarChar(255)
  HISTORICO           String?   @db.VarChar(Max)

  @@ignore
}

model RateioCentro {
  Id                       Int                     @id(map: "PK_RateioCentro") @default(autoincrement())
  AgrupadorCentroId        Int?
  CentroResponsabilidadeId Int?
  Ano                      Int?
  Percentual               Float?                  @db.Money
  EmpresaId                Int?
  Tipo                     Int?
  CriterioRateioId         Int?
  AgrupadorCentro          AgrupadorCentro?        @relation(fields: [AgrupadorCentroId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_RateioCentro_AgrupadorCentro")
  CentroResponsabilidade   CentroResponsabilidade? @relation(fields: [CentroResponsabilidadeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_RateioCentro_CentroResponsabilidade")
  Empresa                  Empresa?                @relation(fields: [EmpresaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_RateioCentro_Empresa")
  CriterioRateio           CriterioRateio?         @relation(fields: [CriterioRateioId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_RateioCentroCriterioRateio")
}

model RateioMaoDeObra {
  Id                         Int                       @id(map: "PK_RateioMaoDeObra") @default(autoincrement())
  UnidadeOrganizacionalId    Int?
  CentroResponsabilidadeId   Int?
  PlanejamentoOrcamentarioId Int?
  RecursoId                  Int?
  Valor1                     Float?                    @db.Money
  Valor2                     Float?                    @db.Money
  Valor3                     Float?                    @db.Money
  Valor4                     Float?                    @db.Money
  Valor5                     Float?                    @db.Money
  Valor6                     Float?                    @db.Money
  Valor7                     Float?                    @db.Money
  Valor8                     Float?                    @db.Money
  Valor9                     Float?                    @db.Money
  Valor10                    Float?                    @db.Money
  Valor11                    Float?                    @db.Money
  Valor12                    Float?                    @db.Money
  CentroResponsabilidade     CentroResponsabilidade?   @relation(fields: [CentroResponsabilidadeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_RateioMaoDeObra_CentroResponsabilidade")
  PlanejamentoOrcamentario   PlanejamentoOrcamentario? @relation(fields: [PlanejamentoOrcamentarioId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_RateioMaoDeObra_PlanejamentoOrcamentario")
  Recurso                    Recurso?                  @relation(fields: [RecursoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_RateioMaoDeObra_Recurso")
  UnidadeOrganizacional      UnidadeOrganizacional?    @relation(fields: [UnidadeOrganizacionalId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_RateioMaoDeObra_UnidadeOrganizacional")
}

model RateioUnidade {
  Id                      Int                    @id(map: "PK_RateioUnidade") @default(autoincrement())
  AgrupadorUnidadeId      Int?
  UnidadeOrganizacionalId Int?
  Ano                     Int?
  Percentual              Float?                 @db.Money
  EmpresaId               Int?
  Tipo                    Int?
  CriterioRateioId        Int?
  AgrupadorUnidade        AgrupadorUnidade?      @relation(fields: [AgrupadorUnidadeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_RateioUnidade_AgrupadorUnidade")
  Empresa                 Empresa?               @relation(fields: [EmpresaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_RateioUnidade_Empresa")
  UnidadeOrganizacional   UnidadeOrganizacional? @relation(fields: [UnidadeOrganizacionalId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_RateioUnidade_UnidadeOrganizacional")
  CriterioRateio          CriterioRateio?        @relation(fields: [CriterioRateioId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_RateioUnidadeCriterioRateio")
}

model Receita {
  Id                   Int      @id(map: "PK_Receita") @default(autoincrement())
  ProjetoId            Int?
  Ano                  Int?
  Previsto             Float?   @db.Money
  Revisto              Float?   @db.Money
  Realizado            Float?   @db.Money
  Reservado            Float?   @db.Money
  EmAberto             Float?   @db.Money
  Autorizado           Float?   @db.Money
  EmPagamento          Float?   @db.Money
  Quitado              Float?   @db.Money
  Contabilizado        Float?   @db.Money
  ValorAjustado        Float?   @db.Money
  SaldoProjeto         Float?   @db.Money
  ValorPrestacaoContas Float?   @db.Money
  SaldoInicial         Float?   @db.Money
  ValorTotal           Decimal? @db.Decimal(16, 2)
  ReceitaTotalPrevista Decimal? @db.Decimal(16, 2)
  ValorSubvencao       Decimal? @db.Decimal(16, 2)
  ValorHoraTecnica     Decimal? @db.Decimal(16, 2)
  EmpresaId            Int?
  ValorReceitaDN       Decimal? @db.Decimal(16, 2)
  ValorReceitaDR       Decimal? @db.Decimal(16, 2)
  Projeto              Projeto? @relation(fields: [ProjetoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Receita_Projeto")
}

model ReceitaFinanceira {
  Id                      Int       @id(map: "PK_ReceitaFinanceira") @default(autoincrement())
  IntegraKey              String?   @db.NVarChar(100)
  EmpresaId               Int?
  ProjetoId               Int?
  Ano                     Int?
  TipoEntidade            String?   @db.NVarChar(100)
  Entidade                String?   @db.NVarChar(100)
  Historico               String?   @db.NVarChar(2000)
  Valor                   Float?    @db.Money
  Situacao                String?   @db.NVarChar(100)
  TipoObrigacao           String?   @db.NVarChar(20)
  NumeroObrigacao         String?   @db.NVarChar(20)
  NumeroDocumentoOriginal String?   @db.NVarChar(20)
  DataReferencia          DateTime? @db.DateTime
  NomeEntidade            String?   @db.NVarChar(200)
  CnpjEntidade            String?   @db.NVarChar(20)
  ContaOrcamentaria       String?   @db.VarChar(16)
  NomeContaOrcamentaria   String?   @db.VarChar(255)
  ContaContabil           String?   @db.VarChar(16)
  NomeContaContabil       String?   @db.VarChar(255)
  Empresa                 Empresa?  @relation(fields: [EmpresaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ReceitaFinanceira_Empresa")
  Projeto                 Projeto?  @relation(fields: [ProjetoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ReceitaFinanceira_Projeto")
}

model ReceitaProducao {
  Id                 Int       @id(map: "PK_ReceitaProducao") @default(autoincrement())
  Instancia          Int?
  PropostaId         Int?
  CNPJ               String?   @db.NVarChar(20)
  ServicoId          Int?
  ServicoTexto       String?   @db.VarChar(3000)
  ValorServico       Float?
  ValorProposta      Float?
  Status             String?   @db.VarChar(3000)
  CodigoUnidade      String?   @db.NVarChar(10)
  CodigoCentro       String?   @db.NVarChar(20)
  DataRealizacao     DateTime? @db.DateTime
  Negocio            String?   @db.VarChar(50)
  ContaId            Int?
  ContaNome          String?   @db.VarChar(50)
  ContaCod           String?   @db.NVarChar(20)
  Versao             Int?
  DataCorrigida      DateTime? @db.DateTime
  Linha              Int?
  Contrato           String?   @db.VarChar(2)
  UnidadesMoveis     String?   @db.VarChar(2)
  CondicoesPagamento String?   @db.VarChar(200)
  ServicoPontual     String?   @db.NChar(10)
}

model ReceitaProducao_Matheus {
  Id                 Int       @id(map: "PK_ReceitaProducao_Matheus") @default(autoincrement())
  Instancia          Int?
  PropostaId         Int?
  CNPJ               String?   @db.NVarChar(20)
  ServicoId          Int?
  ServicoTexto       String?   @db.VarChar(3000)
  ValorServico       Float?
  ValorProposta      Float?
  Status             String?   @db.VarChar(3000)
  CodigoUnidade      String?   @db.NVarChar(10)
  CodigoCentro       String?   @db.NVarChar(20)
  DataRealizacao     DateTime? @db.DateTime
  Negocio            String?   @db.VarChar(50)
  ContaId            Int?
  ContaNome          String?   @db.VarChar(50)
  ContaCod           String?   @db.NVarChar(20)
  Versao             Int?
  DataCorrigida      DateTime? @db.DateTime
  Linha              Int?
  Contrato           String?   @db.VarChar(2)
  UnidadesMoveis     String?   @db.VarChar(2)
  CondicoesPagamento String?   @db.VarChar(200)
  ServicoPontual     String?   @db.NChar(10)
}

model ReceitaProducao_STI {
  Id                 Int       @id(map: "PK_ReceitaSti") @default(autoincrement())
  Instancia          Int?
  PropostaId         Int?
  CNPJ               String?   @db.NVarChar(20)
  ServicoId          Int?
  ServicoTexto       String?   @db.VarChar(3000)
  ValorServico       Float?
  ValorProposta      Float?
  Status             String?   @db.VarChar(3000)
  CodigoUnidade      String?   @db.NVarChar(10)
  CodigoCentro       String?   @db.NVarChar(20)
  DataRealizacao     DateTime? @db.DateTime
  Negocio            String?   @db.VarChar(50)
  ContaId            Int?
  ContaNome          String?   @db.VarChar(50)
  ContaCod           String?   @db.NVarChar(20)
  Versao             Int?
  DataCorrigida      DateTime? @db.DateTime
  Linha              Int?
  CondicoesPagamento String?   @db.VarChar(200)
}

model Recurso {
  Id                                                                                  Int                             @id(map: "PK_Recurso2") @default(autoincrement())
  Codigo                                                                              String?                         @db.NVarChar(20)
  Nome                                                                                String?                         @db.NVarChar(500)
  CodigoFolha                                                                         String?                         @db.NVarChar(50)
  CodigoOrquestra                                                                     Int?
  FuncaoId                                                                            Int?
  CargoId                                                                             Int?
  NivelId                                                                             Int?
  TipoRecurso                                                                         Int?
  EmpresaId                                                                           Int?
  TipoSalario                                                                         Int?
  UnidadeNegocioId                                                                    Int?
  AreaId                                                                              Int?
  SetorId                                                                             Int?
  NumeroSerie                                                                         String?                         @db.VarChar(60)
  NumeroPatrimonio                                                                    String?                         @db.VarChar(60)
  Modelo                                                                              String?                         @db.VarChar(60)
  Marca                                                                               String?                         @db.VarChar(60)
  Localizacao                                                                         String?                         @db.VarChar(60)
  //PeriodicidadeExecucaoServico                                                        Int?
  DataUltimaRevisao                                                                   DateTime?                       @db.DateTime
  DataProximaRevisao                                                                  DateTime?                       @db.DateTime
  TipoResponsavel                                                                     Int?
  CodigoPessoa                                                                        String?                         @db.VarChar(30)
  CodigoRh                                                                            String?                         @db.VarChar(30)
  Ativo                                                                               Int?                            @default(1, map: "DF__Recurso__Ativo__75785BC3")
  Cep                                                                                 String?                         @db.VarChar(10)
  Endereco                                                                            String?                         @db.VarChar(100)
  Numero                                                                              String?                         @db.VarChar(10)
  Bairro                                                                              String?                         @db.VarChar(100)
  CidadeId                                                                            Int?
  Rg                                                                                  String?                         @db.VarChar(50)
  Cpf                                                                                 String?                         @db.VarChar(50)
  Email                                                                               String?                         @db.VarChar(50)
  Nit                                                                                 String?                         @db.VarChar(100)
  Rqe                                                                                 String?                         @db.VarChar(100)
  EstadoId                                                                            Int?
  DescricaoEspecialidade                                                              String?                         @db.VarChar(100)
  Telefone                                                                            String?                         @db.VarChar(20)
  Observacao                                                                          String?                         @db.VarChar(200)
  CodigoUsuario                                                                       String?                         @db.VarChar(20)
  CodigoPrestador                                                                     String?                         @db.VarChar(20)
  Atendente                                                                           String?                         @db.VarChar(20)
  CodigoUnidade                                                                       String?                         @db.VarChar(20)
  NomeUnidade                                                                         String?                         @db.VarChar(200)
  CnpjUnidade                                                                         String?                         @db.VarChar(20)
  DataNascimento                                                                      DateTime?                       @db.DateTime
  Ctps                                                                                String?                         @db.VarChar(200)
  Gfip                                                                                String?                         @db.VarChar(200)
  Sexo                                                                                Int?
  DataAtualizacaoOBA                                                                  DateTime?                       @db.DateTime
  StatusAtividade                                                                     String?                         @db.VarChar(200)
  StatusIntegracao                                                                    String?                         @db.VarChar(200)
  ExisteNecessidadeEspecifica                                                         String?                         @db.VarChar(200)
  CodigoINEP                                                                          String?                         @db.VarChar(200)
  CodigoSISTEC                                                                        String?                         @db.VarChar(200)
  Complemento                                                                         String?                         @db.VarChar(200)
  EnderecoSite                                                                        String?                         @db.VarChar(200)
  Latitude                                                                            Decimal?                        @db.Decimal(14, 5)
  Longitude                                                                           Decimal?                        @db.Decimal(14, 5)
  DescricaoUnidade                                                                    String?                         @db.VarChar(200)
  PlacaVeiculo                                                                        String?                         @db.VarChar(20)
  PossuiInstitutoMesmaUnidade                                                         Int?
  SESIEducacao                                                                        Int?
  SESIPromocaoSaude                                                                   Int?
  SESICultura                                                                         Int?
  SESICentroAlimentacao                                                               Int?
  SESIInstitutoInovacao                                                               Int?
  ConselhoClasseEstadoId                                                              Int?
  AreasAtendimento                                                                    String?                         @db.VarChar(200)
  EquipamentosUnidadeMovel                                                            String?                         @db.VarChar(2000)
  SESISegurancaSaudeTrabalho                                                          Int?
  CargaHoraria                                                                        Int?
  UsoEquipamentoId                                                                    Int?
  TipoServicoEquipamentoId                                                            Int?
  SituacaoEquipamentoId                                                               Int?
  TipoPessoaId                                                                        Int?
  NumeroConselhoClasse                                                                String?                         @db.VarChar(100)
  SiglaConselhoId                                                                     Int?
  EspecialidadeId                                                                     Int?
  PessoaId                                                                            Int?
  SituacaoUnidadeMovelId                                                              Int?
  ResponsavelUnidadeId                                                                Int?
  CategoriaUnidadeId                                                                  Int?
  TipoMobilidadeId                                                                    Int?
  TipoVeiculoUnidadeMovelId                                                           Int?
  StatusFinanciamentoBNDESId                                                          Int?
  EstruturaUnidadeId                                                                  Int?
  PeriodicidadeExecucaoServicoId                                                      Int?
  MetodoCalibracaoId                                                                  Int?
  SituacaoCalibracaoId                                                                Int?
  Uso                                                                                 String?                         @db.VarChar(200)
  Periodicidade                                                                       Int?
  StatusFuncionamento                                                                 String?                         @db.VarChar(200)
  DisponibilidadeUso                                                                  String?                         @db.VarChar(200)
  AreaEquipamento                                                                     String?                         @db.VarChar(200)
  SetorEquipamento                                                                    String?                         @db.VarChar(200)
  Servico                                                                             String?                         @db.VarChar(200)
  StatusCalibracao                                                                    String?                         @db.VarChar(200)
  TipoEquipamento                                                                     Int?
  CodigoLaboratorio                                                                   String?                         @db.NVarChar(100)
  CodigoFabricante                                                                    String?                         @db.NVarChar(100)
  AgendaServico                                                                       AgendaServico[]
  AgendaSSI                                                                           AgendaSSI[]
  AgendaUnidadeMovelEquipamento                                                       AgendaUnidadeMovelEquipamento[]
  AreaSetorResponsavel                                                                AreaSetorResponsavel[]
  CriterioAceitacaoAparelho                                                           CriterioAceitacaoAparelho[]
  EncargoOrcamentoItem                                                                EncargoOrcamentoItem[]
  IndicadorResponsavel_IndicadorResponsavel_ResponsavelAnaliseIdToRecurso             IndicadorResponsavel[]          @relation("IndicadorResponsavel_ResponsavelAnaliseIdToRecurso")
  IndicadorResponsavel_IndicadorResponsavel_ResponsavelColetaIdToRecurso              IndicadorResponsavel[]          @relation("IndicadorResponsavel_ResponsavelColetaIdToRecurso")
  LotacaoFisica                                                                       LotacaoFisica[]
  LotacaoOrcamentaria                                                                 LotacaoOrcamentaria[]
  PlanejamentoContasAdicionais                                                        PlanejamentoContasAdicionais[]
  PlanejamentoOrcamentario                                                            PlanejamentoOrcamentario[]
  PlanejamentoProducaoRateio                                                          PlanejamentoProducaoRateio[]
  PlanoAcao                                                                           PlanoAcao[]
  PlanoAcaoItem                                                                       PlanoAcaoItem[]
  Projeto_Projeto_EmpresaParceiraIdToRecurso                                          Projeto[]                       @relation("Projeto_EmpresaParceiraIdToRecurso")
  Projeto_Projeto_EmpresaReferenciaIdToRecurso                                        Projeto[]                       @relation("Projeto_EmpresaReferenciaIdToRecurso")
  ProjetoAtividade                                                                    ProjetoAtividade[]
  ProjetoEquipe                                                                       ProjetoEquipe[]
  PropostaItemExecucao                                                                PropostaItemExecucao[]
  RateioMaoDeObra                                                                     RateioMaoDeObra[]
  Estado_Recurso_ConselhoClasseEstadoIdToEstado                                       Estado?                         @relation("Recurso_ConselhoClasseEstadoIdToEstado", fields: [ConselhoClasseEstadoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK__Recurso__Conselh__69E6AD86")
  AreaProduto                                                                         AreaProduto?                    @relation(fields: [AreaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Recurso_Area")
  Cargo                                                                               Cargo?                          @relation(fields: [CargoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Recurso_Cargo")
  CategoriaUnidade                                                                    CategoriaUnidade?               @relation(fields: [CategoriaUnidadeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Recurso_CategoriaUnidade")
  Cidade                                                                              Cidade?                         @relation(fields: [CidadeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Recurso_Cidade")
  Empresa                                                                             Empresa?                        @relation(fields: [EmpresaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Recurso_Empresa")
  Especialidade                                                                       Especialidade?                  @relation(fields: [EspecialidadeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Recurso_Especialidade")
  Estado_Recurso_EstadoIdToEstado                                                     Estado?                         @relation("Recurso_EstadoIdToEstado", fields: [EstadoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Recurso_Estado")
  EstruturaUnidade                                                                    EstruturaUnidade?               @relation(fields: [EstruturaUnidadeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Recurso_EstruturaUnidade")
  Funcao                                                                              Funcao?                         @relation(fields: [FuncaoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Recurso_Funcao")
  MetodoCalibracao                                                                    MetodoCalibracao?               @relation(fields: [MetodoCalibracaoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Recurso_MetodoCalibracao")
  NivelCargo                                                                          NivelCargo?                     @relation(fields: [NivelId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Recurso_Nivel")
  PeriodicidadeExecucaoServico                                                        PeriodicidadeExecucaoServico?   @relation(fields: [PeriodicidadeExecucaoServicoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Recurso_PeriodicidadeExecucaoServico")
  Pessoa                                                                              Pessoa?                         @relation(fields: [PessoaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Recurso_Pessoa")
  Recurso                                                                             Recurso?                        @relation("RecursoToRecurso", fields: [ResponsavelUnidadeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Recurso_ResponsavelUnidade")
  other_Recurso                                                                       Recurso[]                       @relation("RecursoToRecurso")
  Setor_Recurso_SetorIdToSetor                                                        Setor?                          @relation("Recurso_SetorIdToSetor", fields: [SetorId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Recurso_Setor")
  SituacaoCalibracao                                                                  SituacaoCalibracao?             @relation(fields: [SituacaoCalibracaoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Recurso_SituacaoCalibracao")
  SituacaoEquipamento                                                                 SituacaoEquipamento?            @relation(fields: [SituacaoEquipamentoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Recurso_SituacaoEquipamento")
  SituacaoUnidadeMovel                                                                SituacaoUnidadeMovel?           @relation(fields: [SituacaoUnidadeMovelId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Recurso_SituacaoUnidadeMovel")
  StatusFinanciamentoBNDES                                                            StatusFinanciamentoBNDES?       @relation(fields: [StatusFinanciamentoBNDESId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Recurso_StatusFinanciamentoBNDES")
  TipoMobilidade                                                                      TipoMobilidade?                 @relation(fields: [TipoMobilidadeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Recurso_TipoMobilidade")
  TipoPessoa                                                                          TipoPessoa?                     @relation(fields: [TipoPessoaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Recurso_TipoPessoa")
  TipoServicoEquipamento                                                              TipoServicoEquipamento?         @relation(fields: [TipoServicoEquipamentoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Recurso_TipoServicoEquipamento")
  TipoVeiculoUnidadeMovel                                                             TipoVeiculoUnidadeMovel?        @relation(fields: [TipoVeiculoUnidadeMovelId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Recurso_TipoVeiculoUnidadeMovel")
  UnidadeNegocio                                                                      UnidadeNegocio?                 @relation(fields: [UnidadeNegocioId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Recurso_UnidadeNegocio")
  UsoEquipamento                                                                      UsoEquipamento?                 @relation(fields: [UsoEquipamentoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Recurso_UsoEquipamento")
  RecursoHumanoPessoa                                                                 RecursoHumanoPessoa[]
  RecursoProduto                                                                      RecursoProduto[]
  RecursoUnidade                                                                      RecursoUnidade[]
  ReservaAgendamentoEquipamento_ReservaAgendamentoEquipamento_EquipamentoIdToRecurso  ReservaAgendamentoEquipamento[] @relation("ReservaAgendamentoEquipamento_EquipamentoIdToRecurso")
  ReservaAgendamentoEquipamento_ReservaAgendamentoEquipamento_RequisitanteIdToRecurso ReservaAgendamentoEquipamento[] @relation("ReservaAgendamentoEquipamento_RequisitanteIdToRecurso")
  ServicoRelacionadoRecurso                                                           ServicoRelacionadoRecurso[]
  Setor_Setor_RecursoIdToRecurso                                                      Setor[]                         @relation("Setor_RecursoIdToRecurso")
  ToleranciaAparelho                                                                  ToleranciaAparelho[]
  UnidadeOperacional                                                                  UnidadeOperacional[]
  ValorSalario                                                                        ValorSalario[]
}

model Recurso_1 {
  Id               Int       @id(map: "PK_Recurso") @default(autoincrement())
  Codigo           String?   @db.NVarChar(20)
  Nome             String?   @db.NVarChar(500)
  CodigoFolha      Int?
  CodigoOrquestra  Int?
  CodigoUsuario    Int?
  Email            String?   @db.NVarChar(255)
  Funcao           String?   @db.NVarChar(250)
  TipoRecurso      Int?
  Empresa          Int?
  ValorHora        Decimal?  @db.Decimal(14, 2)
  ValorSalario     Decimal?  @db.Decimal(14, 2)
  Banco            String?   @db.NVarChar(200)
  Agencia          String?   @db.NVarChar(50)
  ContaCorrente    String?   @db.NVarChar(20)
  FUHORSEMAN       String?   @db.NVarChar(50)
  CODENTIDADE      String?   @db.NVarChar(50)
  ENTIDADE         String?   @db.NVarChar(50)
  SEXO             String?   @db.NVarChar(50)
  TIPOSALARIO      String?   @db.NVarChar(50)
  DESCRTIPOSALARIO String?   @db.NVarChar(50)
  DATANASCIMENTO   DateTime? @db.DateTime
  DATAADMISSAO     DateTime? @db.DateTime
  PISPASEP         String?   @db.NVarChar(50)
  CPF              String?   @db.NVarChar(50)
  CODCARGO         Int?
  DESCRCARGO       String?   @db.NVarChar(50)
  DESCRDETALHCARGO String?   @db.NVarChar(50)
  TELEFONE         String?   @db.NVarChar(50)
  CELULAR          String?   @db.NVarChar(50)
  CODSITUACAO      Int?
  SITUACAO         String?   @db.NVarChar(50)
  NOMEMAEFUNC      String?   @db.NVarChar(225)
  CBO              String?   @db.NVarChar(50)
  RG               String?   @db.NVarChar(50)
  RGUF             String?   @db.NVarChar(50)
  RGORGAO          String?   @db.NVarChar(50)
  ESTCIVIL         String?   @db.NVarChar(50)
  Projeto          Projeto[]
}

model RecursoHumanoPessoa {
  Id        Int      @id(map: "PK_RecursoHumanoPessoa") @default(autoincrement())
  RecursoId Int?
  PessoaId  Int?
  Pessoa    Pessoa?  @relation(fields: [PessoaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_RecursoHumanoPessoa_Pessoa")
  Recurso   Recurso? @relation(fields: [RecursoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_RecursoHumanoPessoa_Recurso")
}

model RecursoProduto {
  Id        Int      @id(map: "PK_RecursoProduto") @default(autoincrement())
  RecursoId Int?
  ProdutoId Int?
  Produto   Produto? @relation(fields: [ProdutoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_RecursoProduto_Produto")
  Recurso   Recurso? @relation(fields: [RecursoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_RecursoProduto_Recurso")
}

model RecursoUnidade {
  Id               Int             @id(map: "PK_RecursoUnidade") @default(autoincrement())
  RecursoId        Int?
  UnidadeNegocioId Int?
  Recurso          Recurso?        @relation(fields: [RecursoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_RecursoUnidade_Recurso")
  UnidadeNegocio   UnidadeNegocio? @relation(fields: [UnidadeNegocioId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_RecursoUnidade_UnidadeNegocio")
}

model ReferenciaFolhaContabilidade {
  Id           Int     @id(map: "PK_ReferenciaFolhaContabilidade") @default(autoincrement())
  Empresa      String? @db.NVarChar(20)
  Folha        String? @db.NVarChar(20)
  CodEvento    String? @db.NVarChar(20)
  TipoEvento   String? @db.NVarChar(20)
  Contacredito String? @db.NVarChar(500)
  ContaDebito  String? @db.NVarChar(500)
  CodHistorico String? @db.NVarChar(20)
}

model RelatorioBI {
  Id                    Int               @id(map: "PK_RelatorioBI") @default(autoincrement())
  Nome                  String?           @db.VarChar(100)
  Descricao             String?           @db.VarChar(500)
  ReportId              String?           @db.NVarChar(Max)
  GroupId               String?           @db.NVarChar(Max)
  CaminhoImagem         String?           @db.NVarChar(Max)
  Ordem                 Int?
  Ativo                 Int?
  GrupoRelatorioBIId    Int?
  NotaExplicativa       String?           @db.VarChar(3000)
  FilterPaneEnabled     Int?
  NavContentPaneEnabled Int?
  GrupoRelatorioBI      GrupoRelatorioBI? @relation(fields: [GrupoRelatorioBIId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_RelatorioBI_GrupoRelatorioBI")
}

model ReservaAgendamentoEquipamento {
  Id                                                            Int       @id(map: "PK_ReservaAgendamentoEquipamento") @default(autoincrement())
  EquipamentoId                                                 Int?
  RequisitanteId                                                Int?
  AreaRequisitanteId                                            Int?
  LocalizacaoTemporaria                                         String?   @db.NVarChar(200)
  DataSaida                                                     DateTime? @db.DateTime
  DataRetornoPrevista                                           DateTime? @db.DateTime
  DataRetornoReal                                               DateTime? @db.DateTime
  StatusEquipamento                                             Int?
  Areas                                                         Areas?    @relation(fields: [AreaRequisitanteId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ReservaAgendamentoEquipamento_AreaRequisitante")
  Recurso_ReservaAgendamentoEquipamento_EquipamentoIdToRecurso  Recurso?  @relation("ReservaAgendamentoEquipamento_EquipamentoIdToRecurso", fields: [EquipamentoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ReservaAgendamentoEquipamento_RecursoEquipamento")
  Recurso_ReservaAgendamentoEquipamento_RequisitanteIdToRecurso Recurso?  @relation("ReservaAgendamentoEquipamento_RequisitanteIdToRecurso", fields: [RequisitanteId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ReservaAgendamentoEquipamento_RecursoRequisitante")
}

model ResponsavelProjeto {
  Id          Int          @id(map: "PK_ResponsavelProjeto") @default(autoincrement())
  UsuarioId   Int?
  ProjetoId   Int?
  AspNetUsers AspNetUsers? @relation(fields: [UsuarioId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ResponsavelProjeto_AspNetUsers")
  Projeto     Projeto?     @relation(fields: [ProjetoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ResponsavelProjeto_Projeto")
}

model Risco {
  Id                 Int                  @id(map: "PK_Risco") @default(autoincrement())
  Codigo             String?              @db.NVarChar(20)
  Nome               String?              @db.NVarChar(500)
  Definicao          String?              @db.NVarChar(500)
  Classificacao      Int?
  Frequencia         Int?
  Seguranca          Int?
  Intervalo          Int?
  Imagem             Int?
  Financeiro         Int?
  Legislacao         Int?
  Operacional        Int?
  MediaProbabilidade Decimal?             @db.Decimal(3, 2)
  MediaImpacto       Decimal?             @db.Decimal(3, 2)
  Observacao         String?              @db.VarChar(Max)
  Ativo              Int?
  MatrizImpactoRisco MatrizImpactoRisco[]
  PlanoAcaoItem      PlanoAcaoItem[]
  RiscoFator         RiscoFator[]
  RiscoFatorRisco    RiscoFatorRisco[]
}

model RiscoFator {
  Id            Int     @id(map: "PK_RiscoFator") @default(autoincrement())
  RiscoId       Int?
  Codigo        String? @db.NVarChar(50)
  Nome          String? @db.NVarChar(500)
  Descricao     String? @db.NVarChar(3000)
  Classificacao Int?
  MacroCausa    Int?
  Risco         Risco?  @relation(fields: [RiscoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Riscos_RiscoFator")
}

model RiscoFatorRisco {
  Id                    Int                  @id(map: "PK_RiscoFatorRisco") @default(autoincrement())
  AtividadeFatorRiscoId Int?
  RiscoId               Int?
  AtividadeFatorRisco   AtividadeFatorRisco? @relation(fields: [AtividadeFatorRiscoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_AtividadeFatorRisco_RiscoFatorRisco")
  Risco                 Risco?               @relation(fields: [RiscoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Risco_RiscoFatorRisco")
}

model Rubrica {
  Id                  Int                   @id(map: "PK_Rubrica") @default(autoincrement())
  Nome                String?               @db.NVarChar(500)
  Ativo               Int?
  PlanoAquisicao      PlanoAquisicao[]
  ProjetoRubrica      ProjetoRubrica[]
  ProjetoRubricaConta ProjetoRubricaConta[]
}

model ScoreAvaliacao {
  Id               Int                @id(map: "PK_ScoreAvaliacao") @default(autoincrement())
  Nome             String?            @db.NVarChar(200)
  Minimo           Int?
  Ponto            Int?
  Cor              String?            @db.VarChar(10)
  CorInteiro       Int?
  Maximo           Int?
  Icone            String?            @db.VarChar(300)
  TipoScoreId      Int?
  TipoScore        TipoScore?         @relation(fields: [TipoScoreId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ScoreAvaliacao_TipoScore")
  UnidadeAvaliacao UnidadeAvaliacao[]
  ValorIndicador   ValorIndicador[]
}

model SegmentoIndicador {
  Id                                                                         Int                              @id(map: "PK_SegmentoIndicador") @default(autoincrement())
  Codigo                                                                     String?                          @db.NVarChar(10)
  Descricao                                                                  String?                          @db.NVarChar(500)
  Ativo                                                                      Int?
  SegmentoSuperiorId                                                         Int?
  CenarioAvaliacao_CenarioAvaliacao_SegmentoAvalicaoIdToSegmentoIndicador    CenarioAvaliacao[]               @relation("CenarioAvaliacao_SegmentoAvalicaoIdToSegmentoIndicador")
  CenarioAvaliacao_CenarioAvaliacao_SegmentoValorizacaoIdToSegmentoIndicador CenarioAvaliacao[]               @relation("CenarioAvaliacao_SegmentoValorizacaoIdToSegmentoIndicador")
  IndicadorItemSegmentoIndicador                                             IndicadorItemSegmentoIndicador[]
  IndicadorSegmentoIndicador                                                 IndicadorSegmentoIndicador[]
  ItemSegmentoIndicador                                                      ItemSegmentoIndicador[]
  PlanoEstrategicoSegmento                                                   PlanoEstrategicoSegmento[]
  SegmentoIndicador                                                          SegmentoIndicador?               @relation("SegmentoIndicadorToSegmentoIndicador", fields: [SegmentoSuperiorId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_SegmentoIndicador_SegmentoSuperior")
  other_SegmentoIndicador                                                    SegmentoIndicador[]              @relation("SegmentoIndicadorToSegmentoIndicador")
  UnidadeAvaliacao                                                           UnidadeAvaliacao[]
  ValorIndicador                                                             ValorIndicador[]
}

model ServicoRelacionado {
  Id                        Int                         @id(map: "PK_ServicoRelacionado") @default(autoincrement())
  Descricao                 String?                     @db.VarChar(100)
  Ativo                     Int?
  ServicoRelacionadoRecurso ServicoRelacionadoRecurso[]
}

model ServicoRelacionadoRecurso {
  Id                   Int                 @id(map: "PK_ServicoRelacionadoRecurso") @default(autoincrement())
  ServicoRelacionadoId Int?
  RecursoId            Int?
  Recurso              Recurso?            @relation(fields: [RecursoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ServicoRelacionadoRecurso_Recurso")
  ServicoRelacionado   ServicoRelacionado? @relation(fields: [ServicoRelacionadoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ServicoRelacionadoRecurso_ServicoRelacionado")
}

model Setor {
  Id                               Int                    @id(map: "PK_Setor") @default(autoincrement())
  Codigo                           String?                @db.NVarChar(20)
  Nome                             String?                @db.NVarChar(255)
  Descricao                        String?                @db.NVarChar(3000)
  EmpresaId                        Int?
  RecursoId                        Int?
  Ativo                            Int?
  DataValidade                     DateTime?              @db.DateTime
  UnidadeOperacionalId             Int?
  AreaSetorCargo                   AreaSetorCargo[]
  AreaSetorResponsavel             AreaSetorResponsavel[]
  LotacaoFisica                    LotacaoFisica[]
  ProcessoAtividade                ProcessoAtividade[]
  Recurso_Recurso_SetorIdToSetor   Recurso[]              @relation("Recurso_SetorIdToSetor")
  Empresa                          Empresa?               @relation(fields: [EmpresaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Setor_Empresa")
  Recurso_Setor_RecursoIdToRecurso Recurso?               @relation("Setor_RecursoIdToRecurso", fields: [RecursoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_SetorRecurso")
  UnidadeOperacional               UnidadeOperacional?    @relation(fields: [UnidadeOperacionalId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_SetorUnidadeOperacional")
}

model SiglaConselho {
  Id    Int     @id(map: "PK_SiglaConselho") @default(autoincrement())
  Sigla String? @db.VarChar(100)
  Ativo Int?
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model Sindicato {
  Id        Int     @default(autoincrement())
  Nome      String? @db.NVarChar(100)
  Descricao String? @db.NVarChar(255)

  @@ignore
}

model Sistema {
  Id                Int                 @id(map: "PK_Sistemas") @default(autoincrement())
  Nome              String              @db.VarChar(100)
  Ativo             Int?
  SistemasAtividade SistemasAtividade[]
}

model SistemasAtividade {
  Id                  Int               @id(map: "PK_SistemasAtividade") @default(autoincrement())
  SistemaId           Int
  ProcessoAtividadeId Int
  ProcessoAtividade   ProcessoAtividade @relation(fields: [ProcessoAtividadeId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_SistemasAtividade_ProcessoAtividade")
  Sistema             Sistema           @relation(fields: [SistemaId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_SistemasAtividade_Sistema")
}

model SituacaoCalibracao {
  Id        Int       @id(map: "PK__Situacao__3214EC070D0F0BB7") @default(autoincrement())
  Descricao String?   @db.VarChar(250)
  Ativo     Boolean?  @default(true, map: "DF__SituacaoC__Ativo__57E7F8DC")
  Codigo    Int?
  Recurso   Recurso[]
}

model SituacaoEquipamento {
  Id        Int       @id(map: "PK_SituacaoEquipamento") @default(autoincrement())
  Descricao String?   @db.VarChar(100)
  Ativo     Int?      @default(1, map: "DF_SituacaoEquipamento")
  Codigo    Int?
  Recurso   Recurso[]
}

model SituacaoUnidadeMovel {
  Id        Int       @id(map: "PK_SituacaoUnidadeMovel") @default(autoincrement())
  Descricao String?   @db.VarChar(100)
  Ativo     Int?
  Recurso   Recurso[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model SST_Cenarios {
  ID               Int      @default(autoincrement())
  NrId             Int
  Nome             String   @db.VarChar(Max)
  Status           String   @db.VarChar(Max)
  Descricao        String   @db.Text
  PlanoAcao        String   @db.Text
  ImagemEncontrada String   @db.VarChar(Max)
  ImagemSugerida   String   @db.VarChar(Max)
  Atualizacao      DateTime @db.DateTime
  EmpresaId        Int?
  Requisitante     String?  @db.VarChar(Max)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model SST_ItemLegislacao {
  ID           Int      @default(autoincrement())
  NrId         Int
  ItemAvaliado String   @db.VarChar(Max)
  PlanoAcao    String?  @db.Text
  Ativo        Boolean?
  Indice       Int?
  Tipo         String?  @db.VarChar(1)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model SST_ItemTreinamento {
  ID           Int      @default(autoincrement())
  NrId         Int
  ItemAvaliado String   @db.VarChar(Max)
  PlanoAcao    String?  @db.Text
  Ativo        Boolean?
  Indice       Int?
  Tipo         String?  @db.VarChar(1)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model SST_ItensAvaliadosLegislacao {
  ID            Int       @default(autoincrement())
  NrAvaliadaId  Int
  ItemId        Int
  PlanoAcao     String    @db.Text
  Status        String    @db.VarChar(Max)
  MultaMinima   Float?
  MultaMaxima   Float?
  PrazoSugerido DateTime? @db.Date
  TipoCusto     String?   @db.VarChar(200)
  Prioridade    Int?

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model SST_ItensAvaliadosTreinamento {
  ID            Int       @default(autoincrement())
  NrAvaliadaId  Int
  ItemId        Int
  PlanoAcao     String    @db.Text
  Status        String    @db.VarChar(Max)
  MultaMinima   Float?
  MultaMaxima   Float?
  PrazoSugerido DateTime? @db.Date
  TipoCusto     String?   @db.VarChar(200)
  Prioridade    Int?

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model SST_Multas {
  ID                   Int     @default(autoincrement())
  Ano                  Int
  MargemMinTrabalhador Int
  MargemMaxTrabalhador Int
  Indice               Int
  Tipo                 String  @db.VarChar(1)
  ValorMinimo          Float?
  ValorMaximo          Float?
  UFIR                 String? @db.Text

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model SST_Normas {
  ID        Int     @default(autoincrement())
  NomeNorma String  @db.VarChar(Max)
  Sigla     String? @db.VarChar(255)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model SST_NormasAvaliadasLegislacao {
  ID           Int       @default(autoincrement())
  NrId         Int
  EmpresaId    Int
  Status       String    @db.VarChar(Max)
  Versao       Int
  Atualizacao  DateTime? @db.DateTime
  Requisitante String?   @db.VarChar(Max)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model SST_NormasAvaliadasTreinamento {
  ID           Int       @default(autoincrement())
  NrId         Int
  EmpresaId    Int
  Status       String    @db.VarChar(Max)
  Versao       Int
  Atualizacao  DateTime? @db.DateTime
  Requisitante String?   @db.VarChar(Max)

  @@ignore
}

model SST_PotencialComercial {
  Id           Int     @id(map: "PK_CRM_PotencialComercial") @default(autoincrement())
  EmpresaId    Int?
  EntidadeId   Int?
  ServicoId    Int?
  Quantidade   Int?
  Valor        Float?
  TipoServico  String? @db.VarChar(500)
  Requisitante String? @db.VarChar(Max)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model SST_Prioridade {
  ID   Int    @default(autoincrement())
  Nome String @db.VarChar(100)

  @@ignore
}

model SST_ServicosExecutados {
  ID              Int       @id(map: "PK_SST_ServicosExecutados") @default(autoincrement())
  Processo        Int?
  PropostaId      Int?
  ServicoId       Int?
  Quantidade      Int?
  Status          String?   @db.VarChar(Max)
  PPRAConjugado   String?   @db.VarChar(5)
  DataRealizacao  DateTime? @db.Date
  Responsavel     Int?
  InicioVigencia  DateTime? @db.Date
  TerminoVigencia DateTime? @db.Date
  VersaoBase      Int?
  DataEdital      DateTime? @db.Date
  DataEleicao     DateTime? @db.Date
  DataPosse       DateTime? @db.Date
  DataPPRA        DateTime? @db.Date
}

model StatusFinanciamentoBNDES {
  Id        Int       @id(map: "PK_StatusFinanciamentoBNDES") @default(autoincrement())
  Descricao String?   @db.VarChar(100)
  Ativo     Int?
  Recurso   Recurso[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model STI_Agendamento_Acompanhamento {
  ID                            Int       @default(autoincrement())
  Instancia                     Int?
  PropostaId                    Int?
  ServicoId                     Int?
  responsavelPeloAcompanhamento String?   @db.VarChar(100)
  dataPrimeiraVisita            DateTime? @db.Date
  dataSegundaVisita             DateTime? @db.Date
  horaInicioVisita1             String?   @db.VarChar(5)
  horaTerminoVisita1            String?   @db.VarChar(5)
  horaInicioVisita2             String?   @db.VarChar(5)
  horaTerminoVisita2            String?   @db.VarChar(5)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model STI_Agendamento_Relatorio_Final {
  ID                      Int       @default(autoincrement())
  Instancia               Int?
  PropostaId              Int?
  ServicoId               Int?
  responsavelEntregaFinal String?   @db.VarChar(5)
  dataEntrega             DateTime? @db.Date
  horaInicioEntrega       String?   @db.VarChar(5)
  horaTerminoEntrega      String?   @db.VarChar(5)

  @@ignore
}

model STI_CronogramaAux {
  ID                Int       @id(map: "PK_STI_CronogramaAux") @default(autoincrement())
  PropostaId        Int?
  Instancia         Int?
  DataRealizacao    DateTime? @db.Date
  DataExecucao      DateTime? @db.Date
  Etapa             String?   @db.VarChar(Max)
  EtapaId           Int
  statusAgendamento String?   @db.VarChar(Max)
  HoraInicio        String?   @db.VarChar(5)
  HoraTermino       String?   @db.VarChar(5)
  Responsavel       Int?
  NomeResponsavel   String?   @db.VarChar(100)
  CronogramaId      Int?
}

model STI_CronogramaConsultoria {
  Id                 Int       @id(map: "PK_STI_Consultoria") @default(autoincrement())
  Instancia          Int?
  PropostaId         Int?
  ServicoId          Int?
  EtapasId           Int?
  CNPJ               String?   @db.NVarChar(20)
  EtapasAgendamento  String?   @db.Text
  StatusAgendamento  String?   @db.VarChar(100)
  TecnicoResponsavel Int?
  DataRealizacao     DateTime? @db.Date
  HoraInicio         String?   @db.VarChar(5)
  HoraTermino        String?   @db.VarChar(5)
  Produto            Produto?  @relation(fields: [ServicoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_STI_Consultoria_Servico")
}

model sysdiagrams {
  name         String @db.NVarChar(128)
  principal_id Int
  diagram_id   Int    @id(map: "PK__sysdiagr__C2B05B61E9306D99") @default(autoincrement())
  version      Int?
  definition   Bytes?

  @@unique([principal_id, name], map: "UK_principal_name")
}

model system_access_log {
  id              Int       @id(map: "PK__system_a__3213E83F92349CBC") @default(autoincrement())
  sessionid       String?   @db.VarChar(256)
  login           String?   @db.VarChar(256)
  login_time      DateTime? @db.DateTime
  login_year      String?   @db.VarChar(4)
  login_month     String?   @db.VarChar(2)
  login_day       String?   @db.VarChar(2)
  logout_time     DateTime? @db.DateTime
  impersonated    String?   @db.Char(1)
  access_ip       String?   @db.VarChar(45)
  impersonated_by String?   @db.VarChar(200)
}

model system_access_notification_log {
  id         Int     @id(map: "PK__system_a__3213E83FDB4E22F8") @default(autoincrement())
  login      String? @db.VarChar(256)
  email      String? @db.VarChar(256)
  ip_address String? @db.VarChar(256)
  login_time String? @db.VarChar(256)

  @@index([login], map: "sys_access_notification_log_login_idx")
}

model system_change_log {
  id             Int       @id(map: "PK__system_c__3213E83F099A7B28") @default(autoincrement())
  logdate        DateTime? @db.DateTime
  login          String?   @db.VarChar(256)
  tablename      String?   @db.VarChar(256)
  primarykey     String?   @db.VarChar(256)
  pkvalue        String?   @db.VarChar(256)
  operation      String?   @db.VarChar(256)
  columnname     String?   @db.VarChar(256)
  oldvalue       String?   @db.NVarChar(Max)
  newvalue       String?   @db.NVarChar(Max)
  access_ip      String?   @db.VarChar(256)
  transaction_id String?   @db.VarChar(256)
  log_trace      String?   @db.NVarChar(Max)
  session_id     String?   @db.VarChar(256)
  class_name     String?   @db.VarChar(256)
  php_sapi       String?   @db.VarChar(256)
  log_year       String?   @db.Char(4)
  log_month      String?   @db.Char(2)
  log_day        String?   @db.Char(2)

  @@index([class_name], map: "sys_change_log_class_idx")
  @@index([logdate], map: "sys_change_log_date_idx")
  @@index([log_day], map: "sys_change_log_day_idx")
  @@index([login], map: "sys_change_log_login_idx")
  @@index([log_month], map: "sys_change_log_month_idx")
  @@index([tablename], map: "sys_change_log_table_idx")
  @@index([log_year], map: "sys_change_log_year_idx")
}

model system_document {
  id                       Int                        @id(map: "PK__system_d__3213E83FCD29DEED") @default(autoincrement())
  system_user_id           Int?
  title                    String?                    @db.VarChar(256)
  description              String?                    @db.NVarChar(Max)
  category_id              Int?
  submission_date          DateTime?                  @db.Date
  archive_date             DateTime?                  @db.Date
  filename                 String?                    @db.VarChar(512)
  in_trash                 String?                    @db.Char(1)
  system_folder_id         Int?
  system_document_category system_document_category?  @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK__system_do__categ__6621099A")
  system_folder            system_folder?             @relation(fields: [system_folder_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK__system_do__syste__67152DD3")
  system_document_bookmark system_document_bookmark[]
  system_document_group    system_document_group[]
  system_document_user     system_document_user[]

  @@index([category_id], map: "sys_document_category_idx")
  @@index([system_folder_id], map: "sys_document_folder_idx")
  @@index([system_user_id], map: "sys_document_user_idx")
}

model system_document_bookmark {
  id                 Int              @id(map: "PK__system_d__3213E83F01C47BBD") @default(autoincrement())
  system_user_id     Int?
  system_document_id Int?
  system_document    system_document? @relation(fields: [system_document_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK__system_do__syste__6FAA73D4")

  @@index([system_document_id], map: "sys_document_bookmark_document_idx")
  @@index([system_user_id], map: "sys_document_bookmark_user_idx")
}

model system_document_category {
  id              Int               @id(map: "PK__system_d__3213E83FDD2D9DA4") @default(autoincrement())
  name            String?           @db.VarChar(256)
  system_document system_document[]

  @@index([name], map: "sys_document_category_name_idx")
}

model system_document_group {
  id              Int              @id(map: "PK__system_d__3213E83FC53D7B27") @default(autoincrement())
  document_id     Int?
  system_group_id Int?
  system_document system_document? @relation(fields: [document_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK__system_do__docum__6CCE0729")

  @@index([document_id], map: "sys_document_group_document_idx")
  @@index([system_group_id], map: "sys_document_group_group_idx")
}

model system_document_user {
  id              Int              @id(map: "PK__system_d__3213E83F78DC29A5") @default(autoincrement())
  document_id     Int?
  system_user_id  Int?
  system_document system_document? @relation(fields: [document_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK__system_do__docum__69F19A7E")

  @@index([document_id], map: "sys_document_user_document_idx")
  @@index([system_user_id], map: "sys_document_user_user_idx")
}

model system_folder {
  id                      Int                      @id(map: "PK__system_f__3213E83F5B5CF48E") @default(autoincrement())
  system_user_id          Int?
  created_at              DateTime?                @db.Date
  name                    String                   @db.VarChar(256)
  in_trash                String?                  @db.Char(1)
  system_folder_parent_id Int?
  system_document         system_document[]
  system_folder           system_folder?           @relation("system_folderTosystem_folder", fields: [system_folder_parent_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK__system_fo__syste__5D8BC399")
  other_system_folder     system_folder[]          @relation("system_folderTosystem_folder")
  system_folder_bookmark  system_folder_bookmark[]
  system_folder_group     system_folder_group[]
  system_folder_user      system_folder_user[]

  @@index([name], map: "sys_folder_name_idx")
  @@index([system_folder_parent_id], map: "sys_folder_parent_id_idx")
  @@index([system_user_id], map: "sys_folder_user_id_idx")
}

model system_folder_bookmark {
  id               Int            @id(map: "PK__system_f__3213E83F4B5F3C4B") @default(autoincrement())
  system_user_id   Int?
  system_folder_id Int?
  system_folder    system_folder? @relation(fields: [system_folder_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK__system_fo__syste__7286E07F")

  @@index([system_folder_id], map: "sys_folder_bookmark_folder_idx")
  @@index([system_user_id], map: "sys_folder_bookmark_user_idx")
}

model system_folder_group {
  id               Int            @id(map: "PK__system_f__3213E83FBA7116C7") @default(autoincrement())
  system_folder_id Int?
  system_group_id  Int?
  system_folder    system_folder? @relation(fields: [system_folder_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK__system_fo__syste__63449CEF")

  @@index([system_folder_id], map: "sys_folder_group_folder_idx")
  @@index([system_group_id], map: "sys_folder_group_group_idx")
}

model system_folder_user {
  id               Int            @id(map: "PK__system_f__3213E83FE02B69CE") @default(autoincrement())
  system_folder_id Int?
  system_user_id   Int?
  system_folder    system_folder? @relation(fields: [system_folder_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK__system_fo__syste__60683044")

  @@index([system_folder_id], map: "sys_folder_user_folder_idx")
  @@index([system_user_id], map: "sys_folder_user_user_idx")
}

model system_group {
  id                   Int                    @id(map: "PK__system_g__3213E83F6E88D36E")
  name                 String?                @db.VarChar(256)
  system_group_program system_group_program[]
  system_user_group    system_user_group[]
}

model system_group_program {
  id                Int             @id(map: "PK__system_g__3213E83F3CCBF837")
  system_group_id   Int?
  system_program_id Int?
  system_group      system_group?   @relation(fields: [system_group_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK__system_gr__syste__2FC4F8E9")
  system_program    system_program? @relation(fields: [system_program_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK__system_gr__syste__30B91D22")
}

model system_message {
  id                Int     @id(map: "PK__system_m__3213E83FB183B5BB") @default(autoincrement())
  system_user_id    Int?
  system_user_to_id Int?
  subject           String? @db.VarChar(256)
  message           String? @db.NVarChar(Max)
  dt_message        String? @db.VarChar(256)
  checked           String? @db.Char(1)

  @@index([system_user_id], map: "sys_message_user_id_idx")
  @@index([system_user_to_id], map: "sys_message_user_to_idx")
}

model system_notification {
  id                Int     @id(map: "PK__system_n__3213E83F0DA858A1") @default(autoincrement())
  system_user_id    Int?
  system_user_to_id Int?
  subject           String? @db.VarChar(256)
  message           String? @db.NVarChar(Max)
  dt_message        String? @db.VarChar(256)
  action_url        String? @db.VarChar(Max)
  action_label      String? @db.VarChar(256)
  icon              String? @db.VarChar(256)
  checked           String? @db.Char(1)

  @@index([system_user_id], map: "sys_notification_user_id_idx")
  @@index([system_user_to_id], map: "sys_notification_user_to_idx")
}

model system_post {
  id                      Int                       @id(map: "PK__system_p__3213E83F99DDE802") @default(autoincrement())
  system_user_id          Int?
  title                   String                    @db.VarChar(256)
  content                 String                    @db.NVarChar(Max)
  created_at              DateTime                  @db.DateTime
  active                  String                    @default("Y", map: "DF__system_po__activ__75634D2A") @db.Char(1)
  system_post_comment     system_post_comment[]
  system_post_like        system_post_like[]
  system_post_share_group system_post_share_group[]
  system_post_tag         system_post_tag[]

  @@index([system_user_id], map: "sys_post_user_idx")
}

model system_post_comment {
  id             Int         @id(map: "PK__system_p__3213E83F0A070089") @default(autoincrement())
  comment        String      @db.NVarChar(Max)
  system_user_id Int
  system_post_id Int
  created_at     DateTime    @db.DateTime
  system_post    system_post @relation(fields: [system_post_id], references: [id], onUpdate: NoAction, map: "FK__system_po__syste__7DF8932B")

  @@index([system_post_id], map: "sys_post_comment_post_idx")
  @@index([system_user_id], map: "sys_post_comment_user_idx")
}

model system_post_like {
  id             Int         @id(map: "PK__system_p__3213E83FDD127486") @default(autoincrement())
  system_user_id Int?
  system_post_id Int
  created_at     DateTime    @db.DateTime
  system_post    system_post @relation(fields: [system_post_id], references: [id], onUpdate: NoAction, map: "FK__system_po__syste__00D4FFD6")

  @@index([system_post_id], map: "sys_post_like_post_idx")
  @@index([system_user_id], map: "sys_post_like_user_idx")
}

model system_post_share_group {
  id              Int         @id(map: "PK__system_p__3213E83F84CA2011") @default(autoincrement())
  system_group_id Int?
  system_post_id  Int
  system_post     system_post @relation(fields: [system_post_id], references: [id], onUpdate: NoAction, map: "FK__system_po__syste__783FB9D5")

  @@index([system_group_id], map: "sys_post_share_group_group_idx")
  @@index([system_post_id], map: "sys_post_share_group_post_idx")
}

model system_post_tag {
  id             Int         @id(map: "PK__system_p__3213E83F2228627E") @default(autoincrement())
  system_post_id Int
  tag            String      @db.VarChar(256)
  system_post    system_post @relation(fields: [system_post_id], references: [id], onUpdate: NoAction, map: "FK__system_po__syste__7B1C2680")

  @@index([system_post_id], map: "sys_post_tag_post_idx")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model system_preference {
  id    String? @db.VarChar(256)
  value String? @db.Text

  @@ignore
}

model system_program {
  id                         Int                          @id(map: "PK__system_p__3213E83F4EBCC815")
  name                       String?                      @db.VarChar(256)
  controller                 String?                      @db.VarChar(256)
  system_group_program       system_group_program[]
  system_program_method_role system_program_method_role[]
  system_user_program        system_user_program[]
  system_users               system_users[]
}

model system_program_method_role {
  id                Int             @id(map: "PK__system_p__3213E83F0D88A54D")
  system_program_id Int?
  system_role_id    Int?
  method_name       String?         @db.VarChar(256)
  system_program    system_program? @relation(fields: [system_program_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK__system_pr__syste__3A42875C")
  system_role       system_role?    @relation(fields: [system_role_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK__system_pr__syste__3B36AB95")
}

model system_request_log {
  id               Int       @id(map: "PK__system_r__3213E83F7883E43F") @default(autoincrement())
  endpoint         String?   @db.VarChar(4096)
  logdate          DateTime? @db.DateTime
  log_year         String?   @db.Char(4)
  log_month        String?   @db.Char(2)
  log_day          String?   @db.Char(2)
  session_id       String?   @db.VarChar(256)
  login            String?   @db.VarChar(256)
  access_ip        String?   @db.VarChar(256)
  class_name       String?   @db.VarChar(256)
  class_method     String?   @db.VarChar(256)
  http_host        String?   @db.VarChar(256)
  server_port      String?   @db.VarChar(256)
  request_uri      String?   @db.NVarChar(Max)
  request_method   String?   @db.VarChar(256)
  query_string     String?   @db.NVarChar(Max)
  request_headers  String?   @db.NVarChar(Max)
  request_body     String?   @db.NVarChar(Max)
  request_duration Int?

  @@index([class_name], map: "sys_request_log_class_idx")
  @@index([logdate], map: "sys_request_log_date_idx")
  @@index([log_day], map: "sys_request_log_day_idx")
  @@index([login], map: "sys_request_log_login_idx")
  @@index([class_method], map: "sys_request_log_method_idx")
  @@index([log_month], map: "sys_request_log_month_idx")
  @@index([log_year], map: "sys_request_log_year_idx")
}

model system_role {
  id                         Int                          @id(map: "PK__system_r__3213E83FAE6A167F")
  name                       String?                      @db.VarChar(256)
  custom_code                String?                      @db.VarChar(256)
  system_program_method_role system_program_method_role[]
  system_user_role           system_user_role[]
}

model system_sql_log {
  id             Int       @id(map: "PK__system_s__3213E83FF676A340") @default(autoincrement())
  logdate        DateTime? @db.DateTime
  login          String?   @db.VarChar(256)
  database_name  String?   @db.VarChar(256)
  sql_command    String?   @db.NVarChar(Max)
  statement_type String?   @db.VarChar(256)
  access_ip      String?   @db.VarChar(45)
  transaction_id String?   @db.VarChar(256)
  log_trace      String?   @db.NVarChar(Max)
  session_id     String?   @db.VarChar(256)
  class_name     String?   @db.VarChar(256)
  php_sapi       String?   @db.VarChar(256)
  request_id     String?   @db.VarChar(256)
  log_year       String?   @db.Char(4)
  log_month      String?   @db.Char(2)
  log_day        String?   @db.Char(2)

  @@index([class_name], map: "sys_sql_log_class_idx")
  @@index([database_name], map: "sys_sql_log_database_idx")
  @@index([logdate], map: "sys_sql_log_date_idx")
  @@index([log_day], map: "sys_sql_log_day_idx")
  @@index([login], map: "sys_sql_log_login_idx")
  @@index([log_month], map: "sys_sql_log_month_idx")
  @@index([log_year], map: "sys_sql_log_year_idx")
}

model system_unit {
  id               Int                @id(map: "PK__system_u__3213E83F5BD79D1F")
  name             String?            @db.VarChar(256)
  connection_name  String?            @db.VarChar(256)
  custom_code      String?            @db.VarChar(256)
  system_user_unit system_user_unit[]
  system_users     system_users[]
}

model system_user_group {
  id              Int           @id(map: "PK__system_u__3213E83F281101E3")
  system_user_id  Int?
  system_group_id Int?
  system_users    system_users? @relation(fields: [system_user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK__system_us__syste__2823D721")
  system_group    system_group? @relation(fields: [system_group_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK__system_us__syste__2917FB5A")
}

model system_user_old_password {
  id             Int           @id(map: "PK__system_u__3213E83F81624025")
  system_user_id Int?
  password       String?       @db.VarChar(256)
  created_at     DateTime?     @db.DateTime
  system_users   system_users? @relation(fields: [system_user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK__system_us__syste__37661AB1")
}

model system_user_program {
  id                Int             @id(map: "PK__system_u__3213E83F6810F804")
  system_user_id    Int?
  system_program_id Int?
  system_users      system_users?   @relation(fields: [system_user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK__system_us__syste__339589CD")
  system_program    system_program? @relation(fields: [system_program_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK__system_us__syste__3489AE06")
}

model system_user_role {
  id             Int           @id(map: "PK__system_u__3213E83F51AFD15A")
  system_user_id Int?
  system_role_id Int?
  system_users   system_users? @relation(fields: [system_user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK__system_us__syste__2BF46805")
  system_role    system_role?  @relation(fields: [system_role_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK__system_us__syste__2CE88C3E")
}

model system_user_unit {
  id             Int           @id(map: "PK__system_u__3213E83FD823F2E0")
  system_user_id Int?
  system_unit_id Int?
  system_users   system_users? @relation(fields: [system_user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK__system_us__syste__2453463D")
  system_unit    system_unit?  @relation(fields: [system_unit_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK__system_us__syste__25476A76")
}

model system_users {
  id                        Int                        @id(map: "PK__system_u__3213E83F0C548B43")
  name                      String?                    @db.VarChar(256)
  login                     String?                    @db.VarChar(256)
  password                  String?                    @db.VarChar(256)
  email                     String?                    @db.VarChar(256)
  accepted_term_policy      String?                    @db.Char(1)
  phone                     String?                    @db.VarChar(256)
  address                   String?                    @db.VarChar(256)
  function_name             String?                    @db.VarChar(256)
  about                     String?                    @db.VarChar(Max)
  accepted_term_policy_at   String?                    @db.VarChar(256)
  accepted_term_policy_data String?                    @db.Text
  frontpage_id              Int?
  system_unit_id            Int?
  active                    String?                    @db.Char(1)
  custom_code               String?                    @db.VarChar(256)
  otp_secret                String?                    @db.VarChar(256)
  system_user_group         system_user_group[]
  system_user_old_password  system_user_old_password[]
  system_user_program       system_user_program[]
  system_user_role          system_user_role[]
  system_user_unit          system_user_unit[]
  system_program            system_program?            @relation(fields: [frontpage_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK__system_us__front__2082B559")
  system_unit               system_unit?               @relation(fields: [system_unit_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK__system_us__syste__2176D992")
}

model system_wiki_page {
  id                      Int                       @id(map: "PK__system_w__3213E83F70C01CAC") @default(autoincrement())
  system_user_id          Int?
  created_at              DateTime                  @db.DateTime
  updated_at              DateTime?                 @db.DateTime
  title                   String                    @db.VarChar(256)
  description             String                    @db.NVarChar(4000)
  content                 String                    @db.NVarChar(Max)
  active                  String                    @default("Y", map: "DF__system_wi__activ__479C827A") @db.Char(1)
  searchable              String                    @default("Y", map: "DF__system_wi__searc__4890A6B3") @db.Char(1)
  system_wiki_share_group system_wiki_share_group[]
  system_wiki_tag         system_wiki_tag[]

  @@index([system_user_id], map: "sys_wiki_page_user_idx")
}

model system_wiki_share_group {
  id                  Int              @id(map: "PK__system_w__3213E83FB285E764") @default(autoincrement())
  system_group_id     Int?
  system_wiki_page_id Int
  system_wiki_page    system_wiki_page @relation(fields: [system_wiki_page_id], references: [id], onUpdate: NoAction, map: "FK__system_wi__syste__4E498009")

  @@index([system_group_id], map: "sys_wiki_share_group_group_idx")
  @@index([system_wiki_page_id], map: "sys_wiki_share_group_page_idx")
}

model system_wiki_tag {
  id                  Int              @id(map: "PK__system_w__3213E83F95604ABC") @default(autoincrement())
  system_wiki_page_id Int
  tag                 String           @db.VarChar(256)
  system_wiki_page    system_wiki_page @relation(fields: [system_wiki_page_id], references: [id], onUpdate: NoAction, map: "FK__system_wi__syste__4B6D135E")

  @@index([system_wiki_page_id], map: "sys_wiki_tag_page_idx")
}

model TargetDecision {
  id                     Int                      @id(map: "PK__TargetDe__3213E83FBA1C0A23") @default(autoincrement())
  mainProcessCode        Int?
  description            String?                  @db.VarChar(255)
  created_at             DateTime?                @db.DateTime
  updated_at             DateTime?                @db.DateTime
  TargetDecisionInstance TargetDecisionInstance[]
  TargetDecisionSetting  TargetDecisionSetting[]
}

model TargetDecisionInstance {
  id               Int             @id(map: "PK__TargetDe__3213E83FCC2F58EF") @default(autoincrement())
  processCode      Int?
  accessToken      String?         @db.VarChar(50)
  accessTokenCode  String?         @db.VarChar(10)
  protocoloCode    String?         @db.VarChar(30)
  entityCode       String?         @db.VarChar(10)
  anonymous_       Boolean?
  outerResponsible String?         @db.VarChar(255)
  innerResponsible String?         @db.VarChar(255)
  decision         String?         @db.VarChar(3000)
  observation      String?         @db.VarChar(3000)
  targetDecisionId Int?
  created_at       DateTime?       @db.DateTime
  updated_at       DateTime?       @db.DateTime
  TargetDecision   TargetDecision? @relation(fields: [targetDecisionId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_TargetDecisionInstance_TD")
}

model TargetDecisionSetting {
  id               Int             @id(map: "PK__TargetDe__3213E83FB62D0A90") @default(autoincrement())
  label_           String?         @db.VarChar(255)
  fieldUniqueName  String?         @db.VarChar(255)
  displayOnly      Boolean?
  decisionField    Boolean?
  textField        Boolean?
  observation      Boolean?
  targetDecisionId Int?
  created_at       DateTime?       @db.DateTime
  updated_at       DateTime?       @db.DateTime
  TargetDecision   TargetDecision? @relation(fields: [targetDecisionId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_TargetDecisionSetting_TD")
}

model TemaEstrategico {
  Id                Int               @id(map: "PK_TemaEstrategico") @default(autoincrement())
  Codigo            String?           @db.NVarChar(20)
  Nome              String?           @db.NVarChar(500)
  Descricao         String?           @db.NVarChar(Max)
  Ativo             Int?
  PlanoPlurianualId Int?
  EmpresaId         Int?
  MapaEstrategico   MapaEstrategico[]
  Objetivo          Objetivo[]
  Empresa           Empresa?          @relation(fields: [EmpresaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_TemaEstrategico_Empresa")
  PlanoPlurianual   PlanoPlurianual?  @relation(fields: [PlanoPlurianualId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_TemaEstrategico_PlanoPlurianual")
}

model TipoCentro {
  Id                     Int                      @id(map: "PK_TipoCentro") @default(autoincrement())
  IntegraKey             String?                  @db.NVarChar(100)
  Codigo                 String?                  @db.NVarChar(20)
  Nome                   String?                  @db.NVarChar(100)
  Descricao              String?                  @db.NVarChar(Max)
  Ativo                  Boolean?
  CentroResponsabilidade CentroResponsabilidade[]
}

model TipoContato {
  Id            Int             @id(map: "PK_TipoContato") @default(autoincrement())
  Nome          String?         @db.NVarChar(255)
  Descricao     String?         @db.NVarChar(255)
  PessoaContato PessoaContato[]
}

model TipoMobilidade {
  Id        Int       @id(map: "PK_TipoMobilidade") @default(autoincrement())
  Descricao String?   @db.VarChar(100)
  Ativo     Int?
  Recurso   Recurso[]
}

model TipoPessoa {
  Id        Int       @id(map: "PK_TipoPessoa") @default(autoincrement())
  Descricao String?   @db.VarChar(100)
  Ativo     Int?
  Recurso   Recurso[]
}

model TipoProduto {
  Id        Int       @id(map: "PK_TipoProduto") @default(autoincrement())
  Codigo    String?   @db.NVarChar(100)
  Nome      String?   @db.NVarChar(3000)
  Descricao String?
  Produto   Produto[]
}

model TipoScore {
  Id               Int                @id(map: "PK_TipoScore") @default(autoincrement())
  Codigo           String?            @db.NVarChar(20)
  Nome             String?            @db.NVarChar(500)
  Polaridade       Int?
  Ativo            Int?
  Indicador        Indicador[]
  PlanoEstrategico PlanoEstrategico[]
  ScoreAvaliacao   ScoreAvaliacao[]
}

model TipoServicoEquipamento {
  Id        Int       @id(map: "PK_TipoServicoEquipamento") @default(autoincrement())
  Descricao String?   @db.VarChar(100)
  Ativo     Int?
  Codigo    Int
  Nome      String?   @db.VarChar(250)
  Recurso   Recurso[]
}

model TipoUnidade {
  Id                    Int                     @id(map: "PK_TipoUnidade") @default(autoincrement())
  IntegraKey            String?                 @db.NVarChar(100)
  Codigo                String?                 @db.NVarChar(20)
  Nome                  String?                 @db.NVarChar(100)
  Descricao             String?                 @db.NVarChar(Max)
  Ativo                 Boolean?
  OptimisticLockField   Int?
  GCRecord              Int?
  UnidadeOrganizacional UnidadeOrganizacional[]
}

model TipoVeiculoUnidadeMovel {
  Id        Int       @id(map: "PK_TipoVeiculoUnidadeMovel") @default(autoincrement())
  Descricao String?   @db.VarChar(100)
  Ativo     Int?
  Recurso   Recurso[]
}

model ToleranciaAparelho {
  Id              Int           @id(map: "PK__Toleranc__3214EC07F6173CA5") @default(autoincrement())
  Valor           Decimal       @db.Decimal(10, 2)
  UnidadeMedidaId Int
  RecursoId       Int
  Recurso         Recurso       @relation(fields: [RecursoId], references: [Id], onUpdate: NoAction, map: "FK_Recurso_ToleranciaAparelho")
  UnidadeMedida   UnidadeMedida @relation(fields: [UnidadeMedidaId], references: [Id], onUpdate: NoAction, map: "FK_UnidadeMedida_ToleranciaAparelho")
}

model UnidadeAvaliacao {
  Id                      Int                    @id(map: "PK_UnidadeAvaliacao") @default(autoincrement())
  AgrupadorUnidadeId      Int?
  AgrupadorCentroId       Int?
  UnidadeNegocioId        Int?
  EmpresaId               Int?
  ProjetoId               Int?
  Tipo                    Int?
  ResponsavelId           Int?
  ValorPrevisto           Decimal?               @db.Decimal(14, 2)
  ValorRevisto            Decimal?               @db.Decimal(14, 2)
  ValorRealizado          Decimal?               @db.Decimal(14, 2)
  Resultado               Decimal?               @db.Decimal(14, 2)
  ScoreAvaliacaoId        Int?
  CenarioAvaliacaoId      Int?
  Peso                    Decimal?               @db.Decimal(6, 2)
  SegmentoIndicadorId     Int?
  ItemSegmentoIndicadorId Int?
  AgrupadorCentro         AgrupadorCentro?       @relation(fields: [AgrupadorCentroId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_UnidadeAvaliacao_AgrupadorCentro")
  AgrupadorUnidade        AgrupadorUnidade?      @relation(fields: [AgrupadorUnidadeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_UnidadeAvaliacao_AgrupadorUnidade")
  ItemSegmentoIndicador   ItemSegmentoIndicador? @relation(fields: [ItemSegmentoIndicadorId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_UnidadeAvaliacao_ItemSegmentoIndicador")
  Projeto                 Projeto?               @relation(fields: [ProjetoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_UnidadeAvaliacao_Projeto")
  ScoreAvaliacao          ScoreAvaliacao?        @relation(fields: [ScoreAvaliacaoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_UnidadeAvaliacao_ScoreAvaliacao")
  SegmentoIndicador       SegmentoIndicador?     @relation(fields: [SegmentoIndicadorId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_UnidadeAvaliacao_SegmentoIndicador")
  UnidadeNegocio          UnidadeNegocio?        @relation(fields: [UnidadeNegocioId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_UnidadeAvaliacao_UnidadeNegocio")
  CenarioAvaliacao        CenarioAvaliacao?      @relation(fields: [CenarioAvaliacaoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_UnidadeAvaliacaoCenarioAvaliacao")
}

model UnidadeCentro {
  Id                       Int                     @id(map: "PK_UnidadeCentroId") @default(autoincrement())
  IntegraKey               String?                 @db.NVarChar(100)
  Ano                      Int?
  EmpresaId                Int?
  UnidadeOrganizacionalId  Int?
  CentroResponsabilidadeId Int?
  ResponsavelInicial       Int?
  Valor1                   Decimal?                @db.Decimal(14, 2)
  ResponsavelSecundario    Int?
  Valor2                   Decimal?                @db.Decimal(14, 2)
  ResponsavelFinal         Int?
  Valor3                   Decimal?                @db.Decimal(14, 2)
  AlcadaAdministrador      Int?
  ResponsavelAlcadaTi      Int?
  CentroResponsabilidade   CentroResponsabilidade? @relation(fields: [CentroResponsabilidadeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_UnidadeCentro_CentroResponsabilidade")
  Empresa                  Empresa?                @relation(fields: [EmpresaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_UnidadeCentro_Empresa")
  UnidadeOrganizacional    UnidadeOrganizacional?  @relation(fields: [UnidadeOrganizacionalId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_UnidadeCentro_UnidadeOrganizacional")
}

model UnidadeCentroR {
  Id                       Int                     @id(map: "PK_UnidadeCentroRId") @default(autoincrement())
  IntegraKey               String?                 @db.NVarChar(100)
  Ano                      Int?
  EmpresaId                Int?
  UnidadeOrganizacionalId  Int?
  CentroResponsabilidadeId Int?
  ResponsavelInicial       Int?
  Valor1                   Decimal?                @db.Decimal(14, 2)
  ResponsavelSecundario    Int?
  Valor2                   Decimal?                @db.Decimal(14, 2)
  ResponsavelFinal         Int?
  Valor3                   Decimal?                @db.Decimal(14, 2)
  AlcadaAdministrador      Int?
  ResponsavelAlcadaTi      Int?
  IdO                      String?                 @db.VarChar(20)
  CentroResponsabilidade   CentroResponsabilidade? @relation(fields: [CentroResponsabilidadeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_UnidadeCentroR_CentroResponsabilidade")
  Empresa                  Empresa?                @relation(fields: [EmpresaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_UnidadeCentroR_Empresa")
  UnidadeOrganizacional    UnidadeOrganizacional?  @relation(fields: [UnidadeOrganizacionalId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_UnidadeCentroR_UnidadeOrganizacional")
}

model UnidadeControle {
  Id                     Int                      @id(map: "PK_UnidadeControle") @default(autoincrement())
  Nome                   String?                  @db.NVarChar(3000)
  ProdutoId              Int?
  UnidadeMedidaId        Int?
  Atibutos               String?                  @db.NVarChar(500)
  Ativo                  Int?
  Codigo                 String?                  @db.VarChar(10)
  Producao               Boolean?
  Descricao              String?                  @db.VarChar(500)
  ProdutoUnidadeControle ProdutoUnidadeControle[]
  Produto                Produto?                 @relation(fields: [ProdutoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_UnidadeControle_Produto")
  UnidadeControleProduto UnidadeControleProduto[]
}

model UnidadeControleProduto {
  Id                     Int              @id(map: "PK_UnidadeControleProduto") @default(autoincrement())
  Nome                   String?          @db.NVarChar(3000)
  ProdutoId              Int?
  UnidadeControleId      Int?
  UnidadeMedidaId        Int?
  Atendimento            String?          @db.NVarChar(500)
  IndicadorId            Int?
  Modalidade             String?          @db.NVarChar(500)
  InstrucaoPreenchimento String?
  Atributos              String?          @db.NVarChar(500)
  Ativo                  Int?
  ProdutoSMDId           Int?
  Indicador              Indicador?       @relation(fields: [IndicadorId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_UnidadeControleProduto_Indicador")
  Produto                Produto?         @relation(fields: [ProdutoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_UnidadeControleProduto_Produto")
  UnidadeControle        UnidadeControle? @relation(fields: [UnidadeControleId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_UnidadeControleProduto_UnidadeControle")
  UnidadeMedida          UnidadeMedida?   @relation(fields: [UnidadeMedidaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_UnidadeControleProduto_UnidadeMedida")
}

model UnidadeMedida {
  Id                        Int                         @id(map: "PK_UnidadeMedida") @default(autoincrement())
  Codigo                    String?                     @db.NVarChar(100)
  Nome                      String?                     @db.NVarChar(3000)
  Descricao                 String?
  Ativo                     Boolean?                    @default(true, map: "DF__UnidadeMe__Ativo__766C7FFC")
  CriterioAceitacaoAparelho CriterioAceitacaoAparelho[]
  Produto                   Produto[]
  ProdutoUnidadeControle    ProdutoUnidadeControle[]
  ToleranciaAparelho        ToleranciaAparelho[]
  UnidadeControleProduto    UnidadeControleProduto[]
}

model UnidadeNegocio {
  Id                                                   Int                             @id(map: "PK_UnidadeNegocio") @default(autoincrement())
  IntegraKey                                           String?                         @db.NVarChar(100)
  Codigo                                               String?                         @db.NVarChar(20)
  Nome                                                 String?                         @db.NVarChar(100)
  Sigla                                                String?                         @db.NVarChar(20)
  EmpresaId                                            Int?
  CalculaSustentabilidade                              Int?
  AgrupadorUnidadeId                                   Int?
  UF                                                   String?                         @db.Char(2)
  ID_MNC                                               Int?
  END_UND_NEG                                          String?                         @db.Char(100)
  NUM_END                                              String?                         @db.Char(8)
  COMP_END                                             String?                         @db.Char(100)
  CEP_UND_NEG                                          String?                         @db.Char(8)
  NUM_TEL                                              String?                         @db.Char(16)
  END_SITE                                             String?                         @db.VarChar(255)
  NUM_CGC                                              String?                         @db.Char(14)
  INS_MUN                                              String?                         @db.Char(20)
  INS_EST                                              String?                         @db.Char(20)
  NUM_JUN_COM                                          String?                         @db.Char(20)
  NOM_TIT                                              String?                         @db.Char(40)
  CNAE                                                 String?                         @db.VarChar(140)
  CodigoOrquestra                                      Int?
  EstadoId                                             Int?
  CidadeId                                             Int?
  Endereco                                             String?                         @db.NVarChar(200)
  Bairro                                               String?                         @db.NVarChar(200)
  Numero                                               String?                         @db.VarChar(10)
  Complemento                                          String?
  Cep                                                  String?                         @db.NVarChar(20)
  Email                                                String?                         @db.NVarChar(100)
  Telefone                                             String?                         @db.NVarChar(20)
  Site                                                 String?                         @db.NVarChar(200)
  Cnpj                                                 String?                         @db.NVarChar(100)
  InscricaoMunicipal                                   String?                         @db.NVarChar(200)
  InscricaoEstadual                                    String?                         @db.NVarChar(200)
  RazaoSocial                                          String?
  Responsavel                                          Int?
  AgendaServico                                        AgendaServico[]
  AgendaSSI                                            AgendaSSI[]
  AgendaUnidadeMovelEquipamento                        AgendaUnidadeMovelEquipamento[]
  OrcamentoRateado                                     OrcamentoRateado[]
  Pessoa_Pessoa_CarteiraUnidadeSENAIIdToUnidadeNegocio Pessoa[]                        @relation("Pessoa_CarteiraUnidadeSENAIIdToUnidadeNegocio")
  Pessoa_Pessoa_CarteiraUnidadeSESIIdToUnidadeNegocio  Pessoa[]                        @relation("Pessoa_CarteiraUnidadeSESIIdToUnidadeNegocio")
  PessoaUnidade                                        PessoaUnidade[]
  Producao                                             Producao[]
  Recurso                                              Recurso[]
  RecursoUnidade                                       RecursoUnidade[]
  UnidadeAvaliacao                                     UnidadeAvaliacao[]
  AgrupadorUnidade                                     AgrupadorUnidade?               @relation(fields: [AgrupadorUnidadeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_UnidadeNegocio_AgrupadorUnidade")
  Cidade                                               Cidade?                         @relation(fields: [CidadeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_UnidadeNegocio_Cidade")
  Empresa                                              Empresa?                        @relation(fields: [EmpresaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_UnidadeNegocio_Empresa")
  Estado                                               Estado?                         @relation(fields: [EstadoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_UnidadeNegocio_Estado")
  UnidadeOrganizacional                                UnidadeOrganizacional[]
  ValorIndicador                                       ValorIndicador[]
}

model UnidadeOperacional {
  Id                       Int                        @id(map: "PK_UnidadeOperacional") @default(autoincrement())
  Codigo                   String?                    @db.NVarChar(20)
  Nome                     String?                    @db.NVarChar(100)
  Descricao                String?                    @db.NVarChar(3000)
  RecursoId                Int?
  Ativo                    Int?
  DataValidade             DateTime?                  @db.DateTime
  CodigoFolha              String?                    @db.VarChar(100)
  LotacaoFisica            LotacaoFisica[]
  PlanejamentoOrcamentario PlanejamentoOrcamentario[]
  Setor                    Setor[]
  Recurso                  Recurso?                   @relation(fields: [RecursoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_UnidadeOperacionalRecurso")
}

model UnidadeOrganizacional {
  Id                          Int                        @id(map: "PK_UnidadeOrganizacional") @default(autoincrement())
  IntegraKey                  String?                    @db.NVarChar(100)
  Codigo                      String?                    @db.NVarChar(20)
  Nome                        String?                    @db.NVarChar(100)
  Nivel                       Int?
  Analitico                   Int?
  Ano                         Int?
  Sigla                       String?                    @db.NVarChar(20)
  CodigoReduzido              String?                    @db.NVarChar(20)
  Ativo                       Int?
  EmpresaId                   Int?
  TipoUnidadeId               Int?
  UnidadeNegocioId            Int?
  Superior                    Int?
  AgrupadorUnidadeId          Int?
  CodigoMascara               String?                    @db.NVarChar(50)
  ClassificadorPrimario       Int?
  ClassificadorSecundario     Int?
  CodigoSMD                   String?                    @db.VarChar(10)
  CodigoOrquestra             Int?
  AgendaServico               AgendaServico[]
  AgendaSSI                   AgendaSSI[]
  LotacaoOrcamentaria         LotacaoOrcamentaria[]
  Orcamento                   Orcamento[]
  OrcamentoRateado            OrcamentoRateado[]
  PlanejamentoOrcamentario    PlanejamentoOrcamentario[]
  PlanejamentoProducao        PlanejamentoProducao[]
  Producao                    Producao[]
  ProducaoMeta                ProducaoMeta[]
  ProdutoUnidade              ProdutoUnidade[]
  ProjetoAtividade            ProjetoAtividade[]
  ProjetoCentro               ProjetoCentro[]
  Proposta                    Proposta[]
  PropostaItem                PropostaItem[]
  RateioMaoDeObra             RateioMaoDeObra[]
  RateioUnidade               RateioUnidade[]
  UnidadeCentro               UnidadeCentro[]
  UnidadeCentroR              UnidadeCentroR[]
  AgrupadorUnidade            AgrupadorUnidade?          @relation(fields: [AgrupadorUnidadeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_UnidadeOrganizacional_AgrupadorUnidade")
  Empresa                     Empresa?                   @relation(fields: [EmpresaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_UnidadeOrganizacional_Empresa")
  UnidadeOrganizacional       UnidadeOrganizacional?     @relation("UnidadeOrganizacionalToUnidadeOrganizacional", fields: [Superior], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_UnidadeOrganizacional_Superior")
  other_UnidadeOrganizacional UnidadeOrganizacional[]    @relation("UnidadeOrganizacionalToUnidadeOrganizacional")
  TipoUnidade                 TipoUnidade?               @relation(fields: [TipoUnidadeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_UnidadeOrganizacional_TipoUnidade")
  UnidadeNegocio              UnidadeNegocio?            @relation(fields: [UnidadeNegocioId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_UnidadeOrganizacional_UnidadeNegocio")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model Unidades171 {
  Id       Int     @default(autoincrement())
  Unidade  String? @db.VarChar(255)
  Entidade String? @db.VarChar(255)

  @@ignore
}

model UsoEquipamento {
  Id        Int       @id(map: "PK_UsoEquipamento") @default(autoincrement())
  Descricao String?   @db.VarChar(100)
  Ativo     Boolean?
  Recurso   Recurso[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model Vacina_ListaImunizados {
  Id                       Int       @default(autoincrement())
  NomeDependente           String?   @db.VarChar(Max)
  DataNascimentoDependente DateTime? @db.DateTime
  CPFDependente            String?   @db.VarChar(11)
  BeneficiadoId            Int?
  PessoaId                 Int?
  Trabalhador              Boolean?
  Imunizado                Boolean?
  DataRealizacao           DateTime? @db.DateTime
  UnidadeOrquestraId       Int
  PropostaId               Int
  CadastradoEm             DateTime? @default(now(), map: "DF_Vacina_ListaImunizados_CadastradoEm") @db.DateTime

  @@ignore
}

model ValorIndicador {
  Id                          Int                        @id(map: "PK_ValorIndicador") @default(autoincrement())
  IndicadorId                 Int?
  ValorPrevisto               Decimal?                   @db.Decimal(14, 2)
  ValorRevisto                Decimal?                   @db.Decimal(14, 2)
  ValorRealizado              Decimal?                   @db.Decimal(14, 2)
  ValorRevistoAcumulado       Decimal?                   @db.Decimal(14, 2)
  ValorRealizadoAcumulado     Decimal?                   @db.Decimal(14, 2)
  Ano                         Int?
  Mes                         Int?
  ScoreAvaliacaoId            Int?
  PosicaoInicial              Decimal?                   @db.Decimal(14, 2)
  EvolucaoPlanejado           Decimal?                   @db.Decimal(14, 2)
  EvolucaoRealizado           Decimal?                   @db.Decimal(14, 2)
  ResultadoImage              String?                    @db.NVarChar(500)
  DimensaoIndicadorId         Int?
  AgrupadorUnidadeId          Int?
  AgrupadorCentroId           Int?
  UnidadeNegocioId            Int?
  ProjetoId                   Int?
  EmpresaId                   Int?
  Origem                      Int?
  Informacao                  Int?
  DescricaoInformacao         String?                    @db.VarChar(500)
  Comparativo                 Decimal?                   @db.Decimal(14, 2)
  ReferenciaComparativo       String?                    @db.VarChar(100)
  AnaliseGestor               String?                    @db.VarChar(3000)
  AnaliseGeral                String?                    @db.VarChar(3000)
  ValorPrevistoAcumulado      Decimal?                   @db.Decimal(16, 2)
  UnidadeAvaliacaoId          Int?
  CenarioAvaliacaoId          Int?
  Peso                        Decimal?                   @db.Decimal(14, 2)
  ItemSegmentoId              Int?
  Meta                        Decimal?                   @db.Decimal(14, 2)
  MetaAcumulada               Decimal?                   @db.Decimal(14, 2)
  ResultadoMeta               Decimal?                   @db.Decimal(14, 2)
  ResultadoMetaAcumulada      Decimal?                   @db.Decimal(14, 2)
  ResultadoPlanejadoAcumulado Decimal?                   @db.Decimal(14, 2)
  ResultadoRealizadoAcumulado Decimal?                   @db.Decimal(14, 2)
  SegmentoIndicadorId         Int?
  PeriodoId                   Int?
  ResultadoPlanejado          Decimal?                   @db.Decimal(16, 2)
  DescritivoValorIndicador    DescritivoValorIndicador[]
  AgrupadorCentro             AgrupadorCentro?           @relation(fields: [AgrupadorCentroId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ValorIndicador_AgrupadorCentro")
  AgrupadorUnidade            AgrupadorUnidade?          @relation(fields: [AgrupadorUnidadeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ValorIndicador_AgrupadorUnidade")
  DimensaoIndicador           DimensaoIndicador?         @relation(fields: [DimensaoIndicadorId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ValorIndicador_DimensaoIndicador")
  Empresa                     Empresa?                   @relation(fields: [EmpresaId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ValorIndicador_Empresa")
  Indicador                   Indicador?                 @relation(fields: [IndicadorId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ValorIndicador_Indicador")
  ItemSegmentoIndicador       ItemSegmentoIndicador?     @relation(fields: [ItemSegmentoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ValorIndicador_ItemSegmentoIndicador")
  Projeto                     Projeto?                   @relation(fields: [ProjetoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ValorIndicador_Projeto")
  ScoreAvaliacao              ScoreAvaliacao?            @relation(fields: [ScoreAvaliacaoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ValorIndicador_ScoreAvaliacao")
  SegmentoIndicador           SegmentoIndicador?         @relation(fields: [SegmentoIndicadorId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ValorIndicador_SegmentoIndicador")
  UnidadeNegocio              UnidadeNegocio?            @relation(fields: [UnidadeNegocioId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ValorIndicador_UnidadeNegocio")
}

model ValorMapaEstrategico {
  Id                 Int              @id(map: "PK_ValorMapaEstrategico") @default(autoincrement())
  MapaEstrategicoId  Int?
  Mes                Int?
  Ano                Int?
  Resultado          Decimal?         @db.Decimal(16, 2)
  ResultadoAcumulado Decimal?         @db.Decimal(16, 2)
  MapaEstrategico    MapaEstrategico? @relation(fields: [MapaEstrategicoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ValorMapaEstrategico_MapaEstrategico")
}

model ValorSalario {
  Id                       Int                     @id(map: "PK_ValorSalario") @default(autoincrement())
  RecursoId                Int?
  OrigemSalarioId          Int?
  Ano                      Int?
  Mes                      Int?
  ValorPrevisto            Decimal?                @db.Decimal(16, 2)
  ValorRevisto             Decimal?                @db.Decimal(16, 2)
  ValorReal                Decimal?                @db.Decimal(16, 2)
  CentroResponsabilidadeId Int?
  UnidadeOrganizacionalId  Int?
  OrigemSalario            OrigemSalario?          @relation(fields: [OrigemSalarioId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ValorSalario_OrigemSalario")
  Recurso                  Recurso?                @relation(fields: [RecursoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ValorSalario_Recurso")
  CentroResponsabilidade   CentroResponsabilidade? @relation(fields: [CentroResponsabilidadeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ValorSalarioCentroResponsabilidade")
}

model VersaoBanco {
  Id         Int       @id(map: "PK_VersaoBanco") @default(autoincrement())
  Versao     String?   @db.NVarChar(500)
  Data       DateTime? @db.DateTime
  Observacao String?
}

model VidasAtivas {
  Id                      Int       @id(map: "PK_VidasAtivas") @default(autoincrement())
  EstadoId                Int?
  UnidadeExecutora        String?   @db.VarChar(100)
  PessoaId                Int?
  TrabalhadoresAtivos     Int?
  InativosEstabelecimento Int?
  TotalEstabelecimento    Int?
  Tipo                    String?   @db.VarChar(20)
  DataGeracao             DateTime? @db.DateTime
  Estado                  Estado?   @relation(fields: [EstadoId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_VidasAtivas_Estado")
}
